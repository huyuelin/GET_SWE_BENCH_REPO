{"instance_id": "sympy__sympy-11618", "num_tokens of the message": 32093, "message": "Please look through the following GitHub problem description and Repository structure with function names of each file and provide a list of files that one would need to edit to fix the problem.\n\n### GitHub Problem Description ###\ndistance calculation wrong\n``` python\n>>> Point(2,0).distance(Point(1,0,2))\n1\n```\n\nThe 3rd dimension is being ignored when the Points are zipped together to calculate the distance so `sqrt((2-1)**2 + (0-0)**2)` is being computed instead of `sqrt(5)`.\n\n\n\n###\n\n### Repository Structure ###\nsympy/\n    setup.py\n      Classes:\n        audit\n        clean\n        test_sympy\n        run_benchmarks\n    setupegg.py\n    abc.py\n      Functions:\n        clashing\n    galgebra.py\n    __init__.py\n      Functions:\n        __sympy_debug\n        enable_warnings\n    release.py\n    conftest.py\n      Functions:\n        process_split\n        pytest_report_header\n        pytest_terminal_summary\n        pytest_addoption\n        pytest_collection_modifyitems\n        file_clear_cache\n        check_disabled\n    core/\n        exprtools.py\n          Classes:\n            Factors\n            Term\n          Functions:\n            _isnumber\n            _monotonic_sign\n            decompose_power\n            decompose_power_rat\n            _gcd_terms\n            gcd_terms\n            factor_terms\n            _mask_nc\n            factor_nc\n            mask\n            handle\n            do\n            numbered_names\n            Dummy\n            _pemexpand\n        add.py\n          Classes:\n            Add\n          Functions:\n            _addsort\n            _unevaluated_Add\n        evaluate.py\n          Classes:\n            _global_evaluate\n          Functions:\n            evaluate\n        singleton.py\n          Classes:\n            SingletonRegistry\n            Singleton\n          Functions:\n            __getnewargs__\n        evalf.py\n          Classes:\n            PrecisionExhausted\n            EvalfMixin\n          Functions:\n            bitcount\n            fastlog\n            pure_complex\n            scaled_zero\n            iszero\n            complex_accuracy\n            get_abs\n            get_complex_part\n            evalf_abs\n            evalf_re\n            evalf_im\n            finalize_complex\n            chop_parts\n            check_target\n            get_integer_part\n            evalf_ceiling\n            evalf_floor\n            add_terms\n            evalf_add\n            evalf_mul\n            evalf_pow\n            evalf_trig\n            evalf_log\n            evalf_atan\n            evalf_subs\n            evalf_piecewise\n            evalf_bernoulli\n            as_mpmath\n            do_integral\n            evalf_integral\n            check_convergence\n            hypsum\n            evalf_prod\n            evalf_sum\n            evalf_symbol\n            _create_evalf_table\n            evalf\n            N\n            calc_part\n            f\n            summand\n        compatibility.py\n          Classes:\n            NotIterable\n            _HashedSeq\n            Iterator\n            metaclass\n          Functions:\n            with_metaclass\n            iterable\n            is_sequence\n            as_int\n            default_sort_key\n            _nodes\n            ordered\n            _getenv\n            _make_key\n            lru_cache\n            u_decode\n            u_decode\n            exec_\n            decorating_function\n            cache_info\n            cache_clear\n            wrapper\n            wrapper\n            wrapper\n        symbol.py\n          Classes:\n            Symbol\n            Dummy\n            Wild\n          Functions:\n            symbols\n            var\n            traverse\n            literal\n        __init__.py\n        mod.py\n          Classes:\n            Mod\n          Functions:\n            doit\n        coreerrors.py\n          Classes:\n            BaseCoreError\n            NonCommutativeExpression\n        power.py\n          Classes:\n            Pow\n          Functions:\n            isqrt\n            integer_nthroot\n            _check\n            pred\n            e2int\n            _half\n            _n2\n        operations.py\n          Classes:\n            AssocOp\n            ShortCircuit\n            LatticeOp\n          Functions:\n            _ncsplit\n            is_in\n        assumptions.py\n          Classes:\n            StdFactKB\n            ManagedProperties\n          Functions:\n            as_property\n            make_property\n            _ask\n            getit\n        alphabets.py\n        relational.py\n          Classes:\n            Relational\n            Equality\n            Unequality\n            _Inequality\n            _Greater\n            _Less\n            GreaterThan\n            LessThan\n            StrictGreaterThan\n            StrictLessThan\n        numbers.py\n          Classes:\n            Number\n            Float\n            Rational\n            Integer\n            AlgebraicNumber\n            RationalConstant\n            IntegerConstant\n            Zero\n            One\n            NegativeOne\n            Half\n            Infinity\n            NegativeInfinity\n            NaN\n            ComplexInfinity\n            NumberSymbol\n            Exp1\n            Pi\n            GoldenRatio\n            EulerGamma\n            Catalan\n            ImaginaryUnit\n          Functions:\n            comp\n            mpf_norm\n            seterr\n            _decimal_to_Rational_prec\n            _literal_float\n            igcd\n            ilcm\n            igcdex\n            mod_inverse\n            _intcache_printinfo\n            int_trace\n            sympify_fractions\n            sympify_mpmath\n            sympify_complex\n            Integer_tracer\n            sympify_mpz\n            sympify_mpq\n        cache.py\n          Classes:\n            _cache\n          Functions:\n            __cacheit_nocache\n            __cacheit_debug\n            _getenv\n            __cacheit\n            func_wrapper\n            __cacheit\n            func_wrapper\n            wrapper\n            func_wrapper\n            wrapper\n        containers.py\n          Classes:\n            Tuple\n            Dict\n          Functions:\n            tuple_wrapper\n            wrap_tuples\n        logic.py\n          Classes:\n            Logic\n            AndOr_Base\n            And\n            Or\n            Not\n          Functions:\n            _torf\n            _fuzzy_group\n            fuzzy_bool\n            fuzzy_and\n            fuzzy_not\n            fuzzy_or\n        multidimensional.py\n          Classes:\n            vectorize\n          Functions:\n            apply_on_element\n            iter_copy\n            structure_copy\n            f_reduced\n            wrapper\n        mul.py\n          Classes:\n            NC_Marker\n            Mul\n          Functions:\n            _mulsort\n            _unevaluated_Mul\n            prod\n            _keep_coeff\n            expand_2arg\n            do\n            _gather\n            check\n            base_exp\n            breakup\n            rejoin\n            ndiv\n            _handle_for_oo\n        sympify.py\n          Classes:\n            SympifyError\n            CantSympify\n          Functions:\n            sympify\n            _sympify\n            kernS\n            _clear\n        decorators.py\n          Functions:\n            deprecated\n            _sympifyit\n            __sympifyit\n            call_highest_priority\n            deprecated_decorator\n            deco\n            priority_decorator\n            new_func\n            __sympifyit_wrapper\n            __sympifyit_wrapper\n            binary_op_wrapper\n        basic.py\n          Classes:\n            Basic\n            Atom\n            preorder_traversal\n          Functions:\n            _aresame\n            _atomic\n            _make_find_query\n            inner_key\n            the_call_method_is_overridden\n            fallback\n            rec_replace\n        rules.py\n          Classes:\n            Transform\n        facts.py\n          Classes:\n            TautologyDetected\n            Prover\n            FactRules\n            InconsistentAssumptions\n            FactKB\n          Functions:\n            _base_fact\n            _as_pair\n            transitive_closure\n            deduce_alpha_implications\n            apply_beta_to_alpha_route\n            rules_2prereq\n        core.py\n          Classes:\n            Registry\n            BasicMeta\n        function.py\n          Classes:\n            PoleError\n            ArgumentIndexError\n            FunctionClass\n            Application\n            Function\n            AppliedUndef\n            UndefinedFunction\n            WildFunction\n            Derivative\n            Lambda\n            Subs\n            CustomStrPrinter\n          Functions:\n            _coeff_isneg\n            _getnargs\n            _getnargs_old\n            _getnargs_new\n            diff\n            expand\n            _mexpand\n            expand_mul\n            expand_multinomial\n            expand_log\n            expand_func\n            expand_trig\n            expand_complex\n            expand_power_base\n            expand_power_exp\n            count_ops\n            nfloat\n            mystr\n            bad\n            _subset\n        trace.py\n          Classes:\n            Tr\n          Functions:\n            _is_scalar\n            _cycle_permute\n            _rearrange_args\n        expr.py\n          Classes:\n            Expr\n            AtomicExpr\n          Functions:\n            _mag\n            neg\n            key\n            incommon\n            find\n            has\n            _expand_hint_key\n            yield_lseries\n        benchmarks/\n            bench_basic.py\n              Functions:\n                timeit_Symbol_meth_lookup\n                timeit_S_lookup\n                timeit_Symbol_eq_xy\n            bench_expand.py\n              Functions:\n                timeit_expand_nothing_todo\n                bench_expand_32\n                timeit_expand_complex_number_1\n                timeit_expand_complex_number_2\n            bench_sympify.py\n              Functions:\n                timeit_sympify_1\n                timeit_sympify_x\n            bench_arit.py\n              Functions:\n                timeit_neg\n                timeit_Add_x1\n                timeit_Add_1x\n                timeit_Add_x05\n                timeit_Add_xy\n                timeit_Add_xyz\n                timeit_Mul_xy\n                timeit_Mul_xyz\n                timeit_Div_xy\n                timeit_Div_2y\n            __init__.py\n            bench_assumptions.py\n              Functions:\n                timeit_x_is_integer\n                timeit_Integer_is_irrational\n            bench_numbers.py\n              Functions:\n                timeit_Integer_create\n                timeit_Integer_int\n                timeit_neg_one\n                timeit_Integer_neg\n                timeit_Integer_abs\n                timeit_Integer_sub\n                timeit_abs_pi\n                timeit_neg_oo\n                timeit_Integer_add_i1\n                timeit_Integer_add_ij\n                timeit_Integer_add_Rational\n                timeit_Integer_mul_i4\n                timeit_Integer_mul_ij\n                timeit_Integer_mul_Rational\n                timeit_Integer_eq_i3\n                timeit_Integer_ed_Rational\n                timeit_integer_nthroot\n                timeit_number_igcd_23_17\n                timeit_number_igcd_60_3600\n                timeit_Rational_add_r1\n                timeit_Rational_add_rq\n    calculus/\n        finite_diff.py\n          Functions:\n            finite_diff_weights\n            apply_finite_diff\n            _as_finite_diff\n            differentiate_finite\n        euler.py\n          Functions:\n            euler_equations\n        __init__.py\n        singularities.py\n          Functions:\n            singularities\n            is_increasing\n            is_strictly_increasing\n            is_decreasing\n            is_strictly_decreasing\n            is_monotonic\n        util.py\n          Classes:\n            AccumulationBounds\n          Functions:\n            continuous_domain\n            function_range\n            not_empty_in\n            periodicity\n            _periodicity\n            lcim\n            elm_domain\n    deprecated/\n        class_registry.py\n          Classes:\n            ClassRegistry\n        __init__.py\n    assumptions/\n        satask.py\n          Functions:\n            satask\n            get_relevant_facts\n            get_all_relevant_facts\n        assume.py\n          Classes:\n            AssumptionsContext\n            AppliedPredicate\n            Predicate\n          Functions:\n            assuming\n        ask_generated.py\n          Functions:\n            get_known_facts_cnf\n            get_known_facts_dict\n        sathandlers.py\n          Classes:\n            UnevaluatedOnFree\n            AllArgs\n            AnyArgs\n            ExactlyOneArg\n            CheckOldAssump\n            CheckIsPrime\n            CustomLambda\n            ClassFactRegistry\n          Functions:\n            _old_assump_replacer\n            evaluate_old_assump\n            register_fact\n        __init__.py\n        ask.py\n          Classes:\n            AssumptionKeys\n          Functions:\n            _extract_facts\n            ask\n            ask_full_inference\n            register_handler\n            remove_handler\n            single_fact_lookup\n            compute_known_facts\n            get_known_facts_keys\n            get_known_facts\n        refine.py\n          Functions:\n            refine\n            refine_abs\n            refine_Pow\n            refine_atan2\n            refine_Relational\n        handlers/\n            order.py\n              Classes:\n                AskNegativeHandler\n                AskNonNegativeHandler\n                AskNonZeroHandler\n                AskZeroHandler\n                AskNonPositiveHandler\n                AskPositiveHandler\n              Functions:\n                nonz\n            __init__.py\n            sets.py\n              Classes:\n                AskIntegerHandler\n                AskRationalHandler\n                AskIrrationalHandler\n                AskRealHandler\n                AskExtendedRealHandler\n                AskHermitianHandler\n                AskComplexHandler\n                AskImaginaryHandler\n                AskAntiHermitianHandler\n                AskAlgebraicHandler\n            common.py\n              Classes:\n                AskHandler\n                CommonHandler\n                AskCommutativeHandler\n                TautologicalHandler\n              Functions:\n                test_closed_group\n            matrices.py\n              Classes:\n                AskSquareHandler\n                AskSymmetricHandler\n                AskInvertibleHandler\n                AskOrthogonalHandler\n                AskUnitaryHandler\n                AskFullRankHandler\n                AskPositiveDefiniteHandler\n                AskUpperTriangularHandler\n                AskLowerTriangularHandler\n                AskDiagonalHandler\n                AskIntegerElementsHandler\n                AskRealElementsHandler\n                AskComplexElementsHandler\n              Functions:\n                _Factorization\n                BM_elements\n                MS_elements\n                MatMul_elements\n            calculus.py\n              Classes:\n                AskFiniteHandler\n            ntheory.py\n              Classes:\n                AskPrimeHandler\n                AskCompositeHandler\n                AskEvenHandler\n                AskOddHandler\n    solvers/\n        diophantine.py\n          Functions:\n            _is_int\n            _sorted_tuple\n            _remove_gcd\n            _rational_pq\n            _nint_or_floor\n            _odd\n            _even\n            diophantine\n            merge_solution\n            diop_solve\n            classify_diop\n            diop_linear\n            _diop_linear\n            base_solution_linear\n            divisible\n            diop_quadratic\n            _diop_quadratic\n            is_solution_quad\n            diop_DN\n            cornacchia\n            PQa\n            diop_bf_DN\n            equivalent\n            length\n            transformation_to_DN\n            _transformation_to_DN\n            find_DN\n            _find_DN\n            check_param\n            diop_ternary_quadratic\n            _diop_ternary_quadratic\n            transformation_to_normal\n            _transformation_to_normal\n            parametrize_ternary_quadratic\n            _parametrize_ternary_quadratic\n            diop_ternary_quadratic_normal\n            _diop_ternary_quadratic_normal\n            sqf_normal\n            square_factor\n            reconstruct\n            ldescent\n            descent\n            gaussian_reduce\n            dot\n            norm\n            holzer\n            diop_general_pythagorean\n            _diop_general_pythagorean\n            diop_general_sum_of_squares\n            _diop_general_sum_of_squares\n            diop_general_sum_of_even_powers\n            _diop_general_sum_of_even_powers\n            partition\n            prime_as_sum_of_two_squares\n            sum_of_three_squares\n            sum_of_four_squares\n            power_representation\n            pow_rep_recursive\n            sum_of_squares\n            _can_do_sum_of_squares\n        pde.py\n          Functions:\n            pdsolve\n            _helper_simplify\n            _handle_Integral\n            classify_pde\n            checkpdesol\n            pde_1st_linear_constant_coeff_homogeneous\n            pde_1st_linear_constant_coeff\n            pde_1st_linear_variable_coeff\n            _simplify_variable_coeff\n            pde_separate\n            pde_separate_add\n            pde_separate_mul\n            _separate\n        bivariate.py\n          Functions:\n            _filtered_gens\n            _mostfunc\n            _linab\n            _lambert\n            _solve_lambert\n            bivariate_type\n            ok\n        solvers.py\n          Functions:\n            _ispow\n            _simple_dens\n            denoms\n            checksol\n            check_assumptions\n            solve\n            _solve\n            _solve_system\n            solve_linear\n            minsolve_linear_system\n            solve_linear_system\n            solve_undetermined_coeffs\n            solve_linear_system_LU\n            det_perm\n            det_minor\n            det_quick\n            inv_quick\n            _tsolve\n            nsolve\n            _invert\n            unrad\n            _sympified_list\n            _has_piecewise\n            _cov\n            _canonical\n            _Q\n            _take\n            _rads_bases_lcm\n            _do_dict\n            _ok_syms\n            update\n            _as_base_q\n            _norm2\n            _expand\n            _t\n        __init__.py\n        polysys.py\n          Classes:\n            SolveFailed\n          Functions:\n            solve_poly_system\n            solve_biquadratic\n            solve_generic\n            solve_triangulated\n            _is_univariate\n            _subs_root\n            _solve_reduced_system\n        deutils.py\n          Functions:\n            _preprocess\n            ode_order\n            _desolve\n        recurr.py\n          Functions:\n            rsolve_poly\n            rsolve_ratio\n            rsolve_hyper\n            rsolve\n            _zero_vector\n            _one_vector\n            _delta\n        ode.py\n          Functions:\n            sub_func_doit\n            get_numbered_constants\n            dsolve\n            _helper_simplify\n            classify_ode\n            classify_sysode\n            check_linear_2eq_order1\n            check_linear_2eq_order2\n            check_linear_3eq_order1\n            check_linear_neq_order1\n            check_nonlinear_2eq_order1\n            check_nonlinear_2eq_order2\n            check_nonlinear_3eq_order1\n            check_nonlinear_3eq_order2\n            checksysodesol\n            odesimp\n            checkodesol\n            ode_sol_simplicity\n            _get_constant_subexpressions\n            __remove_linear_redundancies\n            constantsimp\n            constant_renumber\n            _handle_Integral\n            ode_1st_exact\n            ode_1st_homogeneous_coeff_best\n            ode_1st_homogeneous_coeff_subs_dep_div_indep\n            ode_1st_homogeneous_coeff_subs_indep_div_dep\n            homogeneous_order\n            ode_1st_linear\n            ode_Bernoulli\n            ode_Riccati_special_minus2\n            ode_Liouville\n            ode_2nd_power_series_ordinary\n            ode_2nd_power_series_regular\n            _frobenius\n            _nth_linear_match\n            ode_nth_linear_euler_eq_homogeneous\n            ode_nth_linear_euler_eq_nonhomogeneous_undetermined_coefficients\n            ode_nth_linear_euler_eq_nonhomogeneous_variation_of_parameters\n            ode_almost_linear\n            _linear_coeff_match\n            ode_linear_coefficients\n            ode_separable_reduced\n            ode_1st_power_series\n            ode_nth_linear_constant_coeff_homogeneous\n            ode_nth_linear_constant_coeff_undetermined_coefficients\n            _solve_undetermined_coefficients\n            _undetermined_coefficients_match\n            ode_nth_linear_constant_coeff_variation_of_parameters\n            _solve_variation_of_parameters\n            ode_separable\n            checkinfsol\n            ode_lie_group\n            _lie_group_remove\n            infinitesimals\n            lie_heuristic_abaco1_simple\n            lie_heuristic_abaco1_product\n            lie_heuristic_bivariate\n            lie_heuristic_chi\n            lie_heuristic_function_sum\n            lie_heuristic_abaco2_similar\n            lie_heuristic_abaco2_unique_unknown\n            lie_heuristic_abaco2_unique_general\n            lie_heuristic_linear\n            sysode_linear_2eq_order1\n            _linear_2eq_order1_type1\n            _linear_2eq_order1_type2\n            _linear_2eq_order1_type3\n            _linear_2eq_order1_type4\n            _linear_2eq_order1_type5\n            _linear_2eq_order1_type6\n            _linear_2eq_order1_type7\n            sysode_linear_2eq_order2\n            _linear_2eq_order2_type1\n            _linear_2eq_order2_type2\n            _linear_2eq_order2_type3\n            _linear_2eq_order2_type4\n            _linear_2eq_order2_type5\n            _linear_2eq_order2_type6\n            _linear_2eq_order2_type7\n            _linear_2eq_order2_type8\n            _linear_2eq_order2_type9\n            _linear_2eq_order2_type10\n            _linear_2eq_order2_type11\n            sysode_linear_3eq_order1\n            _linear_3eq_order1_type1\n            _linear_3eq_order1_type2\n            _linear_3eq_order1_type3\n            _linear_3eq_order1_type4\n            sysode_linear_neq_order1\n            _linear_neq_order1_type1\n            sysode_nonlinear_2eq_order1\n            _nonlinear_2eq_order1_type1\n            _nonlinear_2eq_order1_type2\n            _nonlinear_2eq_order1_type3\n            _nonlinear_2eq_order1_type4\n            _nonlinear_2eq_order1_type5\n            sysode_nonlinear_3eq_order1\n            _nonlinear_3eq_order1_type1\n            _nonlinear_3eq_order1_type2\n            _nonlinear_3eq_order1_type3\n            _nonlinear_3eq_order1_type4\n            _nonlinear_3eq_order1_type5\n            _sympify\n            linearity_check\n            check_type\n            _sympify\n            _recursive_walk\n            _linear\n            _recursive_walk\n            _conditional_term_factoring\n            _constant_renumber\n            abc\n            match\n            _test_term\n            _get_trial_set\n            is_complex\n            is_complex_conjugate\n            check_type\n            recur_len\n            _test_term\n            _remove_coefficient\n            _expand\n        decompogen.py\n          Functions:\n            decompogen\n            compogen\n        solveset.py\n          Functions:\n            _invert\n            invert_real\n            _invert_real\n            _invert_complex\n            domain_check\n            _domain_check\n            _is_finite_with_finite_vars\n            _is_function_class_equation\n            _solve_as_rational\n            _solve_trig\n            _solve_as_poly\n            _has_rational_power\n            _solve_radical\n            _solve_abs\n            solve_decomposition\n            _solveset\n            solveset\n            _invalid_solutions\n            solveset_real\n            solveset_complex\n            solvify\n            linear_eq_to_matrix\n            linsolve\n            _return_conditionset\n            substitution\n            _solveset_work\n            _handle_positive_dimensional\n            _handle_zero_dimensional\n            _separate_poly_nonpoly\n            nonlinsolve\n            assumptions\n            _unsolved_syms\n            add_intersection_complement\n            _extract_main_soln\n            _check_exclude\n            _restore_imgset\n            _append_eq\n            _append_new_soln\n            _new_order_result\n            _solve_using_known_values\n            inv\n        inequalities.py\n          Functions:\n            solve_poly_inequality\n            solve_poly_inequalities\n            solve_rational_inequalities\n            reduce_rational_inequalities\n            reduce_abs_inequality\n            reduce_abs_inequalities\n            solve_univariate_inequality\n            _solve_inequality\n            _reduce_inequalities\n            reduce_inequalities\n            _bottom_up_scan\n            valid\n        benchmarks/\n            bench_solvers.py\n              Functions:\n                timeit_linsolve_trivial\n            __init__.py\n    integrals/\n        rationaltools.py\n          Functions:\n            ratint\n            ratint_ratpart\n            ratint_logpart\n            log_to_atan\n            log_to_real\n            _include_sign\n        transforms.py\n          Classes:\n            IntegralTransformError\n            IntegralTransform\n            MellinTransform\n            MellinTransformStripError\n            InverseMellinTransform\n            LaplaceTransform\n            InverseLaplaceTransform\n            FourierTypeTransform\n            FourierTransform\n            InverseFourierTransform\n            SineCosineTypeTransform\n            SineTransform\n            InverseSineTransform\n            CosineTransform\n            InverseCosineTransform\n            HankelTypeTransform\n            HankelTransform\n            InverseHankelTransform\n          Functions:\n            _simplify\n            _noconds_\n            _default_integrator\n            _mellin_transform\n            mellin_transform\n            _rewrite_sin\n            _rewrite_gamma\n            _inverse_mellin_transform\n            inverse_mellin_transform\n            _simplifyconds\n            _laplace_transform\n            laplace_transform\n            _inverse_laplace_transform\n            inverse_laplace_transform\n            _fourier_transform\n            fourier_transform\n            inverse_fourier_transform\n            _sine_cosine_transform\n            sine_transform\n            inverse_sine_transform\n            cosine_transform\n            inverse_cosine_transform\n            _hankel_transform\n            hankel_transform\n            inverse_hankel_transform\n            make_wrapper\n            process_conds\n            left\n            exception\n            power\n            bigger\n            replie\n            replue\n            repl\n            process_conds\n            cnt\n            sbs\n            pw_simp\n            simp_heaviside\n            simp_exp\n            wrapper\n            linear_arg\n        meijerint_doc.py\n        singularityfunctions.py\n          Functions:\n            singularityintegrate\n        heurisch.py\n          Classes:\n            BesselTable\n            DiffCache\n          Functions:\n            components\n            _symbols\n            heurisch_wrapper\n            heurisch\n            _substitute\n            _derivation\n            _deflation\n            _splitter\n            _exponent\n            _integrate\n            find_non_syms\n        __init__.py\n        rde.py\n          Functions:\n            order_at\n            order_at_oo\n            weak_normalizer\n            normal_denom\n            special_denom\n            bound_degree\n            spde\n            no_cancel_b_large\n            no_cancel_b_small\n            no_cancel_equal\n            cancel_primitive\n            cancel_exp\n            solve_poly_rde\n            rischDE\n        prde.py\n          Functions:\n            prde_normal_denom\n            real_imag\n            prde_special_denom\n            prde_linear_constraints\n            constant_system\n            prde_spde\n            prde_no_cancel_b_large\n            prde_no_cancel_b_small\n            param_rischDE\n            limited_integrate_reduce\n            limited_integrate\n            parametric_log_deriv_heu\n            parametric_log_deriv\n            is_deriv_k\n            is_log_deriv_k_t_radical\n            is_log_deriv_k_t_radical_in_field\n        meijerint.py\n          Classes:\n            _CoeffExpValueError\n            IsNonPositiveInteger\n          Functions:\n            _has\n            _create_lookup_table\n            _mytype\n            _get_coeff_exp\n            _exponents\n            _functions\n            _find_splitting_points\n            _split_mul\n            _mul_args\n            _mul_as_two_parts\n            _inflate_g\n            _flip_g\n            _inflate_fox_h\n            _dummy\n            _dummy_\n            _is_analytic\n            _condsimp\n            _eval_cond\n            _my_principal_branch\n            _rewrite_saxena_1\n            _check_antecedents_1\n            _int0oo_1\n            _rewrite_saxena\n            _check_antecedents\n            _int0oo\n            _rewrite_inversion\n            _check_antecedents_inversion\n            _int_inversion\n            _rewrite_single\n            _rewrite1\n            _rewrite2\n            meijerint_indefinite\n            _meijerint_indefinite_1\n            meijerint_definite\n            _guess_expansion\n            _meijerint_definite_2\n            _meijerint_definite_3\n            _my_unpolarify\n            _meijerint_definite_4\n            meijerint_inversion\n            wild\n            add\n            addi\n            constant\n            A1\n            tmpadd\n            tmpadd\n            make_log1\n            make_log2\n            make_log3\n            _exponents_\n            compute_innermost\n            inflate\n            tr\n            repl_eq\n            tr\n            debug\n            pb\n            tr\n            _c1\n            pr\n            neg\n            tr\n            statement_half\n            statement\n            E\n            H\n            Hp\n            Hm\n            my_imt\n            my_integrator\n            _clean\n            tr\n            _cond\n            tr\n            lambda_s0\n        deltafunctions.py\n          Functions:\n            change_mul\n            deltaintegrate\n        manualintegrate.py\n          Functions:\n            Rule\n            evaluates\n            contains_dont_know\n            manual_diff\n            find_substitutions\n            rewriter\n            proxy_rewriter\n            multiplexer\n            alternatives\n            constant_rule\n            power_rule\n            exp_rule\n            inverse_trig_rule\n            add_rule\n            mul_rule\n            _parts_rule\n            parts_rule\n            trig_rule\n            trig_product_rule\n            quadratic_denom_rule\n            root_mul_rule\n            make_wilds\n            sincos_pattern\n            tansec_pattern\n            cotcsc_pattern\n            heaviside_pattern\n            uncurry\n            trig_rewriter\n            trig_sincos_rule\n            trig_tansec_rule\n            trig_cotcsc_rule\n            trig_powers_products_rule\n            trig_substitution_rule\n            heaviside_rule\n            substitution_rule\n            derivative_rule\n            rewrites_rule\n            fallback_rule\n            integral_steps\n            eval_constant\n            eval_constanttimes\n            eval_power\n            eval_exp\n            eval_add\n            eval_u\n            eval_parts\n            eval_cyclicparts\n            eval_trig\n            eval_arctan\n            eval_arccoth\n            eval_arctanh\n            eval_reciprocal\n            eval_arcsin\n            eval_inversehyperbolic\n            eval_alternative\n            eval_rewrite\n            eval_piecewise\n            eval_trigsubstitution\n            eval_derivativerule\n            eval_heaviside\n            eval_dontknowrule\n            _manualintegrate\n            manualintegrate\n            __eq__\n            _evaluates\n            test_subterm\n            possible_subterms\n            _rewriter\n            _proxy_rewriter\n            multiplexer_rl\n            _alternatives\n            negative\n            ArcsinhRule\n            ArccoshRule\n            make_inverse_trig\n            pull_out_algebraic\n            pull_out_u\n            make_second_step\n            uncurry_rl\n            trig_rewriter_rl\n            key\n            integral_is_subclass\n            pull_out_u_rl\n            _integral_is_subclass\n        integrals.py\n          Classes:\n            Integral\n          Functions:\n            integrate\n            line_integrate\n            _calc_limit_1\n            _calc_limit\n            _do\n            try_meijerg\n            is_indef_int\n            eval_factored\n        quadrature.py\n          Functions:\n            gauss_legendre\n            gauss_laguerre\n            gauss_hermite\n            gauss_gen_laguerre\n            gauss_chebyshev_t\n            gauss_chebyshev_u\n            gauss_jacobi\n        risch.py\n          Classes:\n            DifferentialExtension\n            DecrementLevel\n            NonElementaryIntegralException\n            NonElementaryIntegral\n          Functions:\n            integer_powers\n            gcdex_diophantine\n            frac_in\n            as_poly_1t\n            derivation\n            get_case\n            splitfactor\n            splitfactor_sqf\n            canonical_representation\n            hermite_reduce\n            polynomial_reduce\n            laurent_series\n            recognize_derivative\n            recognize_log_derivative\n            residue_reduce\n            residue_reduce_to_basic\n            residue_reduce_derivation\n            integrate_primitive_polynomial\n            integrate_primitive\n            integrate_hyperexponential_polynomial\n            integrate_hyperexponential\n            integrate_hypertangent_polynomial\n            integrate_nonlinear_no_specials\n            risch_integrate\n            update\n        trigonometry.py\n          Functions:\n            _integer_instance\n            _pat_sincos\n            trigintegrate\n            _sin_pow_integrate\n            _cos_pow_integrate\n        benchmarks/\n            bench_integrate.py\n              Functions:\n                bench_integrate_sin\n                bench_integrate_x1sin\n                bench_integrate_x2sin\n                bench_integrate_x3sin\n            __init__.py\n            bench_trigintegrate.py\n              Functions:\n                timeit_trigintegrate_sin3x\n                timeit_trigintegrate_x2\n    parsing/\n        sympy_tokenize.py\n          Classes:\n            TokenError\n            StopTokenizing\n            Untokenizer\n          Functions:\n            group\n            any\n            maybe\n            printtoken\n            tokenize\n            tokenize_loop\n            generate_tokens\n        mathematica.py\n          Functions:\n            mathematica\n            parse\n            translateFunction\n            translateOperator\n        maxima.py\n          Classes:\n            MaximaHelpers\n          Functions:\n            parse_maxima\n        __init__.py\n        sympy_parser.py\n          Classes:\n            AppliedFunction\n            ParenthesisGroup\n            EvaluateFalseTransformer\n          Functions:\n            _token_splittable\n            _token_callable\n            _add_factorial_tokens\n            _flatten\n            _group_parentheses\n            _apply_functions\n            _implicit_multiplication\n            _implicit_application\n            function_exponentiation\n            split_symbols_custom\n            implicit_multiplication\n            implicit_application\n            implicit_multiplication_application\n            auto_symbol\n            lambda_notation\n            factorial_notation\n            convert_xor\n            auto_number\n            rationalize\n            _transform_equals_sign\n            convert_equals_signs\n            stringify_expr\n            eval_expr\n            parse_expr\n            evaluateFalse\n            _inner\n            _split_symbols\n        ast_parser.py\n          Classes:\n            Transform\n          Functions:\n            parse_expr\n    tensor/\n        __init__.py\n        tensor.py\n          Classes:\n            TIDS\n            _TensorDataLazyEvaluator\n            _TensorManager\n            TensorIndexType\n            TensorIndex\n            TensorSymmetry\n            TensorType\n            TensorHead\n            TensExpr\n            TensAdd\n            Tensor\n            TensMul\n          Functions:\n            tensor_indices\n            tensorsymmetry\n            tensorhead\n            tensor_mul\n            riemann_cyclic_replace\n            riemann_cyclic\n            get_lines\n            get_tids\n            get_coeff\n            tableau2bsgs\n            _join_lines\n            data_mul\n            ikey\n            mul_function\n            add_function\n            sorted_compo\n            delete_tensmul_data\n            sort_key\n            _get_compar_comp\n            _get_compar_comp\n            fromfunction_sympify\n        index_methods.py\n          Classes:\n            IndexConformanceException\n          Functions:\n            _remove_repeated\n            _get_indices_Mul\n            _get_indices_Pow\n            _get_indices_Add\n            get_indices\n            get_contraction_structure\n        indexed.py\n          Classes:\n            IndexException\n            Indexed\n            IndexedBase\n            Idx\n        array/\n            dense_ndim_array.py\n              Classes:\n                DenseNDimArray\n                ImmutableDenseNDimArray\n                MutableDenseNDimArray\n              Functions:\n                slice_expand\n            mutable_ndim_array.py\n              Classes:\n                MutableNDimArray\n            __init__.py\n            arrayop.py\n              Functions:\n                _arrayfy\n                tensorproduct\n                tensorcontraction\n                derive_by_array\n                permutedims\n            sparse_ndim_array.py\n              Classes:\n                SparseNDimArray\n                ImmutableSparseNDimArray\n                MutableSparseNDimArray\n              Functions:\n                iterator\n                slice_expand\n            ndim_array.py\n              Classes:\n                NDimArray\n                ImmutableNDimArray\n              Functions:\n                f\n                f\n                f\n    series/\n        kauers.py\n          Functions:\n            finite_diff\n            finite_diff_kauers\n        order.py\n          Classes:\n            Order\n        __init__.py\n        limitseq.py\n          Functions:\n            difference_delta\n            dominant\n            _limit_inf\n            limit_seq\n        sequences.py\n          Classes:\n            SeqBase\n            EmptySequence\n            SeqExpr\n            SeqPer\n            SeqFormula\n            SeqExprOp\n            SeqAdd\n            SeqMul\n          Functions:\n            sequence\n            _find_x\n            _find_x\n            _flatten\n            _flatten\n        series_class.py\n          Classes:\n            SeriesBase\n        gruntz.py\n          Classes:\n            SubsSet\n            Node\n          Functions:\n            compare\n            mrv\n            mrv_max3\n            mrv_max1\n            sign\n            limitinf\n            moveup2\n            moveup\n            calculate_series\n            mrv_leadterm\n            build_expression_tree\n            rewrite\n            gruntz\n        fourier.py\n          Classes:\n            FourierSeries\n          Functions:\n            fourier_cos_seq\n            fourier_sin_seq\n            _process_limits\n            fourier_series\n            _find_x\n        limits.py\n          Classes:\n            Limit\n          Functions:\n            limit\n            heuristics\n        acceleration.py\n          Functions:\n            richardson\n            shanks\n        residues.py\n          Functions:\n            residue\n        series.py\n          Functions:\n            series\n        approximants.py\n          Functions:\n            approximants\n        formal.py\n          Classes:\n            FormalPowerSeries\n          Functions:\n            rational_algorithm\n            rational_independent\n            simpleDE\n            exp_re\n            hyper_re\n            _transformation_a\n            _transformation_c\n            _transformation_e\n            _apply_shift\n            _apply_scale\n            _apply_integrate\n            _compute_formula\n            _rsolve_hypergeometric\n            rsolve_hypergeometric\n            _solve_hyper_RE\n            _solve_explike_DE\n            _solve_simple\n            _transform_explike_DE\n            _transform_DE_RE\n            solve_de\n            hyper_algorithm\n            _compute_fps\n            compute_fps\n            fps\n            _makeDE\n        benchmarks/\n            bench_order.py\n              Functions:\n                timeit_order_1x\n            __init__.py\n            bench_limit.py\n              Functions:\n                timeit_limit_1x\n    ntheory/\n        continued_fraction.py\n          Functions:\n            continued_fraction_periodic\n            continued_fraction_reduce\n            continued_fraction_iterator\n            continued_fraction_convergents\n            untillist\n        primetest.py\n          Functions:\n            _int_tuple\n            is_square\n            _test\n            mr\n            _lucas_sequence\n            _lucas_selfridge_params\n            _lucas_extrastrong_params\n            is_lucas_prp\n            is_strong_lucas_prp\n            is_extra_strong_lucas_prp\n            isprime\n        partitions_.py\n          Functions:\n            _pre\n            _a\n            _d\n            npartitions\n        multinomial.py\n          Functions:\n            binomial_coefficients\n            binomial_coefficients_list\n            multinomial_coefficients0\n            multinomial_coefficients\n            multinomial_coefficients_iterator\n        __init__.py\n        egyptian_fraction.py\n          Functions:\n            egyptian_fraction\n            egypt_greedy\n            egypt_graham_jewett\n            egypt_takenouchi\n            egypt_golomb\n            egypt_harmonic\n        generate.py\n          Classes:\n            Sieve\n          Functions:\n            _arange\n            prime\n            primepi\n            nextprime\n            prevprime\n            randprime\n            primorial\n            cycle_length\n            composite\n            compositepi\n        modular.py\n          Functions:\n            symmetric_residue\n            crt\n            crt1\n            crt2\n            solve_congruence\n            combine\n        bbp_pi.py\n          Functions:\n            _series\n            pi_hex_digits\n            _dn\n        factor_.py\n          Classes:\n            totient\n            reduced_totient\n            divisor_sigma\n            udivisor_sigma\n            primenu\n            primeomega\n          Functions:\n            smoothness\n            smoothness_p\n            trailing\n            multiplicity\n            perfect_power\n            pollard_rho\n            pollard_pm1\n            _trial\n            _check_termination\n            _factorint_small\n            factorint\n            factorrat\n            primefactors\n            _divisors\n            divisors\n            divisor_count\n            _udivisors\n            udivisors\n            udivisor_count\n            _antidivisors\n            antidivisors\n            antidivisor_count\n            core\n            digits\n            done\n            rec_gen\n        residue_ntheory.py\n          Classes:\n            mobius\n          Functions:\n            n_order\n            _primitive_root_prime_iter\n            primitive_root\n            is_primitive_root\n            _sqrt_mod_tonelli_shanks\n            sqrt_mod\n            _product\n            sqrt_mod_iter\n            _sqrt_mod_prime_power\n            _sqrt_mod1\n            is_quad_residue\n            is_nthpow_residue\n            _is_nthpow_residue_bign\n            _is_nthpow_residue_bign_prime_power\n            _nthroot_mod2\n            _nthroot_mod1\n            nthroot_mod\n            quadratic_residues\n            legendre_symbol\n            jacobi_symbol\n            _discrete_log_trial_mul\n            _discrete_log_shanks_steps\n            _discrete_log_pollard_rho\n            _discrete_log_pohlig_hellman\n            discrete_log\n            _iter4\n            _iter0a\n            _iter0b\n            _iter1\n            _iter2\n            _iter3\n    physics/\n        units.py\n          Classes:\n            Unit\n          Functions:\n            find_unit\n        hydrogen.py\n          Functions:\n            R_nl\n            E_nl\n            E_nl_dirac\n        __init__.py\n        sho.py\n          Functions:\n            R_nl\n            E_nl\n        wigner.py\n          Classes:\n            Wigner3j\n          Functions:\n            _calc_factlist\n            wigner_3j\n            clebsch_gordan\n            _big_delta_coeff\n            racah\n            wigner_6j\n            wigner_9j\n            gaunt\n            dot_rot_grad_Ynm\n            alpha\n        gaussopt.py\n        secondquant.py\n          Classes:\n            SecondQuantizationError\n            AppliesOnlyToSymbolicIndex\n            ContractionAppliesOnlyToFermions\n            ViolationOfPauliPrinciple\n            SubstitutionOfAmbigousOperatorFailed\n            WicksTheoremDoesNotApply\n            Dagger\n            TensorSymbol\n            AntiSymmetricTensor\n            SqOperator\n            BosonicOperator\n            Annihilator\n            Creator\n            AnnihilateBoson\n            CreateBoson\n            FermionicOperator\n            AnnihilateFermion\n            CreateFermion\n            FockState\n            BosonState\n            FermionState\n            FockStateKet\n            FockStateBra\n            FockStateBosonKet\n            FockStateBosonBra\n            FockStateFermionKet\n            FockStateFermionBra\n            InnerProduct\n            BosonicBasis\n            VarBosonicBasis\n            FixedBosonicBasis\n            Commutator\n            NO\n            KeyPrinter\n            _SymbolFactory\n            PermutationOperator\n          Functions:\n            _apply_Mul\n            apply_operators\n            matrix_rep\n            contraction\n            _sqkey\n            _sort_anticommuting_fermions\n            evaluate_deltas\n            substitute_dummies\n            __kprint\n            _get_ordered_dummies\n            _determine_ambiguous\n            _get_contractions\n            wicks\n            simplify_index_permutations\n            _key\n            _get_indices\n            _choose_one_to_keep\n            _i\n            _a\n            _p\n        matrices.py\n          Functions:\n            msigma\n            pat_matrix\n            mgamma\n            mdft\n        pring.py\n          Functions:\n            wavefunction\n            energy\n        paulialgebra.py\n          Classes:\n            Pauli\n          Functions:\n            delta\n            epsilon\n            evaluate_pauli_product\n        qho_1d.py\n          Functions:\n            psi_n\n            E_n\n            coherent_state\n        unitsystems/\n            units.py\n              Classes:\n                Unit\n                Constant\n                UnitSystem\n            prefixes.py\n              Classes:\n                Prefix\n              Functions:\n                prefix_unit\n            __init__.py\n            dimensions.py\n              Classes:\n                Dimension\n                DimensionSystem\n            simplifiers.py\n              Functions:\n                dim_simplify\n                qsimplify\n                redmul\n            quantities.py\n              Classes:\n                Quantity\n            systems/\n                mks.py\n                __init__.py\n                natural.py\n                mksa.py\n        quantum/\n            qft.py\n              Classes:\n                RkGate\n                Fourier\n                QFT\n                IQFT\n            pauli.py\n              Classes:\n                SigmaOpBase\n                SigmaX\n                SigmaY\n                SigmaZ\n                SigmaMinus\n                SigmaPlus\n                SigmaZKet\n                SigmaZBra\n              Functions:\n                _qsimplify_pauli_product\n                qsimplify_pauli\n            commutator.py\n              Classes:\n                Commutator\n            circuitutils.py\n              Functions:\n                kmp_table\n                find_subcircuit\n                replace_subcircuit\n                _sympify_qubit_map\n                convert_to_symbolic_indices\n                convert_to_real_indices\n                random_reduce\n                random_insert\n                flatten_ids\n                create_inverse_map\n            sho1d.py\n              Classes:\n                SHOOp\n                RaisingOp\n                LoweringOp\n                NumberOp\n                Hamiltonian\n                SHOState\n                SHOKet\n                SHOBra\n            matrixutils.py\n              Classes:\n                numpy_ndarray\n                scipy_sparse_matrix\n              Functions:\n                sympy_to_numpy\n                sympy_to_scipy_sparse\n                scipy_sparse_to_sympy\n                numpy_to_sympy\n                to_sympy\n                to_numpy\n                to_scipy_sparse\n                flatten_scalar\n                matrix_dagger\n                _sympy_tensor_product\n                _numpy_tensor_product\n                _scipy_sparse_tensor_product\n                matrix_tensor_product\n                _numpy_eye\n                _scipy_sparse_eye\n                matrix_eye\n                _numpy_zeros\n                _scipy_sparse_zeros\n                matrix_zeros\n                _numpy_matrix_to_zero\n                _scipy_sparse_matrix_to_zero\n                matrix_to_zero\n            represent.py\n              Functions:\n                _sympy_to_scalar\n                represent\n                rep_innerproduct\n                rep_expectation\n                integrate_result\n                get_basis\n                _make_default\n                enumerate_states\n            dagger.py\n              Classes:\n                Dagger\n            qexpr.py\n              Classes:\n                QuantumError\n                QExpr\n              Functions:\n                _qsympify_sequence\n                __qsympify_sequence_helper\n                split_commutative_parts\n                split_qexpr_parts\n                dispatch_method\n            spin.py\n              Classes:\n                SpinOpBase\n                JplusOp\n                JminusOp\n                JxOp\n                JyOp\n                JzOp\n                J2Op\n                Rotation\n                WignerD\n                SpinState\n                JxKet\n                JxBra\n                JyKet\n                JyBra\n                JzKet\n                JzBra\n                CoupledSpinState\n                JxKetCoupled\n                JxBraCoupled\n                JyKetCoupled\n                JyBraCoupled\n                JzKetCoupled\n                JzBraCoupled\n              Functions:\n                m_values\n                _build_coupled\n                couple\n                _couple\n                uncouple\n                _uncouple\n                _confignum_to_difflist\n            innerproduct.py\n              Classes:\n                InnerProduct\n            qasm.py\n              Classes:\n                Qasm\n              Functions:\n                read_qasm\n                read_qasm_file\n                prod\n                flip_index\n                trim\n                get_index\n                get_indices\n                nonblank\n                fullsplit\n                fixcommand\n                stripquotes\n            boson.py\n              Classes:\n                BosonOp\n                BosonFockKet\n                BosonFockBra\n                BosonCoherentKet\n                BosonCoherentBra\n            shor.py\n              Classes:\n                OrderFindingException\n                CMod\n              Functions:\n                shor\n                getr\n                ratioize\n                period_find\n            anticommutator.py\n              Classes:\n                AntiCommutator\n            __init__.py\n            qapply.py\n              Functions:\n                qapply\n                qapply_Mul\n            gate.py\n              Classes:\n                Gate\n                CGate\n                CGateS\n                UGate\n                OneQubitGate\n                TwoQubitGate\n                IdentityGate\n                HadamardGate\n                XGate\n                YGate\n                ZGate\n                PhaseGate\n                TGate\n                CNotGate\n                SwapGate\n              Functions:\n                _max\n                _min\n                normalized\n                _validate_targets_controls\n                CPHASE\n                represent_zbasis\n                gate_simp\n                gate_sort\n                random_circuit\n                zx_basis_transform\n                zy_basis_transform\n            hilbert.py\n              Classes:\n                HilbertSpaceError\n                HilbertSpace\n                ComplexSpace\n                L2\n                FockSpace\n                TensorProductHilbertSpace\n                DirectSumHilbertSpace\n                TensorPowerHilbertSpace\n            operatorordering.py\n              Functions:\n                _expand_powers\n                _normal_ordered_form_factor\n                _normal_ordered_form_terms\n                normal_ordered_form\n                _normal_order_factor\n                _normal_order_terms\n                normal_order\n            operator.py\n              Classes:\n                Operator\n                HermitianOperator\n                UnitaryOperator\n                IdentityOperator\n                OuterProduct\n                DifferentialOperator\n            identitysearch.py\n              Classes:\n                GateIdentity\n              Functions:\n                is_scalar_sparse_matrix\n                is_scalar_nonsparse_matrix\n                _get_min_qubits\n                ll_op\n                lr_op\n                rl_op\n                rr_op\n                generate_gate_rules\n                generate_equivalent_ids\n                is_degenerate\n                is_reducible\n                bfs_identity_search\n                random_identity_search\n                process_new_rule\n            operatorset.py\n              Functions:\n                operators_to_state\n                state_to_operators\n                _make_default\n                _get_state\n                _get_ops\n                _make_set\n            qubit.py\n              Classes:\n                QubitState\n                Qubit\n                QubitBra\n                IntQubitState\n                IntQubit\n                IntQubitBra\n              Functions:\n                matrix_to_qubit\n                matrix_to_density\n                qubit_to_matrix\n                measure_all\n                measure_partial\n                measure_partial_oneshot\n                _get_possible_outcomes\n                measure_all_oneshot\n                find_index_that_is_projected\n            tensorproduct.py\n              Classes:\n                TensorProduct\n              Functions:\n                combined_tensor_printing\n                tensor_product_simp_Mul\n                tensor_product_simp\n                _label_wrap\n            cg.py\n              Classes:\n                Wigner3j\n                CG\n                Wigner6j\n                Wigner9j\n              Functions:\n                cg_simp\n                _cg_simp_add\n                _check_varsh_871_1\n                _check_varsh_871_2\n                _check_varsh_872_9\n                _check_cg_simp\n                _check_cg\n                _cg_simp_sum\n                _check_varsh_sum_871_1\n                _check_varsh_sum_871_2\n                _check_varsh_sum_872_4\n                _cg_list\n            state.py\n              Classes:\n                StateBase\n                KetBase\n                BraBase\n                State\n                Ket\n                Bra\n                TimeDepState\n                TimeDepKet\n                TimeDepBra\n                Wavefunction\n            constants.py\n              Classes:\n                HBar\n            grover.py\n              Classes:\n                OracleGate\n                WGate\n              Functions:\n                superposition_basis\n                grover_iteration\n                apply_grover\n            cartesian.py\n              Classes:\n                XOp\n                YOp\n                ZOp\n                PxOp\n                XKet\n                XBra\n                PositionState3D\n                PositionKet3D\n                PositionBra3D\n                PxKet\n                PxBra\n              Functions:\n                _enumerate_continuous_1D\n                _lowercase_labels\n                _uppercase_labels\n            piab.py\n              Classes:\n                PIABHamiltonian\n                PIABKet\n                PIABBra\n            density.py\n              Classes:\n                Density\n              Functions:\n                fidelity\n            fermion.py\n              Classes:\n                FermionOp\n                FermionFockKet\n                FermionFockBra\n            matrixcache.py\n              Classes:\n                MatrixCache\n            circuitplot.py\n              Classes:\n                Mz\n                Mx\n                CreateOneQubitGate\n                CircuitPlot\n                CircuitPlot\n              Functions:\n                render_label\n                labeller\n                CreateCGate\n                circuit_plot\n                circuit_plot\n                ControlledGate\n        mechanics/\n            rigidbody.py\n              Classes:\n                RigidBody\n            kane.py\n              Classes:\n                KanesMethod\n              Functions:\n                get_partial_velocity\n            __init__.py\n            particle.py\n              Classes:\n                Particle\n            system.py\n              Classes:\n                SymbolicSystem\n            models.py\n              Functions:\n                multi_mass_spring_damper\n                n_link_pendulum_on_cart\n            lagrange.py\n              Classes:\n                LagrangesMethod\n            functions.py\n              Functions:\n                mechanics_printing\n                inertia\n                inertia_of_point_mass\n                linear_momentum\n                angular_momentum\n                kinetic_energy\n                potential_energy\n                Lagrangian\n                find_dynamicsymbols\n                msubs\n                _crawl\n                _sub_func\n                _tan_repl_func\n                _smart_subs\n                _fraction_decomp\n                _f_list_parser\n                _recurser\n                flist_iter\n            body.py\n              Classes:\n                Body\n            linearize.py\n              Classes:\n                Linearizer\n              Functions:\n                permutation_matrix\n        optics/\n            __init__.py\n            utils.py\n              Functions:\n                refraction_angle\n                deviation\n                lens_makers_formula\n                mirror_formula\n                lens_formula\n                hyperfocal_distance\n            gaussopt.py\n              Classes:\n                RayTransferMatrix\n                FreeSpace\n                FlatRefraction\n                CurvedRefraction\n                FlatMirror\n                CurvedMirror\n                ThinLens\n                GeometricRay\n                BeamParameter\n              Functions:\n                waist2rayleigh\n                rayleigh2waist\n                geometric_conj_ab\n                geometric_conj_af\n                gaussian_conj\n                conjugate_gauss_beams\n            waves.py\n              Classes:\n                TWave\n            medium.py\n              Classes:\n                Medium\n        hep/\n            gamma_matrices.py\n              Classes:\n                _LorentzContainer\n                GammaMatrixHead\n              Functions:\n                _simplify_gpgp\n                _trace_single_line1\n            __init__.py\n        vector/\n            printing.py\n              Classes:\n                VectorStrPrinter\n                VectorStrReprPrinter\n                VectorLatexPrinter\n                VectorPrettyPrinter\n              Functions:\n                vprint\n                vsstrrepr\n                vsprint\n                vpprint\n                vlatex\n                init_vprinting\n            dyadic.py\n              Classes:\n                Dyadic\n                Fake\n              Functions:\n                _check_dyadic\n            __init__.py\n            point.py\n              Classes:\n                Point\n            vector.py\n              Classes:\n                Vector\n                VectorTypeError\n                Fake\n              Functions:\n                _check_vector\n                _det\n            frame.py\n              Classes:\n                CoordinateSym\n                ReferenceFrame\n              Functions:\n                _check_frame\n                _rot\n            fieldfunctions.py\n              Functions:\n                curl\n                divergence\n                gradient\n                is_conservative\n                is_solenoidal\n                scalar_potential\n                scalar_potential_difference\n            functions.py\n              Functions:\n                cross\n                dot\n                express\n                time_derivative\n                outer\n                kinematic_equations\n                get_motion_params\n                partial_velocity\n                dynamicsymbols\n                _process_vector_differential\n        continuum_mechanics/\n            beam.py\n              Classes:\n                Beam\n            __init__.py\n    functions/\n        __init__.py\n        elementary/\n            complexes.py\n              Classes:\n                re\n                im\n                sign\n                Abs\n                arg\n                conjugate\n                transpose\n                adjoint\n                polar_lift\n                periodic_argument\n                principal_branch\n              Functions:\n                unbranched_argument\n                _polarify\n                polarify\n                _unpolarify\n                unpolarify\n                mr\n            exponential.py\n              Classes:\n                ExpBase\n                exp_polar\n                exp\n                log\n                LambertW\n            __init__.py\n            trigonometric.py\n              Classes:\n                TrigonometricFunction\n                sin\n                cos\n                tan\n                cot\n                ReciprocalTrigonometricFunction\n                sec\n                csc\n                sinc\n                InverseTrigonometricFunction\n                asin\n                acos\n                atan\n                acot\n                asec\n                acsc\n                atan2\n              Functions:\n                _peeloff_pi\n                _pi_coeff\n                migcdex\n                ipartfrac\n                _cospi257\n                _fermatCoords\n                f1\n                f2\n            miscellaneous.py\n              Classes:\n                IdentityFunction\n                MinMaxBase\n                Max\n                Min\n              Functions:\n                sqrt\n                cbrt\n                root\n                real_root\n                hit\n            piecewise.py\n              Classes:\n                ExprCondPair\n                Piecewise\n              Functions:\n                piecewise_fold\n            hyperbolic.py\n              Classes:\n                HyperbolicFunction\n                sinh\n                cosh\n                tanh\n                coth\n                ReciprocalHyperbolicFunction\n                csch\n                sech\n                asinh\n                acosh\n                atanh\n                acoth\n                asech\n                acsch\n              Functions:\n                _rewrite_hyperbolics_as_exp\n            integers.py\n              Classes:\n                RoundFunction\n                floor\n                ceiling\n                frac\n              Functions:\n                _eval\n            benchmarks/\n                bench_exp.py\n                  Functions:\n                    timeit_exp_subs\n                __init__.py\n        combinatorial/\n            __init__.py\n            numbers.py\n              Classes:\n                fibonacci\n                lucas\n                bernoulli\n                bell\n                harmonic\n                euler\n                catalan\n                genocchi\n                _MultisetHistogram\n              Functions:\n                _product\n                _multiset_histogram\n                nP\n                _nP\n                _AOP_product\n                nC\n                _stirling1\n                _stirling2\n                stirling\n                _nT\n                nT\n                f\n            factorials.py\n              Classes:\n                CombinatorialFunction\n                factorial\n                MultiFactorial\n                subfactorial\n                factorial2\n                RisingFactorial\n                FallingFactorial\n                binomial\n        special/\n            mathieu_functions.py\n              Classes:\n                MathieuBase\n                mathieus\n                mathieuc\n                mathieusprime\n                mathieucprime\n            beta_functions.py\n              Classes:\n                beta\n            tensor_functions.py\n              Classes:\n                LeviCivita\n                KroneckerDelta\n              Functions:\n                Eijk\n                eval_levicivita\n            delta_functions.py\n              Classes:\n                DiracDelta\n                Heaviside\n            gamma_functions.py\n              Classes:\n                gamma\n                lowergamma\n                uppergamma\n                polygamma\n                loggamma\n              Functions:\n                digamma\n                trigamma\n            __init__.py\n            bessel.py\n              Classes:\n                BesselBase\n                besselj\n                bessely\n                besseli\n                besselk\n                hankel1\n                hankel2\n                SphericalBesselBase\n                jn\n                yn\n                SphericalHankelBase\n                hn1\n                hn2\n                AiryBase\n                airyai\n                airybi\n                airyaiprime\n                airybiprime\n              Functions:\n                assume_integer_order\n                _jn\n                _yn\n                jn_zeros\n                g\n                solver\n            zeta_functions.py\n              Classes:\n                lerchphi\n                polylog\n                zeta\n                dirichlet_eta\n                stieltjes\n            singularity_functions.py\n              Classes:\n                SingularityFunction\n            bsplines.py\n              Functions:\n                _add_splines\n                bspline_basis\n                bspline_basis_set\n            spherical_harmonics.py\n              Classes:\n                Ynm\n                Znm\n              Functions:\n                Ynm_c\n            elliptic_integrals.py\n              Classes:\n                elliptic_k\n                elliptic_f\n                elliptic_e\n                elliptic_pi\n            polynomials.py\n              Classes:\n                OrthogonalPolynomial\n                jacobi\n                gegenbauer\n                chebyshevt\n                chebyshevu\n                chebyshevt_root\n                chebyshevu_root\n                legendre\n                assoc_legendre\n                hermite\n                laguerre\n                assoc_laguerre\n              Functions:\n                jacobi_normalized\n            hyper.py\n              Classes:\n                TupleArg\n                TupleParametersBase\n                hyper\n                meijerg\n                HyperRep\n                HyperRep_power1\n                HyperRep_power2\n                HyperRep_log1\n                HyperRep_atanh\n                HyperRep_asin1\n                HyperRep_asin2\n                HyperRep_sqrts1\n                HyperRep_sqrts2\n                HyperRep_log2\n                HyperRep_cosasin\n                HyperRep_sinasin\n              Functions:\n                _prep_tuple\n                tr\n                compute\n            error_functions.py\n              Classes:\n                erf\n                erfc\n                erfi\n                erf2\n                erfinv\n                erfcinv\n                erf2inv\n                Ei\n                expint\n                li\n                Li\n                TrigonometricIntegral\n                Si\n                Ci\n                Shi\n                Chi\n                FresnelIntegral\n                fresnels\n                fresnelc\n                _erfs\n                _eis\n              Functions:\n                E1\n            benchmarks/\n                __init__.py\n                bench_special.py\n                  Functions:\n                    timeit_Ynm_xy\n    holonomic/\n        __init__.py\n        holonomic.py\n          Classes:\n            DifferentialOperatorAlgebra\n            DifferentialOperator\n            HolonomicFunction\n          Functions:\n            DifferentialOperators\n            from_hyper\n            from_meijerg\n            expr_to_holonomic\n            _normalize\n            _derivate_diff_eq\n            _hyper_to_meijerg\n            _add_lists\n            _extend_y0\n            DMFdiff\n            DMFsubs\n            _convert_poly_rat_alg\n            _convert_meijerint\n            _create_table\n            _find_conditions\n            _find_conditions\n            _find_conditions\n            _shift\n            add\n            _mul_dmp_diffop\n            _mul_Dxi_b\n            _pole_degree\n        holonomicerrors.py\n          Classes:\n            BaseHolonomicError\n            NotPowerSeriesError\n            NotHolonomicError\n            SingularityError\n            NotHyperSeriesError\n        recurrence.py\n          Classes:\n            RecurrenceOperatorAlgebra\n            RecurrenceOperator\n            HolonomicSequence\n          Functions:\n            RecurrenceOperators\n            _add_lists\n            _mul_dmp_diffop\n            _mul_Sni_b\n        linearsolver.py\n          Classes:\n            NewMatrix\n        numerical.py\n          Functions:\n            _evalf\n            _euler\n            _rk4\n    strategies/\n        tree.py\n          Functions:\n            treeapply\n            greedy\n            allresults\n            brute\n        rl.py\n          Functions:\n            rm_id\n            glom\n            sort\n            distribute\n            subs\n            unpack\n            flatten\n            rebuild\n            ident_remove\n            conglomerate\n            sort_rl\n            distribute_rl\n            subs_rl\n        __init__.py\n        traverse.py\n          Functions:\n            top_down\n            bottom_up\n            top_down_once\n            bottom_up_once\n            sall\n            all_rl\n        tools.py\n          Functions:\n            subs\n            canon\n            typed\n        core.py\n          Functions:\n            exhaust\n            memoize\n            condition\n            chain\n            debug\n            null_safe\n            tryit\n            do_one\n            switch\n            minimize\n            exhaustive_rl\n            memoized_rl\n            conditioned_rl\n            chain_rl\n            debug_rl\n            null_safe_rl\n            try_rl\n            do_one_rl\n            switch_rl\n            minrule\n        util.py\n          Functions:\n            assoc\n        branch/\n            __init__.py\n            traverse.py\n              Functions:\n                top_down\n                sall\n                all_rl\n            tools.py\n              Functions:\n                canon\n            core.py\n              Functions:\n                identity\n                exhaust\n                onaction\n                debug\n                multiplex\n                condition\n                sfilter\n                notempty\n                do_one\n                chain\n                yieldify\n                exhaust_brl\n                onaction_brl\n                write\n                multiplex_brl\n                conditioned_brl\n                filtered_brl\n                notempty_brl\n                do_one_brl\n                chain_brl\n                brl\n    plotting/\n        textplot.py\n          Functions:\n            textplot\n        plot.py\n          Classes:\n            Plot\n            BaseSeries\n            Line2DBaseSeries\n            List2DSeries\n            LineOver1DRangeSeries\n            Parametric2DLineSeries\n            Line3DBaseSeries\n            Parametric3DLineSeries\n            SurfaceBaseSeries\n            SurfaceOver2DRangeSeries\n            ParametricSurfaceSeries\n            ContourSeries\n            BaseBackend\n            MatplotlibBackend\n            TextBackend\n            DefaultBackend\n          Functions:\n            unset_show\n            _arity\n            centers_of_segments\n            centers_of_faces\n            flat\n            _matplotlib_list\n            plot\n            plot_parametric\n            plot3d_parametric_line\n            plot3d\n            plot3d_parametric_surface\n            check_arguments\n            sample\n            sample\n        __init__.py\n        experimental_lambdify.py\n          Classes:\n            vectorized_lambdify\n            lambdify\n            Lambdifier\n          Functions:\n            experimental_lambdify\n        plot_implicit.py\n          Classes:\n            ImplicitSeries\n          Functions:\n            plot_implicit\n            arg_expand\n            _range_tuple\n            refine_pixels\n        pygletplot/\n            plot_axes.py\n              Classes:\n                PlotAxes\n                PlotAxesBase\n                PlotAxesOrdinate\n                PlotAxesFrame\n              Functions:\n                flexible_boolean\n            plot_controller.py\n              Classes:\n                PlotController\n            managed_window.py\n              Classes:\n                ManagedWindow\n            plot.py\n              Classes:\n                PygletPlot\n                ScreenShot\n            plot_rotation.py\n              Functions:\n                cross\n                dot\n                mag\n                norm\n                get_sphere_mapping\n                get_spherical_rotatation\n            color_scheme.py\n              Classes:\n                ColorGradient\n                ColorScheme\n            plot_mode.py\n              Classes:\n                PlotMode\n              Functions:\n                var_count_error\n                symbols_list\n            plot_interval.py\n              Classes:\n                PlotInterval\n              Functions:\n                check\n            plot_camera.py\n              Classes:\n                PlotCamera\n            __init__.py\n              Functions:\n                PygletPlot\n                PygletPlot\n            plot_modes.py\n              Classes:\n                Cartesian2D\n                Cartesian3D\n                ParametricCurve2D\n                ParametricCurve3D\n                ParametricSurface\n                Polar\n                Cylindrical\n                Spherical\n              Functions:\n                float_vec3\n                inner\n                e\n                e\n                e\n                e\n                e\n                e\n                e\n                e\n            plot_window.py\n              Classes:\n                PlotWindow\n            plot_surface.py\n              Classes:\n                PlotSurface\n              Functions:\n                set_work_len\n                inc_work_pos\n                f\n            plot_curve.py\n              Classes:\n                PlotCurve\n              Functions:\n                set_work_len\n                inc_work_pos\n                f\n            plot_object.py\n              Classes:\n                PlotObject\n            util.py\n              Functions:\n                get_model_matrix\n                get_projection_matrix\n                get_viewport\n                get_direction_vectors\n                get_view_direction_vectors\n                get_basis_vectors\n                screen_to_model\n                model_to_screen\n                vec_subs\n                billboard_matrix\n                create_bounds\n                update_bounds\n                interpolate\n                rinterpolate\n                interpolate_color\n                scale_value\n                scale_value_list\n                strided_range\n                parse_option_string\n                dot_product\n                vec_sub\n                vec_mag\n            plot_mode_base.py\n              Classes:\n                PlotModeBase\n              Functions:\n                w\n        intervalmath/\n            interval_arithmetic.py\n              Classes:\n                interval\n              Functions:\n                _pow_float\n                _pow_int\n            lib_interval.py\n              Functions:\n                Abs\n                exp\n                log\n                log10\n                atan\n                sin\n                cos\n                tan\n                sqrt\n                imin\n                imax\n                sinh\n                cosh\n                tanh\n                asin\n                acos\n                ceil\n                floor\n                acosh\n                asinh\n                atanh\n                And\n                Or\n                reduce_and\n                reduce_or\n            __init__.py\n    geometry/\n        ellipse.py\n          Classes:\n            Ellipse\n            Circle\n        parabola.py\n          Classes:\n            Parabola\n        plane.py\n          Classes:\n            Plane\n        line3d.py\n          Classes:\n            LinearEntity3D\n            Line3D\n            Ray3D\n            Segment3D\n          Functions:\n            _project\n        line.py\n          Classes:\n            Undecidable\n            LinearEntity\n            Line\n            Ray\n            Segment\n          Functions:\n            _project\n            _norm\n            inseg\n            inray\n            _between\n        __init__.py\n        point.py\n          Classes:\n            Point\n            Point2D\n            Point3D\n        curve.py\n          Classes:\n            Curve\n        entity.py\n          Classes:\n            GeometryEntity\n            GeometrySet\n          Functions:\n            is_seq_and_not_point\n        exceptions.py\n          Classes:\n            GeometryError\n        polygon.py\n          Classes:\n            Polygon\n            RegularPolygon\n            Triangle\n          Functions:\n            rad\n            deg\n            _slope\n            _asa\n            _sss\n            _sas\n            _are_similar\n        util.py\n          Functions:\n            _ordered_points\n            idiff\n            _symbol\n            _uniquely_named_symbol\n            intersection\n            convex_hull\n            closest_points\n            farthest_points\n            are_coplanar\n            are_similar\n            centroid\n            _orientation\n            rotatingCalipers\n            hypot\n            hypot\n    matrices/\n        immutable.py\n          Classes:\n            ImmutableMatrix\n            ImmutableSparseMatrix\n          Functions:\n            sympify_matrix\n        densetools.py\n          Functions:\n            trace\n            transpose\n            conjugate\n            conjugate_row\n            conjugate_transpose\n            augment\n            eye\n            row\n            col\n            rowswap\n            rowmul\n            rowadd\n            isHermitian\n        dense.py\n          Classes:\n            DenseMatrix\n            MutableDenseMatrix\n          Functions:\n            _iszero\n            _force_mutable\n            list2numpy\n            matrix2numpy\n            rot_axis3\n            rot_axis2\n            rot_axis1\n            symarray\n            casoratian\n            diag\n            GramSchmidt\n            hessian\n            jordan_cell\n            matrix_multiply_elementwise\n            ones\n            randMatrix\n            wronskian\n        densesolve.py\n          Functions:\n            row_echelon\n            rref\n            LU\n            cholesky\n            LDL\n            upper_triangle\n            lower_triangle\n            rref_solve\n            LU_solve\n            cholesky_solve\n            forward_substitution\n            backward_substitution\n        densearith.py\n          Functions:\n            add\n            addrow\n            sub\n            negate\n            negaterow\n            mulmatmat\n            mulmatscaler\n            mulrowscaler\n            mulrowcol\n        __init__.py\n        sparsetools.py\n          Functions:\n            _doktocsr\n            _csrtodok\n        sparse.py\n          Classes:\n            SparseMatrix\n            MutableSparseMatrix\n          Functions:\n            cond\n        matrices.py\n          Classes:\n            MatrixError\n            ShapeError\n            NonSquareMatrixError\n            DeferredVector\n            MatrixBase\n          Functions:\n            _iszero\n            classof\n            a2idx\n            _find_reasonable_pivot\n            _jblock_exponential\n            recurse_sub_blocks\n            cond\n            jordan_cell_power\n        expressions/\n            inverse.py\n              Classes:\n                Inverse\n              Functions:\n                refine_Inverse\n            factorizations.py\n              Classes:\n                Factorization\n                LofLU\n                UofLU\n                LofCholesky\n                UofCholesky\n                QofQR\n                RofQR\n                EigenVectors\n                EigenValues\n                UofSVD\n                SofSVD\n                VofSVD\n              Functions:\n                lu\n                qr\n                eig\n                svd\n            matexpr.py\n              Classes:\n                MatrixExpr\n                MatrixElement\n                MatrixSymbol\n                Identity\n                ZeroMatrix\n              Functions:\n                _sympifyit\n                matrix_symbols\n                deco\n                __sympifyit_wrapper\n                is_valid\n            matpow.py\n              Classes:\n                MatPow\n            determinant.py\n              Classes:\n                Determinant\n              Functions:\n                det\n                refine_Determinant\n            adjoint.py\n              Classes:\n                Adjoint\n            diagonal.py\n              Classes:\n                DiagonalMatrix\n                DiagonalOf\n            blockmatrix.py\n              Classes:\n                BlockMatrix\n                BlockDiagMatrix\n              Functions:\n                block_collapse\n                bc_unpack\n                bc_matadd\n                bc_block_plus_ident\n                bc_dist\n                bc_matmul\n                bc_transpose\n                bc_inverse\n                blockinverse_1x1\n                blockinverse_2x2\n                deblock\n                reblock_2x2\n                bounds\n                blockcut\n            funcmatrix.py\n              Classes:\n                FunctionMatrix\n            matadd.py\n              Classes:\n                MatAdd\n              Functions:\n                validate\n                combine\n                merge_explicit\n            __init__.py\n            matmul.py\n              Classes:\n                MatMul\n              Functions:\n                validate\n                newmul\n                any_zeros\n                merge_explicit\n                xxinv\n                remove_ids\n                factor_in_front\n                only_squares\n                refine_MatMul\n            fourier.py\n              Classes:\n                DFT\n                IDFT\n            transpose.py\n              Classes:\n                Transpose\n              Functions:\n                transpose\n                refine_Transpose\n            hadamard.py\n              Classes:\n                HadamardProduct\n              Functions:\n                hadamard_product\n                validate\n            slice.py\n              Classes:\n                MatrixSlice\n              Functions:\n                normalize\n                slice_of_slice\n                mat_slice_of_slice\n            dotproduct.py\n              Classes:\n                DotProduct\n            trace.py\n              Classes:\n                Trace\n              Functions:\n                trace\n        benchmarks/\n            bench_matrix.py\n              Functions:\n                timeit_Matrix__getitem_ii\n                timeit_Matrix__getitem_II\n                timeit_Matrix__getslice\n                timeit_Matrix_zeronm\n            __init__.py\n    sets/\n        conditionset.py\n          Classes:\n            ConditionSet\n        __init__.py\n        sets.py\n          Classes:\n            Set\n            ProductSet\n            Interval\n            Union\n            Intersection\n            Complement\n            EmptySet\n            UniversalSet\n            FiniteSet\n            SymmetricDifference\n          Functions:\n            imageset\n            flatten\n            flatten\n            boundary_of_set\n            roundrobin\n            flatten\n        contains.py\n          Classes:\n            Contains\n        fancysets.py\n          Classes:\n            Naturals\n            Naturals0\n            Integers\n            Reals\n            ImageSet\n            Range\n            ComplexRegion\n            Complexes\n          Functions:\n            normalize_theta_set\n            _first_finite_point\n            _updated_range\n    external/\n        importtools.py\n          Functions:\n            __sympy_debug\n            import_module\n        __init__.py\n    crypto/\n        crypto.py\n          Functions:\n            AZ\n            padded_key\n            check_and_join\n            _prep\n            cycle_list\n            encipher_shift\n            decipher_shift\n            encipher_affine\n            decipher_affine\n            encipher_substitution\n            encipher_vigenere\n            decipher_vigenere\n            encipher_hill\n            decipher_hill\n            encipher_bifid\n            decipher_bifid\n            bifid_square\n            encipher_bifid5\n            decipher_bifid5\n            bifid5_square\n            encipher_bifid6\n            decipher_bifid6\n            bifid6_square\n            rsa_public_key\n            rsa_private_key\n            encipher_rsa\n            decipher_rsa\n            kid_rsa_public_key\n            kid_rsa_private_key\n            encipher_kid_rsa\n            decipher_kid_rsa\n            encode_morse\n            decode_morse\n            lfsr_sequence\n            lfsr_autocorrelation\n            lfsr_connection_polynomial\n            elgamal_private_key\n            elgamal_public_key\n            encipher_elgamal\n            decipher_elgamal\n            dh_private_key\n            dh_public_key\n            dh_shared_key\n        __init__.py\n    concrete/\n        summations.py\n          Classes:\n            Sum\n          Functions:\n            summation\n            telescopic_direct\n            telescopic\n            eval_sum\n            eval_sum_direct\n            eval_sum_symbolic\n            _eval_sum_hyper\n            eval_sum_hyper\n            fpoint\n            _dirichlet_test\n        guess.py\n          Functions:\n            find_simple_recurrence_vector\n            find_simple_recurrence\n            rationalize\n            guess_generating_function_rational\n            guess_generating_function\n        expr_with_intlimits.py\n          Classes:\n            ReorderError\n            ExprWithIntLimits\n        expr_with_limits.py\n          Classes:\n            ExprWithLimits\n            AddWithLimits\n          Functions:\n            _process_limits\n        products.py\n          Classes:\n            Product\n          Functions:\n            product\n        __init__.py\n        gosper.py\n          Functions:\n            gosper_normal\n            gosper_term\n            gosper_sum\n        delta.py\n          Functions:\n            _expand_delta\n            _extract_delta\n            _has_simple_delta\n            _is_simple_delta\n            _remove_multiple_delta\n            _simplify_delta\n            deltaproduct\n            deltasummation\n    printing/\n        theanocode.py\n          Classes:\n            TheanoPrinter\n          Functions:\n            theano_code\n            dim_handling\n            theano_function\n        mathml.py\n          Classes:\n            MathMLPrinter\n          Functions:\n            mathml\n            print_mathml\n            lime_recur\n            join\n            translate\n            writexml\n            writexml\n        latex.py\n          Classes:\n            LatexPrinter\n          Functions:\n            translate\n            latex\n            print_latex\n            convert\n            latexslice\n            parens\n            parens\n            _format_ineq\n            _format_ineq\n        tree.py\n          Functions:\n            pprint_nodes\n            print_node\n            tree\n            print_tree\n            indent\n        mathematica.py\n          Classes:\n            MCodePrinter\n          Functions:\n            mathematica_code\n        octave.py\n          Classes:\n            OctaveCodePrinter\n          Functions:\n            octave_code\n            print_octave_code\n            multjoin\n            strslice\n        precedence.py\n          Functions:\n            precedence_Mul\n            precedence_Rational\n            precedence_Integer\n            precedence_Float\n            precedence_PolyElement\n            precedence_FracElement\n            precedence\n            precedence_traditional\n        llvmjitcode.py\n          Classes:\n            LLVMJitPrinter\n            LLVMJitCallbackPrinter\n            LLVMJitCode\n            LLVMJitCodeCallback\n            CodeSignature\n          Functions:\n            _llvm_jit_code\n            llvm_callable\n        defaults.py\n          Classes:\n            DefaultPrinting\n        gtk.py\n          Functions:\n            print_gtk\n        __init__.py\n        lambdarepr.py\n          Classes:\n            LambdaPrinter\n            TensorflowPrinter\n            NumPyPrinter\n            NumExprPrinter\n          Functions:\n            lambdarepr\n        fcode.py\n          Classes:\n            FCodePrinter\n          Functions:\n            fcode\n            print_fcode\n            split_pos_code\n        repr.py\n          Classes:\n            ReprPrinter\n          Functions:\n            srepr\n        python.py\n          Classes:\n            PythonPrinter\n          Functions:\n            python\n            print_python\n        julia.py\n          Classes:\n            JuliaCodePrinter\n          Functions:\n            julia_code\n            print_julia_code\n            multjoin\n            strslice\n        str.py\n          Classes:\n            StrPrinter\n            StrReprPrinter\n          Functions:\n            sstr\n            sstrrepr\n            _xab_tostr\n            strslice\n            _xab_tostr\n        codeprinter.py\n          Classes:\n            AssignmentError\n            CodePrinter\n        jscode.py\n          Classes:\n            JavascriptCodePrinter\n          Functions:\n            jscode\n            print_jscode\n        preview.py\n          Functions:\n            preview\n            on_close\n            on_key_press\n            on_expose\n        conventions.py\n          Functions:\n            split_super_sub\n            requires_partial\n        ccode.py\n          Classes:\n            CCodePrinter\n          Functions:\n            ccode\n            print_ccode\n        dot.py\n          Functions:\n            purestr\n            styleof\n            attrprint\n            dotnode\n            dotedges\n            dotprint\n            traverse\n        tableform.py\n          Classes:\n            TableForm\n          Functions:\n            _std_align\n            _align\n        printer.py\n          Classes:\n            Printer\n        pretty/\n            __init__.py\n            pretty_symbology.py\n              Functions:\n                pretty_use_unicode\n                pretty_try_use_unicode\n                xstr\n                xobj\n                vobj\n                hobj\n                xsym\n                pretty_atom\n                pretty_symbol\n                annotated\n                U\n                translate\n                pretty_list\n            pretty.py\n              Classes:\n                PrettyPrinter\n              Functions:\n                pretty\n                pretty_print\n                pager_print\n                asum\n                ppslice\n                adjust\n                pretty_negative\n                adjust\n            stringpict.py\n              Classes:\n                stringPict\n                prettyForm\n    interactive/\n        printing.py\n          Functions:\n            _init_python_printing\n            _init_ipython_printing\n            _is_ipython\n            init_printing\n            _displayhook\n            _print_plain\n            _preview_wrapper\n            _matplotlib_wrapper\n            _can_print_latex\n            _print_latex_png\n            _print_latex_matplotlib\n            _print_latex_text\n            _result_display\n        session.py\n          Classes:\n            SymPyConsole\n          Functions:\n            _make_message\n            int_to_Integer\n            enable_automatic_int_sympification\n            enable_automatic_symbols\n            init_ipython_session\n            init_python_session\n            init_session\n            _is_int\n            my_run_cell\n            _handler\n        __init__.py\n        ipythonprinting.py\n          Functions:\n            load_ipython_extension\n    vector/\n        orienters.py\n          Classes:\n            Orienter\n            AxisOrienter\n            ThreeAngleOrienter\n            BodyOrienter\n            SpaceOrienter\n            QuaternionOrienter\n          Functions:\n            _rot\n        basisdependent.py\n          Classes:\n            BasisDependent\n            BasisDependentAdd\n            BasisDependentMul\n            BasisDependentZero\n        dyadic.py\n          Classes:\n            Dyadic\n            BaseDyadic\n            DyadicMul\n            DyadicAdd\n            DyadicZero\n          Functions:\n            _dyad_div\n        deloperator.py\n          Classes:\n            Del\n          Functions:\n            _diff_conditional\n        __init__.py\n        point.py\n          Classes:\n            Point\n        coordsysrect.py\n          Classes:\n            CoordSysCartesian\n          Functions:\n            _check_strings\n        vector.py\n          Classes:\n            Vector\n            BaseVector\n            VectorAdd\n            VectorMul\n            VectorZero\n          Functions:\n            _vect_div\n            _det\n            directional_derivative\n        functions.py\n          Functions:\n            express\n            curl\n            divergence\n            gradient\n            is_conservative\n            is_solenoidal\n            scalar_potential\n            scalar_potential_difference\n            matrix_to_vector\n            _path\n            orthogonalize\n        scalar.py\n          Classes:\n            BaseScalar\n    polys/\n        polyconfig.py\n          Functions:\n            using\n            setup\n            query\n            configure\n        polyutils.py\n          Classes:\n            PicklableWithSlots\n          Functions:\n            _nsort\n            _sort_gens\n            _unify_gens\n            _analyze_gens\n            _sort_factors\n            _not_a_coeff\n            _parallel_dict_from_expr_if_gens\n            _parallel_dict_from_expr_no_gens\n            _dict_from_expr_if_gens\n            _dict_from_expr_no_gens\n            parallel_dict_from_expr\n            _parallel_dict_from_expr\n            dict_from_expr\n            _dict_from_expr\n            expr_from_dict\n            _dict_reorder\n            order_key\n            order_if_multiple_key\n            order_no_multiple_key\n            _is_expandable_pow\n            _is_coeff\n            _is_coeff\n            _is_coeff\n            _is_coeff\n        densetools.py\n          Functions:\n            dup_integrate\n            dmp_integrate\n            _rec_integrate_in\n            dmp_integrate_in\n            dup_diff\n            dmp_diff\n            _rec_diff_in\n            dmp_diff_in\n            dup_eval\n            dmp_eval\n            _rec_eval_in\n            dmp_eval_in\n            _rec_eval_tail\n            dmp_eval_tail\n            _rec_diff_eval\n            dmp_diff_eval_in\n            dup_trunc\n            dmp_trunc\n            dmp_ground_trunc\n            dup_monic\n            dmp_ground_monic\n            dup_content\n            dmp_ground_content\n            dup_primitive\n            dmp_ground_primitive\n            dup_extract\n            dmp_ground_extract\n            dup_real_imag\n            dup_mirror\n            dup_scale\n            dup_shift\n            dup_transform\n            dup_compose\n            dmp_compose\n            _dup_right_decompose\n            _dup_left_decompose\n            _dup_decompose\n            dup_decompose\n            dmp_lift\n            dup_sign_variations\n            dup_clear_denoms\n            _rec_clear_denoms\n            dmp_clear_denoms\n            dup_revert\n            dmp_revert\n        rationaltools.py\n          Functions:\n            together\n            _together\n        polyquinticconst.py\n          Classes:\n            PolyQuintic\n        specialpolys.py\n          Functions:\n            swinnerton_dyer_poly\n            cyclotomic_poly\n            symmetric_poly\n            random_poly\n            interpolating_poly\n            fateman_poly_F_1\n            dmp_fateman_poly_F_1\n            fateman_poly_F_2\n            dmp_fateman_poly_F_2\n            fateman_poly_F_3\n            dmp_fateman_poly_F_3\n            _f_0\n            _f_1\n            _f_2\n            _f_3\n            _f_4\n            _f_5\n            _f_6\n            _w_1\n            _w_2\n            f_polys\n            w_polys\n        rootisolation.py\n          Classes:\n            RealInterval\n            ComplexInterval\n          Functions:\n            dup_sturm\n            dup_root_upper_bound\n            dup_root_lower_bound\n            _mobius_from_interval\n            _mobius_to_interval\n            dup_step_refine_real_root\n            dup_inner_refine_real_root\n            dup_outer_refine_real_root\n            dup_refine_real_root\n            dup_inner_isolate_real_roots\n            _discard_if_outside_interval\n            dup_inner_isolate_positive_roots\n            dup_inner_isolate_negative_roots\n            _isolate_zero\n            dup_isolate_real_roots_sqf\n            dup_isolate_real_roots\n            dup_isolate_real_roots_list\n            _disjoint_p\n            _real_isolate_and_disjoin\n            dup_count_real_roots\n            _classify_point\n            _intervals_to_quadrants\n            _traverse_quadrants\n            _reverse_intervals\n            _winding_number\n            dup_count_complex_roots\n            _vertical_bisection\n            _horizontal_bisection\n            _depth_first_select\n            _rectangle_small_p\n            dup_isolate_complex_roots_sqf\n            dup_isolate_all_roots_sqf\n            dup_isolate_all_roots\n        numberfields.py\n          Classes:\n            IntervalPrinter\n          Functions:\n            _choose_factor\n            _separate_sq\n            _minimal_polynomial_sq\n            _minpoly_op_algebraic_element\n            _invertx\n            _muly\n            _minpoly_pow\n            _minpoly_add\n            _minpoly_mul\n            _minpoly_sin\n            _minpoly_cos\n            _minpoly_exp\n            _minpoly_rootof\n            _minpoly_compose\n            minimal_polynomial\n            _minpoly_groebner\n            _coeffs_generator\n            primitive_element\n            is_isomorphism_possible\n            field_isomorphism_pslq\n            field_isomorphism_factor\n            field_isomorphism\n            to_number_field\n            isolate\n            is_sqrt\n            update_mapping\n            bottom_up_scan\n            simpler_inverse\n        euclidtools.py\n          Functions:\n            dup_half_gcdex\n            dmp_half_gcdex\n            dup_gcdex\n            dmp_gcdex\n            dup_invert\n            dmp_invert\n            dup_euclidean_prs\n            dmp_euclidean_prs\n            dup_primitive_prs\n            dmp_primitive_prs\n            dup_inner_subresultants\n            dup_subresultants\n            dup_prs_resultant\n            dup_resultant\n            dmp_inner_subresultants\n            dmp_subresultants\n            dmp_prs_resultant\n            dmp_zz_modular_resultant\n            _collins_crt\n            dmp_zz_collins_resultant\n            dmp_qq_collins_resultant\n            dmp_resultant\n            dup_discriminant\n            dmp_discriminant\n            _dup_rr_trivial_gcd\n            _dup_ff_trivial_gcd\n            _dmp_rr_trivial_gcd\n            _dmp_ff_trivial_gcd\n            _dmp_simplify_gcd\n            dup_rr_prs_gcd\n            dup_ff_prs_gcd\n            dmp_rr_prs_gcd\n            dmp_ff_prs_gcd\n            _dup_zz_gcd_interpolate\n            dup_zz_heu_gcd\n            _dmp_zz_gcd_interpolate\n            dmp_zz_heu_gcd\n            dup_qq_heu_gcd\n            dmp_qq_heu_gcd\n            dup_inner_gcd\n            _dmp_inner_gcd\n            dmp_inner_gcd\n            dup_gcd\n            dmp_gcd\n            dup_rr_lcm\n            dup_ff_lcm\n            dup_lcm\n            dmp_rr_lcm\n            dmp_ff_lcm\n            dmp_lcm\n            dmp_content\n            dmp_primitive\n            dup_cancel\n            dmp_cancel\n        polyoptions.py\n          Classes:\n            Option\n            Flag\n            BooleanOption\n            OptionType\n            Options\n            Expand\n            Gens\n            Wrt\n            Sort\n            Order\n            Field\n            Greedy\n            Composite\n            Domain\n            Split\n            Gaussian\n            Extension\n            Modulus\n            Symmetric\n            Strict\n            Auto\n            Frac\n            Formal\n            Polys\n            Include\n            All\n            Gen\n            Series\n            Symbols\n            Method\n          Functions:\n            build_options\n            allowed_flags\n            set_defaults\n            getter\n            preprocess_options\n        densearith.py\n          Functions:\n            dup_add_term\n            dmp_add_term\n            dup_sub_term\n            dmp_sub_term\n            dup_mul_term\n            dmp_mul_term\n            dup_add_ground\n            dmp_add_ground\n            dup_sub_ground\n            dmp_sub_ground\n            dup_mul_ground\n            dmp_mul_ground\n            dup_quo_ground\n            dmp_quo_ground\n            dup_exquo_ground\n            dmp_exquo_ground\n            dup_lshift\n            dup_rshift\n            dup_abs\n            dmp_abs\n            dup_neg\n            dmp_neg\n            dup_add\n            dmp_add\n            dup_sub\n            dmp_sub\n            dup_add_mul\n            dmp_add_mul\n            dup_sub_mul\n            dmp_sub_mul\n            dup_mul\n            dmp_mul\n            dup_sqr\n            dmp_sqr\n            dup_pow\n            dmp_pow\n            dup_pdiv\n            dup_prem\n            dup_pquo\n            dup_pexquo\n            dmp_pdiv\n            dmp_prem\n            dmp_pquo\n            dmp_pexquo\n            dup_rr_div\n            dmp_rr_div\n            dup_ff_div\n            dmp_ff_div\n            dup_div\n            dup_rem\n            dup_quo\n            dup_exquo\n            dmp_div\n            dmp_rem\n            dmp_quo\n            dmp_exquo\n            dup_max_norm\n            dmp_max_norm\n            dup_l1_norm\n            dmp_l1_norm\n            dup_expand\n            dmp_expand\n        subresultants_qq_zz.py\n          Functions:\n            sylvester\n            sign_seq\n            bezout\n            backward_eye\n            process_bezout_output\n            subresultants_bezout\n            modified_subresultants_bezout\n            sturm_pg\n            sturm_q\n            sturm_amv\n            euclid_pg\n            euclid_q\n            euclid_amv\n            modified_subresultants_pg\n            subresultants_pg\n            subresultants_amv_q\n            compute_sign\n            rem_z\n            quo_z\n            subresultants_amv\n            modified_subresultants_amv\n            correct_sign\n            subresultants_rem\n            pivot\n            rotate_r\n            rotate_l\n            row2poly\n            create_ma\n            find_degree\n            final_touches\n            subresultants_vv\n            subresultants_vv_2\n        constructor.py\n          Functions:\n            _construct_simple\n            _construct_algebraic\n            _construct_composite\n            _construct_expression\n            construct_domain\n        orderings.py\n          Classes:\n            MonomialOrder\n            LexOrder\n            GradedLexOrder\n            ReversedGradedLexOrder\n            ProductOrder\n            InverseOrder\n            _ItemGetter\n          Functions:\n            monomial_key\n            build_product_order\n            inv\n            makelambda\n            _order\n        polyclasses.py\n          Classes:\n            GenericPoly\n            DMP\n            DMF\n            ANP\n          Functions:\n            init_normal_DMP\n            init_normal_DMF\n            init_normal_ANP\n        orthopolys.py\n          Functions:\n            dup_jacobi\n            jacobi_poly\n            dup_gegenbauer\n            gegenbauer_poly\n            dup_chebyshevt\n            chebyshevt_poly\n            dup_chebyshevu\n            chebyshevu_poly\n            dup_hermite\n            hermite_poly\n            dup_legendre\n            legendre_poly\n            dup_laguerre\n            laguerre_poly\n            dup_spherical_bessel_fn\n            dup_spherical_bessel_fn_minus\n            spherical_bessel_fn\n        polytools.py\n          Classes:\n            Poly\n            PurePoly\n            GroebnerBasis\n          Functions:\n            poly_from_expr\n            _poly_from_expr\n            parallel_poly_from_expr\n            _parallel_poly_from_expr\n            _update_args\n            gcd_list\n            lcm_list\n            gff\n            _sorted_factors\n            _factors_product\n            _symbolic_factor_list\n            _symbolic_factor\n            _generic_factor_list\n            _generic_factor\n            to_rational_coeffs\n            _torational_factor_list\n            sqf\n            factor\n            reduced\n            groebner\n            is_zero_dimensional\n            poly\n            try_non_polynomial_gcd\n            try_non_polynomial_lcm\n            _try_rescale\n            _try_translate\n            _has_square_roots\n            _poly\n            key\n            key\n            single_var\n            _real\n            _complex\n            _real\n            _complex\n        compatibility.py\n          Classes:\n            IPolys\n        solvers.py\n          Classes:\n            RawMatrix\n          Functions:\n            eqs_to_matrix\n            solve_lin_sys\n        galoistools.py\n          Functions:\n            gf_crt\n            gf_crt1\n            gf_crt2\n            gf_int\n            gf_degree\n            gf_LC\n            gf_TC\n            gf_strip\n            gf_trunc\n            gf_normal\n            gf_from_dict\n            gf_to_dict\n            gf_from_int_poly\n            gf_to_int_poly\n            gf_neg\n            gf_add_ground\n            gf_sub_ground\n            gf_mul_ground\n            gf_quo_ground\n            gf_add\n            gf_sub\n            gf_mul\n            gf_sqr\n            gf_add_mul\n            gf_sub_mul\n            gf_expand\n            gf_div\n            gf_rem\n            gf_quo\n            gf_exquo\n            gf_lshift\n            gf_rshift\n            gf_pow\n            gf_frobenius_monomial_base\n            gf_frobenius_map\n            _gf_pow_pnm1d2\n            gf_pow_mod\n            gf_gcd\n            gf_lcm\n            gf_cofactors\n            gf_gcdex\n            gf_monic\n            gf_diff\n            gf_eval\n            gf_multi_eval\n            gf_compose\n            gf_compose_mod\n            gf_trace_map\n            _gf_trace_map\n            gf_random\n            gf_irreducible\n            gf_irred_p_ben_or\n            gf_irred_p_rabin\n            gf_irreducible_p\n            gf_sqf_p\n            gf_sqf_part\n            gf_sqf_list\n            gf_Qmatrix\n            gf_Qbasis\n            gf_berlekamp\n            gf_ddf_zassenhaus\n            gf_edf_zassenhaus\n            gf_ddf_shoup\n            gf_edf_shoup\n            gf_zassenhaus\n            gf_shoup\n            gf_factor_sqf\n            gf_factor\n            gf_value\n            linear_congruence\n            _raise_mod_power\n            csolve_prime\n            gf_csolve\n        polyroots.py\n          Functions:\n            roots_linear\n            roots_quadratic\n            roots_cubic\n            _roots_quartic_euler\n            roots_quartic\n            roots_binomial\n            _inv_totient_estimate\n            roots_cyclotomic\n            roots_quintic\n            _quintic_simplify\n            _integer_basis\n            preprocess_roots\n            roots\n            root_factors\n            _sqrt\n            _simplify\n            _update_dict\n            _try_decompose\n            _try_heuristics\n            func\n            _ans\n        __init__.py\n        densebasic.py\n          Functions:\n            poly_LC\n            poly_TC\n            dmp_ground_LC\n            dmp_ground_TC\n            dmp_true_LT\n            dup_degree\n            dmp_degree\n            _rec_degree_in\n            dmp_degree_in\n            _rec_degree_list\n            dmp_degree_list\n            dup_strip\n            dmp_strip\n            _rec_validate\n            _rec_strip\n            dmp_validate\n            dup_reverse\n            dup_copy\n            dmp_copy\n            dup_to_tuple\n            dmp_to_tuple\n            dup_normal\n            dmp_normal\n            dup_convert\n            dmp_convert\n            dup_from_sympy\n            dmp_from_sympy\n            dup_nth\n            dmp_nth\n            dmp_ground_nth\n            dmp_zero_p\n            dmp_zero\n            dmp_one_p\n            dmp_one\n            dmp_ground_p\n            dmp_ground\n            dmp_zeros\n            dmp_grounds\n            dmp_negative_p\n            dmp_positive_p\n            dup_from_dict\n            dup_from_raw_dict\n            dmp_from_dict\n            dup_to_dict\n            dup_to_raw_dict\n            dmp_to_dict\n            dmp_swap\n            dmp_permute\n            dmp_nest\n            dmp_raise\n            dup_deflate\n            dmp_deflate\n            dup_multi_deflate\n            dmp_multi_deflate\n            dup_inflate\n            _rec_inflate\n            dmp_inflate\n            dmp_exclude\n            dmp_include\n            dmp_inject\n            dmp_eject\n            dup_terms_gcd\n            dmp_terms_gcd\n            _rec_list_terms\n            dmp_list_terms\n            dup_apply_pairs\n            dmp_apply_pairs\n            dup_slice\n            dmp_slice\n            dmp_slice_in\n            dup_random\n            sort\n        rootoftools.py\n          Classes:\n            RootOf\n            ComplexRootOf\n            RootSum\n          Functions:\n            _ispow2\n            rootof\n            bisect\n            is_imag\n            key\n        heuristicgcd.py\n          Functions:\n            heugcd\n            _gcd_interpolate\n        polyerrors.py\n          Classes:\n            BasePolynomialError\n            ExactQuotientFailed\n            PolynomialDivisionFailed\n            OperationNotSupported\n            HeuristicGCDFailed\n            ModularGCDFailed\n            HomomorphismFailed\n            IsomorphismFailed\n            ExtraneousFactors\n            EvaluationFailed\n            RefinementFailed\n            CoercionFailed\n            NotInvertible\n            NotReversible\n            NotAlgebraic\n            DomainError\n            PolynomialError\n            UnificationFailed\n            GeneratorsError\n            GeneratorsNeeded\n            ComputationFailed\n            UnivariatePolynomialError\n            MultivariatePolynomialError\n            PolificationFailed\n            OptionError\n            FlagError\n        modulargcd.py\n          Functions:\n            _trivial_gcd\n            _gf_gcd\n            _degree_bound_univariate\n            _chinese_remainder_reconstruction_univariate\n            modgcd_univariate\n            _primitive\n            _deg\n            _LC\n            _swap\n            _degree_bound_bivariate\n            _chinese_remainder_reconstruction_multivariate\n            _interpolate_multivariate\n            modgcd_bivariate\n            _modgcd_multivariate_p\n            modgcd_multivariate\n            _gf_div\n            _rational_function_reconstruction\n            _rational_reconstruction_func_coeffs\n            _gf_gcdex\n            _trunc\n            _euclidean_algorithm\n            _trial_division\n            _evaluate_ground\n            _func_field_modgcd_p\n            _integer_rational_reconstruction\n            _rational_reconstruction_int_coeffs\n            _func_field_modgcd_m\n            _to_ZZ_poly\n            _to_ANP_poly\n            _minpoly_from_dense\n            _primitive_in_x0\n            func_field_modgcd\n            crt_\n        fglmtools.py\n          Functions:\n            matrix_fglm\n            _incr_k\n            _identity_matrix\n            _matrix_mul\n            _update\n            _representing_matrices\n            _basis\n            var\n            representing_matrix\n        rings.py\n          Classes:\n            PolyRing\n            PolyElement\n          Functions:\n            ring\n            xring\n            vring\n            sring\n            _parse_symbols\n            _rebuild\n            term_div\n            term_div\n        groebnertools.py\n          Functions:\n            groebner\n            _buchberger\n            spoly\n            Sign\n            Polyn\n            Num\n            sig\n            lbp\n            sig_cmp\n            sig_key\n            sig_mult\n            lbp_sub\n            lbp_mul_term\n            lbp_cmp\n            lbp_key\n            critical_pair\n            cp_cmp\n            cp_key\n            s_poly\n            is_rewritable_or_comparable\n            f5_reduce\n            _f5b\n            red_groebner\n            is_groebner\n            is_minimal\n            is_reduced\n            groebner_lcm\n            groebner_gcd\n            select\n            normal\n            update\n            reduction\n            is_independent\n            lcm_divides\n        partfrac.py\n          Functions:\n            apart\n            apart_undetermined_coeffs\n            apart_full_decomposition\n            apart_list\n            apart_list_full_decomposition\n            assemble_partfrac_list\n            dummies\n        ring_series.py\n          Functions:\n            _invert_monoms\n            _giant_steps\n            rs_trunc\n            rs_is_puiseux\n            rs_puiseux\n            rs_puiseux2\n            rs_mul\n            rs_square\n            rs_pow\n            rs_subs\n            _has_constant_term\n            _get_constant_term\n            _check_series_var\n            _series_inversion1\n            rs_series_inversion\n            _coefficient_t\n            rs_series_reversion\n            rs_series_from_list\n            rs_diff\n            rs_integrate\n            rs_fun\n            mul_xin\n            pow_xin\n            _nth_root1\n            rs_nth_root\n            rs_log\n            rs_LambertW\n            _exp1\n            rs_exp\n            _atan\n            rs_atan\n            rs_asin\n            _tan1\n            rs_tan\n            rs_cot\n            rs_sin\n            rs_cos\n            rs_cos_sin\n            _atanh\n            rs_atanh\n            rs_sinh\n            rs_cosh\n            _tanh\n            rs_tanh\n            rs_newton\n            rs_hadamard_exp\n            rs_compose_add\n            rs_min_pow\n            _rs_series\n            rs_series\n        polyfuncs.py\n          Functions:\n            symmetrize\n            horner\n            interpolate\n            rational_interpolate\n            viete\n        fields.py\n          Classes:\n            FracField\n            FracElement\n          Functions:\n            field\n            xfield\n            vfield\n            sfield\n            _rebuild\n        sqfreetools.py\n          Functions:\n            dup_sqf_p\n            dmp_sqf_p\n            dup_sqf_norm\n            dmp_sqf_norm\n            dup_gf_sqf_part\n            dmp_gf_sqf_part\n            dup_sqf_part\n            dmp_sqf_part\n            dup_gf_sqf_list\n            dmp_gf_sqf_list\n            dup_sqf_list\n            dup_sqf_list_include\n            dmp_sqf_list\n            dmp_sqf_list_include\n            dup_gff_list\n            dmp_gff_list\n        distributedmodules.py\n          Functions:\n            sdm_monomial_mul\n            sdm_monomial_deg\n            sdm_monomial_lcm\n            sdm_monomial_divides\n            sdm_LC\n            sdm_to_dict\n            sdm_from_dict\n            sdm_sort\n            sdm_strip\n            sdm_add\n            sdm_LM\n            sdm_LT\n            sdm_mul_term\n            sdm_zero\n            sdm_deg\n            sdm_from_vector\n            sdm_to_vector\n            sdm_spoly\n            sdm_ecart\n            sdm_nf_mora\n            sdm_nf_buchberger\n            sdm_nf_buchberger_reduced\n            sdm_groebner\n            Ssugar\n            update\n            removethis\n        dispersion.py\n          Functions:\n            dispersionset\n            dispersion\n        factortools.py\n          Functions:\n            dup_trial_division\n            dmp_trial_division\n            dup_zz_mignotte_bound\n            dmp_zz_mignotte_bound\n            dup_zz_hensel_step\n            dup_zz_hensel_lift\n            _test_pl\n            dup_zz_zassenhaus\n            dup_zz_irreducible_p\n            dup_cyclotomic_p\n            dup_zz_cyclotomic_poly\n            _dup_cyclotomic_decompose\n            dup_zz_cyclotomic_factor\n            dup_zz_factor_sqf\n            dup_zz_factor\n            dmp_zz_wang_non_divisors\n            dmp_zz_wang_test_points\n            dmp_zz_wang_lead_coeffs\n            dup_zz_diophantine\n            dmp_zz_diophantine\n            dmp_zz_wang_hensel_lifting\n            dmp_zz_wang\n            dmp_zz_factor\n            dup_ext_factor\n            dmp_ext_factor\n            dup_gf_factor\n            dmp_gf_factor\n            dup_factor_list\n            dup_factor_list_include\n            dmp_factor_list\n            dmp_factor_list_include\n            dup_irreducible_p\n            dmp_irreducible_p\n        monomials.py\n          Classes:\n            MonomialOps\n            Monomial\n          Functions:\n            itermonomials\n            monomial_count\n            monomial_mul\n            monomial_div\n            monomial_ldiv\n            monomial_pow\n            monomial_gcd\n            monomial_lcm\n            monomial_divides\n            monomial_max\n            monomial_min\n            monomial_deg\n            term_div\n        domains/\n            compositedomain.py\n              Classes:\n                CompositeDomain\n            pythonrationalfield.py\n              Classes:\n                PythonRationalField\n            groundtypes.py\n              Classes:\n                GMPYInteger\n                GMPYRational\n              Functions:\n                python_sqrt\n                python_factorial\n            gmpyfinitefield.py\n              Classes:\n                GMPYFiniteField\n            integerring.py\n              Classes:\n                IntegerRing\n            quotientring.py\n              Classes:\n                QuotientRingElement\n                QuotientRing\n            finitefield.py\n              Classes:\n                FiniteField\n            polynomialring.py\n              Classes:\n                PolynomialRing\n            complexfield.py\n              Classes:\n                ComplexField\n            expressiondomain.py\n              Classes:\n                ExpressionDomain\n                Expression\n            __init__.py\n            domain.py\n              Classes:\n                Domain\n              Functions:\n                mkinexact\n            gmpyrationalfield.py\n              Classes:\n                GMPYRationalField\n            ring.py\n              Classes:\n                Ring\n            pythonfinitefield.py\n              Classes:\n                PythonFiniteField\n            gmpyintegerring.py\n              Classes:\n                GMPYIntegerRing\n            domainelement.py\n              Classes:\n                DomainElement\n            characteristiczero.py\n              Classes:\n                CharacteristicZero\n            field.py\n              Classes:\n                Field\n            realfield.py\n              Classes:\n                RealField\n            rationalfield.py\n              Classes:\n                RationalField\n            modularinteger.py\n              Classes:\n                ModularInteger\n                cls\n              Functions:\n                ModularIntegerFactory\n            algebraicfield.py\n              Classes:\n                AlgebraicField\n            old_polynomialring.py\n              Classes:\n                PolynomialRingBase\n                GlobalPolynomialRing\n                GeneralizedPolynomialRing\n              Functions:\n                _vector_to_sdm_helper\n                PolynomialRing\n            fractionfield.py\n              Classes:\n                FractionField\n            simpledomain.py\n              Classes:\n                SimpleDomain\n            pythonintegerring.py\n              Classes:\n                PythonIntegerRing\n            old_fractionfield.py\n              Classes:\n                FractionField\n            mpelements.py\n              Classes:\n                RealElement\n                ComplexElement\n                MPContext\n            pythonrational.py\n              Classes:\n                PythonRational\n              Functions:\n                sympify_pythonrational\n        benchmarks/\n            bench_solvers.py\n              Functions:\n                eqs_165x165\n                sol_165x165\n                time_eqs_165x165\n                time_solve_lin_sys_165x165\n                time_verify_sol_165x165\n                time_to_expr_eqs_165x165\n                eqs_189x49\n                sol_189x49\n                time_eqs_189x49\n                time_solve_lin_sys_189x49\n                time_verify_sol_189x49\n                time_to_expr_eqs_189x49\n                eqs_10x8\n                sol_10x8\n                time_eqs_10x8\n                time_solve_lin_sys_10x8\n                time_verify_sol_10x8\n                time_to_expr_eqs_10x8\n            __init__.py\n            bench_groebnertools.py\n              Functions:\n                time_vertex_color_12_vertices_23_edges\n                time_vertex_color_12_vertices_24_edges\n            bench_galoispolys.py\n              Functions:\n                gathen_poly\n                shoup_poly\n                genprime\n                timeit_gathen_poly_f10_zassenhaus\n                timeit_gathen_poly_f10_shoup\n                timeit_gathen_poly_f20_zassenhaus\n                timeit_gathen_poly_f20_shoup\n                timeit_shoup_poly_F10_zassenhaus\n                timeit_shoup_poly_F10_shoup\n                timeit_shoup_poly_F20_zassenhaus\n                timeit_shoup_poly_F20_shoup\n        agca/\n            __init__.py\n            modules.py\n              Classes:\n                Module\n                ModuleElement\n                FreeModuleElement\n                FreeModule\n                FreeModulePolyRing\n                FreeModuleQuotientRing\n                SubModule\n                SubQuotientModule\n                ModuleOrder\n                SubModulePolyRing\n                SubModuleQuotientRing\n                QuotientModuleElement\n                QuotientModule\n            homomorphisms.py\n              Classes:\n                ModuleHomomorphism\n                MatrixHomomorphism\n                FreeModuleHomomorphism\n                SubModuleHomomorphism\n              Functions:\n                homomorphism\n                freepres\n            ideals.py\n              Classes:\n                Ideal\n                ModuleImplementedIdeal\n    stats/\n        error_prop.py\n          Functions:\n            variance_prop\n        rv.py\n          Classes:\n            RandomDomain\n            SingleDomain\n            ConditionalDomain\n            PSpace\n            SinglePSpace\n            RandomSymbol\n            ProductPSpace\n            ProductDomain\n            Density\n            NamedArgsMixin\n          Functions:\n            random_symbols\n            pspace\n            sumsets\n            rs_swap\n            given\n            expectation\n            cdf\n            sample_iter\n            sample_iter_lambdify\n            sample_iter_subs\n            sampling_P\n            sampling_E\n            sampling_density\n            dependent\n            independent\n            pspace_independent\n            rv_subs\n            _value_check\n            return_generator\n        crv.py\n          Classes:\n            ContinuousDomain\n            SingleContinuousDomain\n            ProductContinuousDomain\n            ConditionalContinuousDomain\n            ContinuousDistribution\n            SingleContinuousDistribution\n            ContinuousDistributionHandmade\n            ContinuousPSpace\n            SingleContinuousPSpace\n            ProductContinuousPSpace\n          Functions:\n            _reduce_inequalities\n            reduce_rational_inequalities_wrap\n        symbolic_probability.py\n          Classes:\n            Probability\n            Expectation\n            Variance\n            Covariance\n        rv_interface.py\n          Functions:\n            moment\n            variance\n            standard_deviation\n            covariance\n            correlation\n            cmoment\n            smoment\n            skewness\n        frv_types.py\n          Classes:\n            FiniteDistributionHandmade\n            DiscreteUniformDistribution\n            DieDistribution\n            BernoulliDistribution\n            BinomialDistribution\n            HypergeometricDistribution\n            RademacherDistribution\n          Functions:\n            rv\n            FiniteRV\n            DiscreteUniform\n            Die\n            Bernoulli\n            Coin\n            Binomial\n            Hypergeometric\n            Rademacher\n        __init__.py\n        drv.py\n          Classes:\n            SingleDiscreteDistribution\n            SingleDiscreteDomain\n            SingleDiscretePSpace\n        frv.py\n          Classes:\n            FiniteDensity\n            FiniteDomain\n            SingleFiniteDomain\n            ProductFiniteDomain\n            ConditionalFiniteDomain\n            SingleFiniteDistribution\n            FinitePSpace\n            SingleFinitePSpace\n            ProductFinitePSpace\n        drv_types.py\n          Classes:\n            PoissonDistribution\n            GeometricDistribution\n          Functions:\n            rv\n            Poisson\n            Geometric\n        crv_types.py\n          Classes:\n            ArcsinDistribution\n            BeniniDistribution\n            BetaDistribution\n            BetaPrimeDistribution\n            CauchyDistribution\n            ChiDistribution\n            ChiNoncentralDistribution\n            ChiSquaredDistribution\n            DagumDistribution\n            ExponentialDistribution\n            FDistributionDistribution\n            FisherZDistribution\n            FrechetDistribution\n            GammaDistribution\n            GammaInverseDistribution\n            GompertzDistribution\n            KumaraswamyDistribution\n            LaplaceDistribution\n            LogisticDistribution\n            LogNormalDistribution\n            MaxwellDistribution\n            NakagamiDistribution\n            NormalDistribution\n            ParetoDistribution\n            QuadraticUDistribution\n            RaisedCosineDistribution\n            RayleighDistribution\n            ShiftedGompertzDistribution\n            StudentTDistribution\n            TriangularDistribution\n            UniformDistribution\n            UniformSumDistribution\n            VonMisesDistribution\n            WeibullDistribution\n            WignerSemicircleDistribution\n          Functions:\n            ContinuousRV\n            rv\n            Arcsin\n            Benini\n            Beta\n            BetaPrime\n            Cauchy\n            Chi\n            ChiNoncentral\n            ChiSquared\n            Dagum\n            Erlang\n            Exponential\n            FDistribution\n            FisherZ\n            Frechet\n            Gamma\n            GammaInverse\n            Gompertz\n            Kumaraswamy\n            Laplace\n            Logistic\n            LogNormal\n            Maxwell\n            Nakagami\n            Normal\n            Pareto\n            QuadraticU\n            RaisedCosine\n            Rayleigh\n            ShiftedGompertz\n            StudentT\n            Triangular\n            Uniform\n            UniformSum\n            VonMises\n            Weibull\n            WignerSemicircle\n    codegen/\n        __init__.py\n        ast.py\n          Classes:\n            Assignment\n            AugmentedAssignment\n            AddAugmentedAssignment\n            SubAugmentedAssignment\n            MulAugmentedAssignment\n            DivAugmentedAssignment\n            ModAugmentedAssignment\n            CodeBlock\n            For\n          Functions:\n            aug_assign\n    benchmarks/\n        bench_symbench.py\n          Functions:\n            bench_R1\n            bench_R2\n            bench_R3\n            bench_R4\n            bench_R5\n            bench_R6\n            bench_R7\n            bench_R8\n            _bench_R9\n            bench_R10\n            bench_R11\n            bench_S1\n            f\n            hermite\n            blowup\n            uniq\n            right\n            srange\n        bench_discrete_log.py\n          Functions:\n            bench_discrete_log\n        __init__.py\n        bench_meijerint.py\n          Functions:\n            normal\n            exponential\n            E\n    logic/\n        boolalg.py\n          Classes:\n            Boolean\n            BooleanAtom\n            BooleanTrue\n            BooleanFalse\n            BooleanFunction\n            And\n            Or\n            Not\n            Xor\n            Nand\n            Nor\n            Implies\n            Equivalent\n            ITE\n          Functions:\n            conjuncts\n            disjuncts\n            distribute_and_over_or\n            distribute_or_over_and\n            _distribute\n            to_cnf\n            to_dnf\n            is_nnf\n            is_cnf\n            is_dnf\n            _is_form\n            eliminate_implications\n            is_literal\n            to_int_repr\n            term_to_integer\n            integer_to_term\n            truth_table\n            _check_pair\n            _convert_to_varsSOP\n            _convert_to_varsPOS\n            _simplified_pairs\n            _compare_term\n            _rem_redundancy\n            SOPform\n            POSform\n            _find_predicates\n            simplify_logic\n            _finger\n            bool_map\n            append_symbol\n            match\n        __init__.py\n        inference.py\n          Classes:\n            KB\n            PropKB\n          Functions:\n            literal_symbol\n            satisfiable\n            valid\n            pl_true\n            entails\n            _validate\n        utilities/\n            __init__.py\n            dimacs.py\n              Functions:\n                load\n                load_file\n        algorithms/\n            __init__.py\n            dpll2.py\n              Classes:\n                SATSolver\n                Level\n              Functions:\n                dpll_satisfiable\n                _all_models\n            dpll.py\n              Functions:\n                dpll_satisfiable\n                dpll\n                dpll_int_repr\n                pl_true_int_repr\n                unit_propagate\n                unit_propagate_int_repr\n                find_pure_symbol\n                find_pure_symbol_int_repr\n                find_unit_clause\n                find_unit_clause_int_repr\n    sandbox/\n        __init__.py\n        indexed_integrals.py\n          Classes:\n            IndexedIntegral\n    liealgebras/\n        type_g.py\n          Classes:\n            TypeG\n        type_f.py\n          Classes:\n            TypeF\n        root_system.py\n          Classes:\n            RootSystem\n        type_b.py\n          Classes:\n            TypeB\n        cartan_matrix.py\n          Functions:\n            CartanMatrix\n        type_e.py\n          Classes:\n            TypeE\n        __init__.py\n        cartan_type.py\n          Classes:\n            CartanType_generator\n            Standard_Cartan\n        type_c.py\n          Classes:\n            TypeC\n        type_a.py\n          Classes:\n            TypeA\n        type_d.py\n          Classes:\n            TypeD\n        dynkin_diagram.py\n          Functions:\n            DynkinDiagram\n        weyl_group.py\n          Classes:\n            WeylGroup\n    simplify/\n        fu.py\n          Functions:\n            TR0\n            TR1\n            TR2\n            TR2i\n            TR3\n            TR4\n            _TR56\n            TR5\n            TR6\n            TR7\n            TR8\n            TR9\n            TR10\n            TR10i\n            TR11\n            TR12\n            TR12i\n            TR13\n            TRmorrie\n            TR14\n            TR15\n            TR16\n            TR111\n            TR22\n            L\n            fu\n            process_common_addends\n            _roots\n            trig_split\n            as_f_sign_1\n            _osborne\n            _osbornei\n            hyper_as_trig\n            f\n            f\n            f\n            f\n            _f\n            f\n            f\n            f\n            f\n            f\n            f\n            f\n            f\n            f\n            f\n            f\n            f\n            f\n            f\n            f\n            pow_cos_sin\n            f\n            f\n            ok\n            factorize\n            do\n            do\n            ok\n            ok\n        cse_opts.py\n          Functions:\n            sub_pre\n            sub_post\n        epathtools.py\n          Classes:\n            EPath\n          Functions:\n            epath\n            _apply\n            _select\n        combsimp.py\n          Classes:\n            _rf\n          Functions:\n            combsimp\n            rule\n            rule_gamma\n            gamma_rat\n            gamma_factor\n            explicate\n            _run\n            _mult_thm\n            find_fuzzy\n            compute_ST\n            update_ST\n        cse_main.py\n          Functions:\n            reps_toposort\n            cse_separate\n            preprocess_for_cse\n            postprocess_for_cse\n            pairwise_most_common\n            opt_cse\n            tree_cse\n            cse\n            _find_opts\n            _match_common_args\n            _find_repeated\n            _rebuild\n            ufunc\n            as_dict\n            from_dict\n            update\n            get_copy\n            restore\n        ratsimp.py\n          Functions:\n            ratsimp\n            ratsimpmodprime\n            staircase\n            _ratsimpmodprime\n        hyperexpand.py\n          Classes:\n            Hyper_Function\n            G_Function\n            Formula\n            FormulaCollection\n            MeijerFormula\n            MeijerFormulaCollection\n            Operator\n            MultOperator\n            ShiftA\n            ShiftB\n            UnShiftA\n            UnShiftB\n            MeijerShiftA\n            MeijerShiftB\n            MeijerShiftC\n            MeijerShiftD\n            MeijerUnShiftA\n            MeijerUnShiftB\n            MeijerUnShiftC\n            MeijerUnShiftD\n            ReduceOrder\n          Functions:\n            _mod1\n            add_formulae\n            add_meijerg_formulae\n            make_simp\n            debug\n            _reduce_order\n            reduce_order\n            reduce_order_meijer\n            make_derivative_operator\n            apply_operators\n            devise_plan\n            try_shifted_sum\n            try_polynomial\n            try_lerchphi\n            build_hypergeometric_formula\n            hyperexpand_special\n            _hyperexpand\n            devise_plan_meijer\n            _meijergexpand\n            hyperexpand\n            add\n            addb\n            fp\n            fm\n            add\n            detect_uppergamma\n            detect_3113\n            simp\n            doit\n            do_shifts\n            do_shifts_a\n            do_shifts_b\n            carryout_plan\n            try_shift\n            can_do\n            do_slater\n            tr\n            weight\n            do_replace\n            do_meijer\n            tr\n            others\n        __init__.py\n        radsimp.py\n          Functions:\n            collect\n            rcollect\n            collect_sqrt\n            collect_const\n            radsimp\n            rad_rationalize\n            fraction\n            numer\n            denom\n            fraction_expand\n            numer_expand\n            denom_expand\n            split_surds\n            _split_gcd\n            make_expression\n            parse_derivative\n            parse_term\n            parse_expression\n            _num\n            ispow2\n            handle\n        hyperexpand_doc.py\n        sqrtdenest.py\n          Classes:\n            SqrtdenestStopIteration\n          Functions:\n            is_sqrt\n            sqrt_depth\n            is_algebraic\n            _subsets\n            sqrtdenest\n            _sqrt_match\n            _sqrtdenest0\n            _sqrtdenest_rec\n            _sqrtdenest1\n            _sqrt_symbolic_denest\n            _sqrt_numeric_denest\n            sqrt_biquadratic_denest\n            _denester\n        trigsimp.py\n          Functions:\n            trigsimp_groebner\n            trigsimp\n            exptrigsimp\n            trigsimp_old\n            _dotrig\n            _trigpats\n            _replace_mul_fpowxgpow\n            _match_div_rewrite\n            _trigsimp\n            __trigsimp\n            futrig\n            _futrig\n            _is_Expr\n            _eapply\n            parse_hints\n            build_ideal\n            analyse_gens\n            groebnersimp\n            exp_trig\n            groebnersimp\n            traverse\n            traverse\n        simplify.py\n          Functions:\n            separatevars\n            _separatevars\n            _separatevars_dict\n            _is_sum_surds\n            posify\n            hypersimp\n            hypersimilar\n            signsimp\n            simplify\n            sum_simplify\n            sum_add\n            product_simplify\n            product_mul\n            _nthroot_solve\n            logcombine\n            bottom_up\n            besselsimp\n            nthroot\n            nsimplify\n            _real_to_rational\n            clear_coefficients\n            shorter\n            f\n            replacer\n            torewrite\n            tominus\n            expander\n            nsimplify_real\n            gooda\n            goodlog\n            repl\n            tofunc\n            tofunc\n            repl\n        powsimp.py\n          Functions:\n            powsimp\n            powdenest\n            _denest_pow\n            recurse\n            nc_gcd\n            ratq\n            bkey\n            update\n            _terms\n        traversaltools.py\n          Functions:\n            use\n            _use\n    combinatorics/\n        partitions.py\n          Classes:\n            Partition\n            IntegerPartition\n          Functions:\n            random_integer_partition\n            RGS_generalized\n            RGS_enum\n            RGS_unrank\n            RGS_rank\n        tensor_can.py\n          Functions:\n            dummy_sgs\n            _min_dummies\n            _trace_S\n            _trace_D\n            _dumx_remove\n            transversal2coset\n            double_coset_can_rep\n            canonical_free\n            _get_map_slots\n            _lift_sgens\n            canonicalize\n            perm_af_direct_product\n            bsgs_direct_product\n            get_symmetric_group_sgs\n            get_transversals\n            _is_minimal_bsgs\n            get_minimal_bsgs\n            tensor_gens\n            gens_products\n            _get_bsgs\n        permutations.py\n          Classes:\n            Cycle\n            Permutation\n          Functions:\n            _af_rmul\n            _af_rmuln\n            _af_parity\n            _af_invert\n            _af_pow\n            _af_commutes_with\n            _merge\n            _unrank1\n            _rank1\n        polyhedron.py\n          Classes:\n            Polyhedron\n          Functions:\n            _pgroup_calcs\n            _pgroup_of_double\n            _string_to_perm\n        group_constructs.py\n          Functions:\n            DirectProduct\n        named_groups.py\n          Functions:\n            AbelianGroup\n            AlternatingGroup\n            CyclicGroup\n            DihedralGroup\n            SymmetricGroup\n            RubikGroup\n        __init__.py\n        graycode.py\n          Classes:\n            GrayCode\n          Functions:\n            random_bitstring\n            gray_to_bin\n            bin_to_gray\n            get_subset_from_bitstring\n            graycode_subsets\n            _unrank\n        generators.py\n          Functions:\n            symmetric\n            cyclic\n            alternating\n            dihedral\n            rubik_cube_generators\n            rubik\n            getr\n            getl\n            getu\n            getd\n            setr\n            setl\n            setu\n            setd\n            cw\n            ccw\n            fcw\n            fccw\n            FCW\n            FCCW\n            UCW\n            UCCW\n            perm\n        fp_groups.py\n          Classes:\n            FpGroup\n            CosetTable\n          Functions:\n            fp_group\n            xfp_group\n            vfp_group\n            _parse_relators\n            coset_enumeration_r\n            coset_enumeration_c\n            low_index_subgroups\n            descendant_subgroups\n            try_descendant\n            first_in_class\n            define_schreier_generators\n            reidemeister_relators\n            rewrite\n            elimination_technique_1\n            elimination_technique_2\n            simplify_presentation\n            _simplification_technique_1\n            reidemeister_presentation\n        prufer.py\n          Classes:\n            Prufer\n        perm_groups.py\n          Classes:\n            PermutationGroup\n          Functions:\n            _orbit\n            _orbits\n            _orbit_transversal\n            _stabilizer\n            get_reps\n            update_nu\n            prop\n            test\n        subsets.py\n          Classes:\n            Subset\n          Functions:\n            ksubsets\n            _ranklex\n        free_groups.py\n          Classes:\n            FreeGroup\n            FreeGroupElement\n          Functions:\n            free_group\n            xfree_group\n            vfree_group\n            _parse_symbols\n            letter_form_to_array_form\n            zero_mul_simp\n        util.py\n          Functions:\n            _base_ordering\n            _check_cycles_alt_sym\n            _distribute_gens_by_base\n            _handle_precomputed_bsgs\n            _orbits_transversals_from_bsgs\n            _remove_gens\n            _strip\n            _strip_af\n            _strong_gens_from_distr\n    diffgeom/\n        rn.py\n        __init__.py\n        diffgeom.py\n          Classes:\n            Manifold\n            Patch\n            CoordSystem\n            Point\n            BaseScalarField\n            BaseVectorField\n            Commutator\n            Differential\n            TensorProduct\n            WedgeProduct\n            LieDerivative\n            BaseCovarDerivativeOp\n            CovarDerivativeOp\n          Functions:\n            intcurve_series\n            intcurve_diffequ\n            dummyfy\n            contravariant_order\n            covariant_order\n            vectors_in_basis\n            twoform_to_matrix\n            metric_to_Christoffel_1st\n            metric_to_Christoffel_2nd\n            metric_to_Riemann_components\n            metric_to_Ricci_components\n            iter_vfield\n            taylor_terms_per_coord\n    unify/\n        rewrite.py\n          Functions:\n            rewriterule\n            rewrite_rl\n        __init__.py\n        core.py\n          Classes:\n            Compound\n            Variable\n            CondVariable\n          Functions:\n            unify\n            unify_var\n            occur_check\n            assoc\n            is_args\n            unpack\n            allcombinations\n            partition\n            index\n        usympy.py\n          Functions:\n            sympy_associative\n            sympy_commutative\n            is_associative\n            is_commutative\n            mk_matchtype\n            deconstruct\n            construct\n            rebuild\n            unify\n            matchtype\n    utilities/\n        memoization.py\n          Functions:\n            recurrence_memo\n            assoc_recurrence_memo\n            decorator\n            decorator\n            g\n            g\n        magic.py\n          Functions:\n            pollute\n        source.py\n          Functions:\n            source\n            get_class\n            get_mod_func\n        timeutils.py\n          Functions:\n            timed\n            __do_timings\n            _print_timestack\n            timethis\n            decorator\n            wrapper\n        pkgdata.py\n          Functions:\n            get_resource\n        pytest.py\n          Classes:\n            RaisesContext\n            XFail\n            XPass\n            Skipped\n          Functions:\n            raises\n            XFAIL\n            skip\n            SKIP\n            slow\n            SKIP\n            wrapper\n            wrapper\n            func_wrapper\n            skipping\n            func_wrapper\n            inner\n        misc.py\n          Functions:\n            filldedent\n            rawlines\n            debug_decorator\n            debug\n            find_executable\n            func_name\n            _replace\n            replace\n            translate\n            maketree\n            decorated\n            tree\n            indent\n        decorator.py\n          Classes:\n            no_attrs_in_subclass\n          Functions:\n            threaded_factory\n            threaded\n            xthreaded\n            conserve_mpmath_dps\n            doctest_depends_on\n            public\n            memoize_property\n            threaded_func\n            func_wrapper\n            depends_on_deco\n            decorator\n            wrapper\n        autowrap.py\n          Classes:\n            CodeWrapError\n            CodeWrapper\n            DummyWrapper\n            CythonCodeWrapper\n            F2PyCodeWrapper\n            UfuncifyCodeWrapper\n          Functions:\n            _get_code_wrapper_class\n            _infer_language\n            _validate_backend_language\n            autowrap\n            binary_function\n            ufuncify\n        enumerative.py\n          Classes:\n            PartComponent\n            MultisetPartitionTraverser\n          Functions:\n            multiset_partitions_taocp\n            factoring_visitor\n            list_visitor\n            part_key\n        __init__.py\n        codegen.py\n          Classes:\n            Routine\n            DataType\n            Variable\n            Argument\n            InputArgument\n            ResultBase\n            OutputArgument\n            InOutArgument\n            Result\n            CodeGen\n            CodeGenError\n            CodeGenArgumentListError\n            CCodeGen\n            FCodeGen\n            JuliaCodeGen\n            OctaveCodeGen\n          Functions:\n            get_default_datatype\n            get_code_generator\n            codegen\n            make_routine\n        exceptions.py\n          Classes:\n            SymPyDeprecationWarning\n        benchmarking.py\n          Classes:\n            Directory\n            Module\n            Timer\n            Function\n            BenchSession\n          Functions:\n            main\n        lambdify.py\n          Functions:\n            _import\n            lambdify\n            _module_present\n            _get_namespace\n            lambdastr\n            _imp_namespace\n            implemented_function\n            sub_args\n            sub_expr\n            isiter\n            array_wrap\n            wrapper\n        randtest.py\n          Functions:\n            random_complex_number\n            verify_numerically\n            test_derivative_numerically\n            _randrange\n            _randint\n            give\n            give\n        iterables.py\n          Functions:\n            flatten\n            unflatten\n            reshape\n            group\n            multiset\n            postorder_traversal\n            interactive_traversal\n            ibin\n            variations\n            subsets\n            filter_symbols\n            numbered_symbols\n            capture\n            sift\n            take\n            dict_merge\n            common_prefix\n            common_suffix\n            prefixes\n            postfixes\n            topological_sort\n            rotate_left\n            rotate_right\n            multiset_combinations\n            multiset_permutations\n            _partition\n            _set_partitions\n            multiset_partitions\n            partitions\n            ordered_partitions\n            binary_partitions\n            has_dups\n            has_variety\n            uniq\n            generate_bell\n            generate_involutions\n            generate_derangements\n            necklaces\n            bracelets\n            generate_oriented_forest\n            minlex\n            runs\n            kbins\n            permute_signs\n            signed_permutations\n            cprint\n            _interactive_traversal\n            partition\n        runtests.py\n          Classes:\n            Skipped\n            SymPyTests\n            SymPyDocTests\n            SymPyDocTestFinder\n            SymPyDocTestRunner\n            SymPyOutputChecker\n            Reporter\n            PyTestReporter\n            Transform\n            DummyWindow\n          Functions:\n            _indent\n            _report_failure\n            convert_to_native_paths\n            get_sympy_dir\n            sys_normcase\n            setup_pprint\n            run_in_subprocess_with_hash_randomization\n            run_all_tests\n            test\n            _test\n            doctest\n            _doctest\n            split_list\n            sympytestfile\n            callback\n            importable\n            findout_terminal_width\n            add_text\n        mathml/\n            __init__.py\n              Functions:\n                add_mathml_headers\n                apply_xsl\n                c2p\n    categories/\n        __init__.py\n        baseclasses.py\n          Classes:\n            Class\n            Object\n            Morphism\n            IdentityMorphism\n            NamedMorphism\n            CompositeMorphism\n            Category\n            Diagram\n        diagram_drawing.py\n          Classes:\n            _GrowableGrid\n            DiagramGrid\n            ArrowStringDescription\n            XypicDiagramDrawer\n          Functions:\n            xypic_draw_diagram\n            preview_diagram\n            lay_out_group\n            group_to_finiteset\n            group_size\n            place_objects\n            traverse_component\n            repeat_string_cond\n            count_morphisms_undirected\n            count_morphisms_filtered\n            abs_xrange\n            set_label_position\n            good_triangle\nrelease/\n    fabfile.py\n      Classes:\n        URLs\n        AuthenticationFailed\n      Functions:\n        full_path_split\n        use_venv\n        prepare\n        prepare_apt\n        remove_userspace\n        checkout_cache\n        gitrepos\n        get_sympy_version\n        get_sympy_short_version\n        test_sympy\n        test_tarball\n        release\n        source_tarball\n        build_docs\n        copy_release_files\n        show_files\n        compare_tar_against_git\n        md5\n        size\n        table\n        get_tarball_name\n        tarball_formatter\n        get_previous_version_tag\n        get_authors\n        print_authors\n        check_tag_exists\n        update_websites\n        get_location\n        update_docs\n        update_sympy_org\n        upload\n        distutils_check\n        pypi_register\n        pypi_upload\n        test_pypi\n        GitHub_release_text\n        GitHub_release\n        GitHub_check_authentication\n        GitHub_authenticate\n        generate_token\n        save_token_file\n        load_token_file\n        query_GitHub\n        vagrant\n        get_vagrant_config\n        restart_network\n        uname\n        tag\n        lastnamekey\ndoc/\n    generate_logos.py\n      Functions:\n        main\n        generate_notail_notext_versions\n        convert_to_png\n        convert_to_ico\n        versionkey_to_boolean_tuple\n        get_svg_filename_from_versionkey\n        searchElementById\n        load_svg\n        save_svg\n    api/\n        conf.py\n    src/\n        conf.py\n    ext/\n        docscrape.py\n          Classes:\n            Reader\n            NumpyDocString\n            FunctionDoc\n            ClassDoc\n          Functions:\n            indent\n            dedent_lines\n            header\n            inspect_getmembers\n            _is_show_member\n            is_unindented\n            parse_item_name\n            push_item\n            strip_each_in\n            splitlines_x\n        numpydoc.py\n          Classes:\n            ManglingDomainBase\n            NumpyPythonDomain\n            NumpyCDomain\n            directive\n          Functions:\n            mangle_docstrings\n            mangle_signature\n            setup\n            wrap_mangling_directive\n        sympylive.py\n          Functions:\n            builder_inited\n            setup\n        docscrape_sphinx.py\n          Classes:\n            SphinxDocString\n            SphinxFunctionDoc\n            SphinxClassDoc\n            SphinxObjDoc\n          Functions:\n            get_doc_object\nexamples/\n    all.py\n      Classes:\n        DummyFile\n      Functions:\n        __import__\n        load_example_module\n        run_examples\n        run_example\n        suppress_output\n        show_summary\n        main\n    intermediate/\n        mplot3d.py\n          Functions:\n            mplot3d\n            main\n        vandermonde.py\n          Functions:\n            symbol_gen\n            comb_w_rep\n            vandermonde\n            gen_poly\n            main\n        differential_equations.py\n          Functions:\n            main\n        sample.py\n          Functions:\n            sample2d\n            sample3d\n            sample\n            meshgrid\n        print_gtk.py\n          Functions:\n            main\n        infinite_1d_box.py\n          Functions:\n            X_n\n            E_n\n            energy_corrections\n            main\n        mplot2d.py\n          Functions:\n            mplot2d\n            main\n        coupled_cluster.py\n          Functions:\n            get_CC_operators\n            main\n        trees.py\n          Functions:\n            T\n            A\n            main\n        partial_differential_eqs.py\n          Functions:\n            main\n    beginner/\n        expansion.py\n          Functions:\n            main\n        substitution.py\n          Functions:\n            main\n        precision.py\n          Functions:\n            main\n        plot_examples.py\n        print_pretty.py\n          Functions:\n            main\n        plotting_nice_plot.py\n          Functions:\n            main\n        functions.py\n          Functions:\n            main\n        basic.py\n          Functions:\n            main\n        series.py\n          Functions:\n            main\n        differentiation.py\n          Functions:\n            main\n        limits_examples.py\n          Functions:\n            sqrt3\n            show\n            main\n    advanced/\n        qft.py\n          Functions:\n            u\n            v\n            pslash\n            Tr\n            xprint\n            main\n        pyglet_plotting.py\n          Functions:\n            main\n            example_wrapper\n            mirrored_saddles\n            mirrored_saddles_saveimage\n            mirrored_ellipsoids\n            saddle_colored_by_derivative\n            ding_dong_surface\n            polar_circle\n            polar_flower\n            simple_cylinder\n            cylindrical_hyperbola\n            extruded_hyperbolas\n            torus\n            warped_torus\n            parametric_spiral\n            multistep_gradient\n            lambda_vs_sympy_evaluation\n            gradient_vectors\n            help_str\n            example\n            gradient_vectors_inner\n            draw_gradient_vectors\n            draw_arrow\n            draw\n        hydrogen.py\n          Functions:\n            main\n        fem.py\n          Classes:\n            ReferenceSimplex\n            Lagrange\n          Functions:\n            bernstein_space\n            create_point_set\n            create_matrix\n            main\n        dense_coding_example.py\n          Functions:\n            main\n        pidigits.py\n          Functions:\n            display_fraction\n            calculateit\n            interactive\n            main\n        autowrap_ufuncify.py\n          Functions:\n            main\n        relativity.py\n          Classes:\n            MT\n            G\n            Riemann\n            Ricci\n          Functions:\n            grad\n            d\n            curvature\n            pprint_Gamma_udd\n            pprint_Rmn_dd\n            eq1\n            eq2\n            eq3\n            eq4\n            main\n        grover_example.py\n          Functions:\n            demo_vgate_app\n            black_box\n            main\n        curvilinear_coordinates.py\n          Functions:\n            laplace\n            transform\n            main\n        gibbs_phenomenon.py\n          Functions:\n            l2_norm\n            l2_inner_product\n            l2_projection\n            l2_gram_schmidt\n            integ\n            series\n            msolve\n            main\n        autowrap_integrators.py\n          Functions:\n            main\nbin/\n    coverage_report.py\n      Functions:\n        generate_covered_files\n        make_report\n    sympy_time.py\n      Functions:\n        new_import\n    sympy_time_cache.py\n      Classes:\n        TreeNode\n      Functions:\n        new_import\n    coverage_doctest.py\n      Classes:\n        FindInSphinx\n      Functions:\n        print_header\n        print_coverage\n        _is_indirect\n        _get_arg_list\n        get_mod_name\n        find_sphinx\n        process_function\n        process_class\n        coverage\n        go\n    ask_update.py\n    authors_update.py\n      Functions:\n        move\n    generate_module_list.py\n      Functions:\n        get_paths\n        generate_module_list\n    generate_test_list.py\n      Functions:\n        get_paths\n        generate_test_list\n    get_sympy.py\n      Functions:\n        path_hack\n    mailmap_update.py\n\n###\n\nPlease provide the complete set of locations as either a class name, a function name, or a variable name.\nNote that if you include a class, you do not need to list its specific methods.\nYou can include either the entire class or don't include the class name and instead include specific methods in the class.\n### Examples:\n```\nfull_path1/file1.py\nfunction: my_function_1\nclass: MyClass1\nfunction: MyClass2.my_method\n\nfull_path2/file2.py\nvariable: my_var\nfunction: MyClass3.my_method\n\nfull_path3/file3.py\nfunction: my_function_2\nfunction: my_function_3\nfunction: MyClass4.my_method_1\nclass: MyClass5\n```\n\nReturn just the locations."}
