{"instance_id": "scikit-learn__scikit-learn-10297", "num_tokens of the message": 14596, "message": "Please look through the following GitHub problem description and Repository structure with function names of each file and provide a list of files that one would need to edit to fix the problem.\n\n### GitHub Problem Description ###\nlinear_model.RidgeClassifierCV's Parameter store_cv_values issue\n#### Description\r\nParameter store_cv_values error on sklearn.linear_model.RidgeClassifierCV\r\n\r\n#### Steps/Code to Reproduce\r\nimport numpy as np\r\nfrom sklearn import linear_model as lm\r\n\r\n#test database\r\nn = 100\r\nx = np.random.randn(n, 30)\r\ny = np.random.normal(size = n)\r\n\r\nrr = lm.RidgeClassifierCV(alphas = np.arange(0.1, 1000, 0.1), normalize = True, \r\n                                         store_cv_values = True).fit(x, y)\r\n\r\n#### Expected Results\r\nExpected to get the usual ridge regression model output, keeping the cross validation predictions as attribute.\r\n\r\n#### Actual Results\r\nTypeError: __init__() got an unexpected keyword argument 'store_cv_values'\r\n\r\nlm.RidgeClassifierCV actually has no parameter store_cv_values, even though some attributes depends on it.\r\n\r\n#### Versions\r\nWindows-10-10.0.14393-SP0\r\nPython 3.6.3 |Anaconda, Inc.| (default, Oct 15 2017, 03:27:45) [MSC v.1900 64 bit (AMD64)]\r\nNumPy 1.13.3\r\nSciPy 0.19.1\r\nScikit-Learn 0.19.1\r\n\r\n\nAdd store_cv_values boolean flag support to RidgeClassifierCV\nAdd store_cv_values support to RidgeClassifierCV - documentation claims that usage of this flag is possible:\n\n> cv_values_ : array, shape = [n_samples, n_alphas] or shape = [n_samples, n_responses, n_alphas], optional\n> Cross-validation values for each alpha (if **store_cv_values**=True and `cv=None`).\n\nWhile actually usage of this flag gives \n\n> TypeError: **init**() got an unexpected keyword argument 'store_cv_values'\n\n\n\n###\n\n### Repository Structure ###\nscikit-learn/\n    setup.py\n      Classes:\n        CleanCommand\n      Functions:\n        configuration\n        get_numpy_status\n        setup_package\n    conftest.py\nbuild_tools/\n    circle/\n        list_versions.py\n          Functions:\n            json_urlread\n            human_readable_data_quantity\n            get_pdf_size\ndoc/\n    conf.py\n      Functions:\n        make_carousel_thumbs\n        setup\n    conftest.py\n      Functions:\n        setup_labeled_faces\n        setup_mldata\n        teardown_mldata\n        setup_rcv1\n        setup_twenty_newsgroups\n        setup_working_with_text_data\n        pytest_runtest_setup\n        pytest_runtest_teardown\n    sphinxext/\n        sphinx_issues.py\n          Functions:\n            user_role\n            _make_issue_node\n            issue_role\n            setup\n        github_link.py\n          Functions:\n            _get_git_revision\n            _linkcode_resolve\n            make_linkcode_resolve\n    tutorial/\n        machine_learning_map/\n            svg2imagemap.py\n            pyparsing.py\n              Classes:\n                _Constants\n                ParseBaseException\n                ParseException\n                ParseFatalException\n                ParseSyntaxException\n                RecursiveGrammarException\n                _ParseResultsWithOffset\n                ParseResults\n                ParserElement\n                Token\n                Empty\n                NoMatch\n                Literal\n                Keyword\n                CaselessLiteral\n                CaselessKeyword\n                CloseMatch\n                Word\n                Regex\n                QuotedString\n                CharsNotIn\n                White\n                _PositionToken\n                GoToColumn\n                LineStart\n                LineEnd\n                StringStart\n                StringEnd\n                WordStart\n                WordEnd\n                ParseExpression\n                And\n                Or\n                MatchFirst\n                Each\n                ParseElementEnhance\n                FollowedBy\n                NotAny\n                _MultipleMatch\n                OneOrMore\n                ZeroOrMore\n                _NullToken\n                Optional\n                SkipTo\n                Forward\n                _ForwardNoRecurse\n                TokenConverter\n                Combine\n                Group\n                Dict\n                Suppress\n                OnlyOnce\n                pyparsing_common\n                _UnboundedCache\n                _ErrorStop\n                _FifoCache\n                _FifoCache\n              Functions:\n                _xml_escape\n                col\n                lineno\n                line\n                _defaultStartDebugAction\n                _defaultSuccessDebugAction\n                _defaultExceptionDebugAction\n                nullDebugAction\n                _trim_arity\n                traceParseAction\n                delimitedList\n                countedArray\n                _flatten\n                matchPreviousLiteral\n                matchPreviousExpr\n                _escapeRegexRangeChars\n                oneOf\n                dictOf\n                originalTextFor\n                ungroup\n                locatedExpr\n                srange\n                matchOnlyAtCol\n                replaceWith\n                removeQuotes\n                tokenMap\n                _makeTags\n                makeHTMLTags\n                makeXMLTags\n                withAttribute\n                withClass\n                infixNotation\n                nestedExpr\n                indentedBlock\n                replaceHTMLEntity\n                _ustr\n                wrapper\n                z\n                countFieldParseAction\n                copyTokenToRepeater\n                copyTokenToRepeater\n                verifyCol\n                pa\n                pa\n                checkPeerIndent\n                checkSubIndent\n                checkUnindent\n                keys\n                values\n                items\n                toItem\n                extract_stack\n                extract_tb\n                mustMatchTheseTokens\n                extractText\n                cvt_fn\n                cvt_fn\n                breaker\n                pa\n                set\n                cache_len\n                makeOptionalList\n                charsAsStr\n                set\n                cache_len\n                set\n                cache_len\n            parse_path.py\n              Classes:\n                CaselessPreservingLiteral\n              Functions:\n                Command\n                Arguments\n                Sequence\n                convertToFloat\n                get_points\n        text_analytics/\n            solutions/\n                exercise_01_language_train_model.py\n                generate_skeletons.py\n                exercise_02_sentiment.py\n            skeletons/\n                exercise_01_language_train_model.py\n                exercise_02_sentiment.py\n            data/\n                languages/\n                    fetch_data.py\n                twenty_newsgroups/\n                    fetch_data.py\n                movie_reviews/\n                    fetch_data.py\nexamples/\n    plot_feature_stacker.py\n    plot_multilabel.py\n      Functions:\n        plot_hyperplane\n        plot_subfigure\n    plot_kernel_ridge_regression.py\n    plot_isotonic_regression.py\n    plot_multioutput_face_completion.py\n    plot_missing_values.py\n    plot_kernel_approximation.py\n    hetero_feature_union.py\n      Classes:\n        ItemSelector\n        TextStats\n        SubjectBodyExtractor\n    plot_digits_pipe.py\n    plot_anomaly_comparison.py\n    plot_compare_reduction.py\n    plot_johnson_lindenstrauss_bound.py\n    plot_cv_predict.py\n    neighbors/\n        plot_lof.py\n        plot_classification.py\n        plot_kde_1d.py\n          Functions:\n            format_func\n        plot_nearest_centroid.py\n        plot_species_kde.py\n        plot_digits_kde_sampling.py\n        plot_regression.py\n    neural_networks/\n        plot_mlp_training_curves.py\n          Functions:\n            plot_on_dataset\n        plot_mnist_filters.py\n        plot_mlp_alpha.py\n        plot_rbm_logistic_classification.py\n          Functions:\n            nudge_dataset\n    cross_decomposition/\n        plot_compare_cross_decomposition.py\n    semi_supervised/\n        plot_label_propagation_digits_active_learning.py\n        plot_label_propagation_structure.py\n        plot_label_propagation_digits.py\n        plot_label_propagation_versus_svm_iris.py\n    tree/\n        plot_tree_regression.py\n        plot_iris.py\n        plot_unveil_tree_structure.py\n        plot_tree_regression_multioutput.py\n    exercises/\n        plot_iris_exercise.py\n        plot_cv_diabetes.py\n        plot_digits_classification_exercise.py\n        plot_cv_digits.py\n    decomposition/\n        plot_pca_vs_lda.py\n        plot_pca_vs_fa_model_selection.py\n          Functions:\n            compute_scores\n            shrunk_cov_score\n            lw_score\n        plot_sparse_coding.py\n          Functions:\n            ricker_function\n            ricker_matrix\n        plot_faces_decomposition.py\n          Functions:\n            plot_gallery\n        plot_beta_divergence.py\n        plot_ica_vs_pca.py\n          Functions:\n            plot_samples\n        plot_kernel_pca.py\n        plot_image_denoising.py\n          Functions:\n            show_with_diff\n        plot_incremental_pca.py\n        plot_ica_blind_source_separation.py\n        plot_pca_3d.py\n          Functions:\n            pdf\n            plot_figs\n        plot_pca_iris.py\n    cluster/\n        plot_feature_agglomeration_vs_univariate_selection.py\n        plot_adjusted_for_chance_measures.py\n          Functions:\n            uniform_labelings_scores\n        plot_cluster_comparison.py\n        plot_face_segmentation.py\n        plot_ward_structured_vs_unstructured.py\n        plot_digits_linkage.py\n          Functions:\n            nudge_images\n            plot_clustering\n        plot_face_ward_segmentation.py\n        plot_kmeans_silhouette_analysis.py\n        plot_mini_batch_kmeans.py\n        plot_linkage_comparison.py\n        plot_kmeans_assumptions.py\n        plot_affinity_propagation.py\n        plot_dict_face_patches.py\n        plot_digits_agglomeration.py\n        plot_dbscan.py\n        plot_mean_shift.py\n        plot_face_compress.py\n        plot_segmentation_toy.py\n        plot_kmeans_digits.py\n          Functions:\n            bench_k_means\n        plot_color_quantization.py\n          Functions:\n            recreate_image\n        plot_cluster_iris.py\n        plot_agglomerative_clustering_metrics.py\n          Functions:\n            sqr\n        plot_kmeans_stability_low_dim_dense.py\n          Functions:\n            make_data\n        plot_birch_vs_minibatchkmeans.py\n        plot_agglomerative_clustering.py\n    bicluster/\n        plot_bicluster_newsgroups.py\n          Classes:\n            NumberNormalizingVectorizer\n          Functions:\n            number_normalizer\n            bicluster_ncut\n            most_common\n        plot_spectral_biclustering.py\n        plot_spectral_coclustering.py\n    svm/\n        plot_svm_nonlinear.py\n        plot_custom_kernel.py\n          Functions:\n            my_kernel\n        plot_separating_hyperplane_unbalanced.py\n        plot_svm_margin.py\n        plot_iris.py\n          Functions:\n            make_meshgrid\n            plot_contours\n        plot_svm_scale_c.py\n        plot_separating_hyperplane.py\n        plot_svm_kernels.py\n        plot_oneclass.py\n        plot_weighted_samples.py\n          Functions:\n            plot_decision_function\n        plot_rbf_parameters.py\n          Classes:\n            MidpointNormalize\n        plot_svm_anova.py\n        plot_svm_regression.py\n    calibration/\n        plot_compare_calibration.py\n        plot_calibration_curve.py\n          Functions:\n            plot_calibration_curve\n        plot_calibration_multiclass.py\n        plot_calibration.py\n    linear_model/\n        plot_sgd_iris.py\n          Functions:\n            plot_hyperplane\n            line\n        plot_lasso_coordinate_descent_path.py\n        plot_sparse_logistic_regression_20newsgroups.py\n        plot_sgd_separating_hyperplane.py\n        plot_ransac.py\n        plot_omp.py\n        plot_lasso_dense_vs_sparse_data.py\n        plot_lasso_and_elasticnet.py\n        plot_lasso_model_selection.py\n          Functions:\n            plot_ic_criterion\n        plot_ridge_coeffs.py\n        plot_bayesian_ridge.py\n          Functions:\n            f\n        plot_ols_3d.py\n          Functions:\n            plot_figs\n        plot_huber_vs_ridge.py\n        plot_sgd_loss_functions.py\n          Functions:\n            modified_huber_loss\n        plot_ridge_path.py\n        plot_theilsen.py\n        plot_lasso_lars.py\n        plot_ols_ridge_variance.py\n        plot_logistic_multinomial.py\n          Functions:\n            plot_hyperplane\n            line\n        plot_sgd_weighted_samples.py\n        plot_sparse_logistic_regression_mnist.py\n        plot_logistic_l1_l2_sparsity.py\n        plot_iris_logistic.py\n        plot_robust_fit.py\n        plot_sgd_comparison.py\n        plot_polynomial_interpolation.py\n          Functions:\n            f\n        plot_multi_task_lasso_support.py\n        plot_logistic.py\n          Functions:\n            model\n        plot_ols.py\n        plot_ard.py\n          Functions:\n            f\n        plot_logistic_path.py\n        plot_sgd_penalties.py\n    classification/\n        plot_digits_classification.py\n        plot_classification_probability.py\n        plot_classifier_comparison.py\n        plot_lda.py\n          Functions:\n            generate_data\n        plot_lda_qda.py\n          Functions:\n            dataset_fixed_cov\n            dataset_cov\n            plot_data\n            plot_ellipse\n            plot_lda_cov\n            plot_qda_cov\n    manifold/\n        plot_mds.py\n        plot_t_sne_perplexity.py\n        plot_swissroll.py\n        plot_manifold_sphere.py\n        plot_compare_methods.py\n        plot_lle_digits.py\n          Functions:\n            plot_embedding\n    mixture/\n        plot_gmm.py\n          Functions:\n            plot_results\n        plot_gmm_pdf.py\n        plot_concentration_prior.py\n          Functions:\n            plot_ellipses\n            plot_results\n        plot_gmm_selection.py\n        plot_gmm_sin.py\n          Functions:\n            plot_results\n            plot_samples\n        plot_gmm_covariances.py\n          Functions:\n            make_ellipses\n    gaussian_process/\n        plot_gpc.py\n        plot_gpc_iris.py\n        plot_gpr_co2.py\n        plot_gpr_noisy.py\n        plot_compare_gpr_krr.py\n        plot_gpc_xor.py\n        plot_gpr_noisy_targets.py\n          Functions:\n            f\n        plot_gpr_prior_posterior.py\n        plot_gpc_isoprobability.py\n          Functions:\n            g\n    model_selection/\n        plot_underfitting_overfitting.py\n          Functions:\n            true_fun\n        plot_roc_crossval.py\n        plot_precision_recall.py\n        grid_search_text_feature_extraction.py\n        plot_confusion_matrix.py\n          Functions:\n            plot_confusion_matrix\n        plot_nested_cross_validation_iris.py\n        plot_learning_curve.py\n          Functions:\n            plot_learning_curve\n        plot_randomized_search.py\n          Functions:\n            report\n        plot_validation_curve.py\n        plot_grid_search_digits.py\n        plot_train_error_vs_test_error.py\n        plot_multi_metric_evaluation.py\n        plot_roc.py\n    preprocessing/\n        plot_scaling_importance.py\n        plot_power_transformer.py\n        plot_transformed_target.py\n        plot_function_transformer.py\n          Functions:\n            _generate_vector\n            generate_dataset\n            all_but_first_column\n            drop_first_component\n        plot_all_scaling.py\n          Functions:\n            create_axes\n            plot_distribution\n            make_plot\n    covariance/\n        plot_robust_vs_empirical_covariance.py\n        plot_covariance_estimation.py\n        plot_sparse_cov.py\n        plot_outlier_detection.py\n        plot_lw_vs_oas.py\n        plot_mahalanobis_distances.py\n    ensemble/\n        plot_adaboost_hastie_10_2.py\n        plot_gradient_boosting_quantile.py\n          Functions:\n            f\n        plot_adaboost_multiclass.py\n        plot_forest_importances_faces.py\n        plot_gradient_boosting_regularization.py\n        plot_forest_importances.py\n        plot_partial_dependence.py\n          Functions:\n            main\n        plot_gradient_boosting_regression.py\n        plot_ensemble_oob.py\n        plot_random_forest_regression_multioutput.py\n        plot_forest_iris.py\n        plot_gradient_boosting_oob.py\n          Functions:\n            heldout_score\n            cv_estimate\n        plot_adaboost_twoclass.py\n        plot_voting_probas.py\n        plot_gradient_boosting_early_stopping.py\n          Functions:\n            autolabel\n        plot_adaboost_regression.py\n        plot_voting_decision_regions.py\n        plot_isolation_forest.py\n        plot_feature_transformation.py\n        plot_bias_variance.py\n          Functions:\n            f\n            generate\n        plot_random_forest_embedding.py\n    datasets/\n        plot_random_multilabel_dataset.py\n          Functions:\n            plot_2d\n        plot_digits_last_image.py\n        plot_random_dataset.py\n        plot_iris_dataset.py\n    feature_selection/\n        plot_select_from_model_boston.py\n        plot_feature_selection.py\n        plot_rfe_digits.py\n        plot_feature_selection_pipeline.py\n        plot_permutation_test_for_classification.py\n        plot_f_test_vs_mi.py\n        plot_rfe_with_cross_validation.py\n    applications/\n        plot_out_of_core_classification.py\n          Classes:\n            ReutersParser\n          Functions:\n            _not_in_sphinx\n            stream_reuters_documents\n            get_minibatch\n            iter_minibatches\n            progress\n            plot_accuracy\n            autolabel\n            progress\n        plot_face_recognition.py\n          Functions:\n            plot_gallery\n            title\n        plot_tomography_l1_reconstruction.py\n          Functions:\n            _weights\n            _generate_center_coordinates\n            build_projection_operator\n            generate_synthetic_data\n        plot_model_complexity_influence.py\n          Functions:\n            generate_data\n            benchmark_influence\n            plot_influence\n            _count_nonzero_coefficients\n        plot_outlier_detection_housing.py\n        plot_prediction_latency.py\n          Functions:\n            _not_in_sphinx\n            atomic_benchmark_estimator\n            bulk_benchmark_estimator\n            benchmark_estimator\n            generate_dataset\n            boxplot_runtimes\n            benchmark\n            n_feature_influence\n            plot_n_features_influence\n            benchmark_throughputs\n            plot_benchmark_throughput\n        plot_stock_market.py\n          Functions:\n            retry\n            quotes_historical_google\n            wrapper\n        svm_gui.py\n          Classes:\n            Model\n            Controller\n            View\n            ControllBar\n          Functions:\n            get_parser\n            main\n        plot_topics_extraction_with_nmf_lda.py\n          Functions:\n            print_top_words\n        wikipedia_principal_eigenvector.py\n          Functions:\n            index\n            short_name\n            get_redirects\n            get_adjacency_matrix\n            centrality_scores\n        plot_species_distribution_modeling.py\n          Functions:\n            create_species_bunch\n            plot_species_distribution\n    text/\n        plot_document_classification_20newsgroups.py\n          Functions:\n            is_interactive\n            size_mb\n            trim\n            benchmark\n        plot_document_clustering.py\n          Functions:\n            is_interactive\n        plot_hashing_vs_dict_vectorizer.py\n          Functions:\n            n_nonzero_columns\n            tokens\n            token_freqs\n    multioutput/\n        plot_classifier_chain_yeast.py\nsklearn/\n    base.py\n      Classes:\n        BaseEstimator\n        ClassifierMixin\n        RegressorMixin\n        ClusterMixin\n        BiclusterMixin\n        TransformerMixin\n        DensityMixin\n        MetaEstimatorMixin\n      Functions:\n        _first_and_last_element\n        clone\n        _pprint\n        is_classifier\n        is_regressor\n    kernel_ridge.py\n      Classes:\n        KernelRidge\n    discriminant_analysis.py\n      Classes:\n        LinearDiscriminantAnalysis\n        QuadraticDiscriminantAnalysis\n      Functions:\n        _cov\n        _class_means\n        _class_cov\n    naive_bayes.py\n      Classes:\n        BaseNB\n        GaussianNB\n        BaseDiscreteNB\n        MultinomialNB\n        ComplementNB\n        BernoulliNB\n    multiclass.py\n      Classes:\n        _ConstantPredictor\n        OneVsRestClassifier\n        OneVsOneClassifier\n        OutputCodeClassifier\n      Functions:\n        _fit_binary\n        _partial_fit_binary\n        _predict_binary\n        _check_estimator\n        _fit_ovo_binary\n        _partial_fit_ovo_binary\n    kernel_approximation.py\n      Classes:\n        RBFSampler\n        SkewedChi2Sampler\n        AdditiveChi2Sampler\n        Nystroem\n    multioutput.py\n      Classes:\n        MultiOutputEstimator\n        MultiOutputRegressor\n        MultiOutputClassifier\n        _BaseChain\n        ClassifierChain\n        RegressorChain\n      Functions:\n        _fit_estimator\n        _partial_fit_estimator\n    __init__.py\n      Functions:\n        get_config\n        set_config\n        config_context\n        setup_module\n    random_projection.py\n      Classes:\n        BaseRandomProjection\n        GaussianRandomProjection\n        SparseRandomProjection\n      Functions:\n        johnson_lindenstrauss_min_dim\n        _check_density\n        _check_input_size\n        gaussian_random_matrix\n        sparse_random_matrix\n    dummy.py\n      Classes:\n        DummyClassifier\n        DummyRegressor\n    isotonic.py\n      Classes:\n        IsotonicRegression\n      Functions:\n        check_increasing\n        isotonic_regression\n    exceptions.py\n      Classes:\n        NotFittedError\n        ChangedBehaviorWarning\n        ConvergenceWarning\n        DataConversionWarning\n        DataDimensionalityWarning\n        EfficiencyWarning\n        FitFailedWarning\n        NonBLASDotWarning\n        SkipTestWarning\n        UndefinedMetricWarning\n    learning_curve.py\n      Functions:\n        learning_curve\n        _translate_train_sizes\n        _incremental_fit_estimator\n        validation_curve\n    setup.py\n      Functions:\n        configuration\n    calibration.py\n      Classes:\n        CalibratedClassifierCV\n        _CalibratedClassifier\n        _SigmoidCalibration\n      Functions:\n        _sigmoid_calibration\n        calibration_curve\n        objective\n        grad\n    grid_search.py\n      Classes:\n        ParameterGrid\n        ParameterSampler\n        _CVScoreTuple\n        BaseSearchCV\n        GridSearchCV\n        RandomizedSearchCV\n      Functions:\n        fit_grid_point\n        _check_param_grid\n    cross_validation.py\n      Classes:\n        _PartitionIterator\n        LeaveOneOut\n        LeavePOut\n        _BaseKFold\n        KFold\n        LabelKFold\n        StratifiedKFold\n        LeaveOneLabelOut\n        LeavePLabelOut\n        BaseShuffleSplit\n        ShuffleSplit\n        StratifiedShuffleSplit\n        PredefinedSplit\n        LabelShuffleSplit\n      Functions:\n        _validate_shuffle_split\n        _approximate_mode\n        _index_param_value\n        cross_val_predict\n        _fit_and_predict\n        _check_is_partition\n        cross_val_score\n        _fit_and_score\n        _safe_split\n        _score\n        _permutation_test_score\n        _shuffle\n        check_cv\n        permutation_test_score\n        train_test_split\n    pipeline.py\n      Classes:\n        Pipeline\n        FeatureUnion\n      Functions:\n        _name_estimators\n        make_pipeline\n        _fit_one_transformer\n        _transform_one\n        _fit_transform_one\n        make_union\n    metrics/\n        base.py\n          Functions:\n            _average_binary_score\n        __init__.py\n        scorer.py\n          Classes:\n            _BaseScorer\n            _PredictScorer\n            _ProbaScorer\n            _ThresholdScorer\n          Functions:\n            get_scorer\n            _passthrough_scorer\n            check_scoring\n            _check_multimetric_scoring\n            make_scorer\n        classification.py\n          Functions:\n            _check_targets\n            _weighted_sum\n            accuracy_score\n            confusion_matrix\n            cohen_kappa_score\n            jaccard_similarity_score\n            matthews_corrcoef\n            zero_one_loss\n            f1_score\n            fbeta_score\n            _prf_divide\n            precision_recall_fscore_support\n            precision_score\n            recall_score\n            balanced_accuracy_score\n            classification_report\n            hamming_loss\n            log_loss\n            hinge_loss\n            _check_binary_probabilistic_predictions\n            brier_score_loss\n        regression.py\n          Functions:\n            _check_reg_targets\n            mean_absolute_error\n            mean_squared_error\n            mean_squared_log_error\n            median_absolute_error\n            explained_variance_score\n            r2_score\n        setup.py\n          Functions:\n            configuration\n        ranking.py\n          Functions:\n            auc\n            average_precision_score\n            roc_auc_score\n            _binary_clf_curve\n            precision_recall_curve\n            roc_curve\n            label_ranking_average_precision_score\n            coverage_error\n            label_ranking_loss\n            _binary_uninterpolated_average_precision\n            _binary_roc_auc_score\n        pairwise.py\n          Functions:\n            _return_float_dtype\n            check_pairwise_arrays\n            check_paired_arrays\n            euclidean_distances\n            pairwise_distances_argmin_min\n            pairwise_distances_argmin\n            manhattan_distances\n            cosine_distances\n            paired_euclidean_distances\n            paired_manhattan_distances\n            paired_cosine_distances\n            paired_distances\n            linear_kernel\n            polynomial_kernel\n            sigmoid_kernel\n            rbf_kernel\n            laplacian_kernel\n            cosine_similarity\n            additive_chi2_kernel\n            chi2_kernel\n            distance_metrics\n            _parallel_pairwise\n            _pairwise_callable\n            pairwise_distances\n            kernel_metrics\n            pairwise_kernels\n        cluster/\n            supervised.py\n              Functions:\n                comb2\n                check_clusterings\n                contingency_matrix\n                adjusted_rand_score\n                homogeneity_completeness_v_measure\n                homogeneity_score\n                completeness_score\n                v_measure_score\n                mutual_info_score\n                adjusted_mutual_info_score\n                normalized_mutual_info_score\n                fowlkes_mallows_score\n                entropy\n            bicluster.py\n              Functions:\n                _check_rows_and_columns\n                _jaccard\n                _pairwise_similarity\n                consensus_score\n            unsupervised.py\n              Functions:\n                check_number_of_labels\n                silhouette_score\n                silhouette_samples\n                calinski_harabaz_score\n            __init__.py\n            setup.py\n              Functions:\n                configuration\n    _build_utils/\n        __init__.py\n          Functions:\n            get_blas_info\n            build_from_c_and_cpp_files\n            maybe_cythonize_extensions\n            atlas_not_found\n    neighbors/\n        base.py\n          Classes:\n            NeighborsBase\n            KNeighborsMixin\n            RadiusNeighborsMixin\n            SupervisedFloatMixin\n            SupervisedIntegerMixin\n            UnsupervisedMixin\n          Functions:\n            _check_weights\n            _get_weights\n        unsupervised.py\n          Classes:\n            NearestNeighbors\n        lof.py\n          Classes:\n            LocalOutlierFactor\n        approximate.py\n          Classes:\n            ProjectionToHashMixin\n            GaussianRandomProjectionHash\n            LSHForest\n          Functions:\n            _find_matching_indices\n            _find_longest_prefix_match\n            _array_of_arrays\n        __init__.py\n        classification.py\n          Classes:\n            KNeighborsClassifier\n            RadiusNeighborsClassifier\n        kde.py\n          Classes:\n            KernelDensity\n        regression.py\n          Classes:\n            KNeighborsRegressor\n            RadiusNeighborsRegressor\n        setup.py\n          Functions:\n            configuration\n        nearest_centroid.py\n          Classes:\n            NearestCentroid\n        graph.py\n          Functions:\n            _check_params\n            _query_include_self\n            kneighbors_graph\n            radius_neighbors_graph\n    cross_decomposition/\n        pls_.py\n          Classes:\n            _PLS\n            PLSRegression\n            PLSCanonical\n            PLSSVD\n          Functions:\n            _nipals_twoblocks_inner_loop\n            _svd_cross_product\n            _center_scale_xy\n        __init__.py\n        cca_.py\n          Classes:\n            CCA\n    semi_supervised/\n        label_propagation.py\n          Classes:\n            BaseLabelPropagation\n            LabelPropagation\n            LabelSpreading\n        __init__.py\n    tree/\n        tree.py\n          Classes:\n            BaseDecisionTree\n            DecisionTreeClassifier\n            DecisionTreeRegressor\n            ExtraTreeClassifier\n            ExtraTreeRegressor\n        __init__.py\n        export.py\n          Classes:\n            Sentinel\n          Functions:\n            _color_brew\n            export_graphviz\n            get_color\n            node_to_str\n            recurse\n        setup.py\n          Functions:\n            configuration\n    decomposition/\n        kernel_pca.py\n          Classes:\n            KernelPCA\n        base.py\n          Classes:\n            _BasePCA\n        nmf.py\n          Classes:\n            NMF\n          Functions:\n            norm\n            trace_dot\n            _check_init\n            _beta_divergence\n            _special_sparse_dot\n            _compute_regularization\n            _check_string_param\n            _beta_loss_to_float\n            _initialize_nmf\n            _update_coordinate_descent\n            _fit_coordinate_descent\n            _multiplicative_update_w\n            _multiplicative_update_h\n            _fit_multiplicative_update\n            non_negative_factorization\n        pca.py\n          Classes:\n            PCA\n            RandomizedPCA\n          Functions:\n            _assess_dimension_\n            _infer_dimension_\n        factor_analysis.py\n          Classes:\n            FactorAnalysis\n          Functions:\n            my_svd\n            my_svd\n        __init__.py\n        fastica_.py\n          Classes:\n            FastICA\n          Functions:\n            _gs_decorrelation\n            _sym_decorrelation\n            _ica_def\n            _ica_par\n            _logcosh\n            _exp\n            _cube\n            fastica\n            g\n        setup.py\n          Functions:\n            configuration\n        incremental_pca.py\n          Classes:\n            IncrementalPCA\n        sparse_pca.py\n          Classes:\n            SparsePCA\n            MiniBatchSparsePCA\n        truncated_svd.py\n          Classes:\n            TruncatedSVD\n        dict_learning.py\n          Classes:\n            SparseCodingMixin\n            SparseCoder\n            DictionaryLearning\n            MiniBatchDictionaryLearning\n          Functions:\n            _sparse_encode\n            sparse_encode\n            _update_dict\n            dict_learning\n            dict_learning_online\n        online_lda.py\n          Classes:\n            LatentDirichletAllocation\n          Functions:\n            _update_doc_distribution\n            _loglikelihood\n    cluster/\n        mean_shift_.py\n          Classes:\n            MeanShift\n          Functions:\n            estimate_bandwidth\n            _mean_shift_single_seed\n            mean_shift\n            get_bin_seeds\n        hierarchical.py\n          Classes:\n            AgglomerativeClustering\n            FeatureAgglomeration\n          Functions:\n            _fix_connectivity\n            _single_linkage_tree\n            ward_tree\n            linkage_tree\n            _complete_linkage\n            _average_linkage\n            _single_linkage\n            _hc_cut\n        affinity_propagation_.py\n          Classes:\n            AffinityPropagation\n          Functions:\n            _equal_similarities_and_preferences\n            affinity_propagation\n            all_equal_preferences\n            all_equal_similarities\n        bicluster.py\n          Classes:\n            BaseSpectral\n            SpectralCoclustering\n            SpectralBiclustering\n          Functions:\n            _scale_normalize\n            _bistochastic_normalize\n            _log_normalize\n            make_piecewise\n        k_means_.py\n          Classes:\n            KMeans\n            MiniBatchKMeans\n          Functions:\n            _k_init\n            _validate_center_shape\n            _tolerance\n            k_means\n            _kmeans_single_elkan\n            _kmeans_single_lloyd\n            _labels_inertia_precompute_dense\n            _labels_inertia\n            _init_centroids\n            _mini_batch_step\n            _mini_batch_convergence\n        __init__.py\n        birch.py\n          Classes:\n            _CFNode\n            _CFSubcluster\n            Birch\n          Functions:\n            _iterate_sparse_X\n            _split_node\n        _feature_agglomeration.py\n          Classes:\n            AgglomerationTransform\n        spectral.py\n          Classes:\n            SpectralClustering\n          Functions:\n            discretize\n            spectral_clustering\n        setup.py\n          Functions:\n            configuration\n        dbscan_.py\n          Classes:\n            DBSCAN\n          Functions:\n            dbscan\n    svm/\n        base.py\n          Classes:\n            BaseLibSVM\n            BaseSVC\n          Functions:\n            _one_vs_one_coef\n            _get_liblinear_solver_type\n            _fit_liblinear\n        classes.py\n          Classes:\n            LinearSVC\n            LinearSVR\n            SVC\n            NuSVC\n            SVR\n            NuSVR\n            OneClassSVM\n        bounds.py\n          Functions:\n            l1_min_c\n        __init__.py\n        setup.py\n          Functions:\n            configuration\n    neural_network/\n        _stochastic_optimizers.py\n          Classes:\n            BaseOptimizer\n            SGDOptimizer\n            AdamOptimizer\n        __init__.py\n        _base.py\n          Functions:\n            identity\n            logistic\n            tanh\n            relu\n            softmax\n            inplace_identity_derivative\n            inplace_logistic_derivative\n            inplace_tanh_derivative\n            inplace_relu_derivative\n            squared_loss\n            log_loss\n            binary_log_loss\n        multilayer_perceptron.py\n          Classes:\n            BaseMultilayerPerceptron\n            MLPClassifier\n            MLPRegressor\n          Functions:\n            _pack\n        rbm.py\n          Classes:\n            BernoulliRBM\n    __check_build/\n        __init__.py\n          Functions:\n            raise_build_error\n        setup.py\n          Functions:\n            configuration\n    linear_model/\n        base.py\n          Classes:\n            LinearModel\n            LinearClassifierMixin\n            SparseCoefMixin\n            LinearRegression\n          Functions:\n            make_dataset\n            sparse_center_data\n            center_data\n            _preprocess_data\n            _rescale_data\n            _pre_fit\n        logistic.py\n          Classes:\n            LogisticRegression\n            LogisticRegressionCV\n          Functions:\n            _intercept_dot\n            _logistic_loss_and_grad\n            _logistic_loss\n            _logistic_grad_hess\n            _multinomial_loss\n            _multinomial_loss_grad\n            _multinomial_grad_hess\n            _check_solver_option\n            logistic_regression_path\n            _log_reg_scoring_path\n            Hs\n            hessp\n        stochastic_gradient.py\n          Classes:\n            BaseSGD\n            BaseSGDClassifier\n            SGDClassifier\n            BaseSGDRegressor\n            SGDRegressor\n          Functions:\n            _prepare_fit_binary\n            fit_binary\n        theil_sen.py\n          Classes:\n            TheilSenRegressor\n          Functions:\n            _modified_weiszfeld_step\n            _spatial_median\n            _breakdown_point\n            _lstsq\n        __init__.py\n        omp.py\n          Classes:\n            OrthogonalMatchingPursuit\n            OrthogonalMatchingPursuitCV\n          Functions:\n            _cholesky_omp\n            _gram_omp\n            orthogonal_mp\n            orthogonal_mp_gram\n            _omp_path_residues\n        coordinate_descent.py\n          Classes:\n            ElasticNet\n            Lasso\n            LinearModelCV\n            LassoCV\n            ElasticNetCV\n            MultiTaskElasticNet\n            MultiTaskLasso\n            MultiTaskElasticNetCV\n            MultiTaskLassoCV\n          Functions:\n            _alpha_grid\n            lasso_path\n            enet_path\n            _path_residuals\n        setup.py\n          Functions:\n            configuration\n        bayes.py\n          Classes:\n            BayesianRidge\n            ARDRegression\n          Functions:\n            update_sigma\n            update_coeff\n        randomized_l1.py\n          Classes:\n            BaseRandomizedLinearModel\n            RandomizedLasso\n            RandomizedLogisticRegression\n          Functions:\n            _resample_model\n            _randomized_lasso\n            _randomized_logistic\n            _lasso_stability_path\n            lasso_stability_path\n        sag.py\n          Functions:\n            get_auto_step_size\n            sag_solver\n        huber.py\n          Classes:\n            HuberRegressor\n          Functions:\n            _huber_loss_and_gradient\n        passive_aggressive.py\n          Classes:\n            PassiveAggressiveClassifier\n            PassiveAggressiveRegressor\n        perceptron.py\n          Classes:\n            Perceptron\n        least_angle.py\n          Classes:\n            Lars\n            LassoLars\n            LarsCV\n            LassoLarsCV\n            LassoLarsIC\n          Functions:\n            lars_path\n            _check_copy_and_writeable\n            _lars_path_residues\n        ransac.py\n          Classes:\n            RANSACRegressor\n          Functions:\n            _dynamic_max_trials\n        ridge.py\n          Classes:\n            _BaseRidge\n            Ridge\n            RidgeClassifier\n            _RidgeGCV\n            _BaseRidgeCV\n            RidgeCV\n            RidgeClassifierCV\n          Functions:\n            _solve_sparse_cg\n            _solve_lsqr\n            _solve_cholesky\n            _solve_cholesky_kernel\n            _solve_svd\n            ridge_regression\n            create_mv\n            create_mv\n            _mv\n            _mv\n            identity_estimator\n    manifold/\n        spectral_embedding_.py\n          Classes:\n            SpectralEmbedding\n          Functions:\n            _graph_connected_component\n            _graph_is_connected\n            _set_diag\n            spectral_embedding\n        __init__.py\n        mds.py\n          Classes:\n            MDS\n          Functions:\n            _smacof_single\n            smacof\n        setup.py\n          Functions:\n            configuration\n        isomap.py\n          Classes:\n            Isomap\n        t_sne.py\n          Classes:\n            TSNE\n          Functions:\n            _joint_probabilities\n            _joint_probabilities_nn\n            _kl_divergence\n            _kl_divergence_bh\n            _gradient_descent\n            trustworthiness\n        locally_linear.py\n          Classes:\n            LocallyLinearEmbedding\n          Functions:\n            barycenter_weights\n            barycenter_kneighbors_graph\n            null_space\n            locally_linear_embedding\n    externals/\n        six.py\n          Classes:\n            _LazyDescr\n            MovedModule\n            MovedAttribute\n            _MovedItems\n            Module_six_moves_urllib_parse\n            Module_six_moves_urllib_error\n            Module_six_moves_urllib_request\n            Module_six_moves_urllib_response\n            Module_six_moves_urllib_robotparser\n            Module_six_moves_urllib\n            Iterator\n            X\n          Functions:\n            _add_doc\n            _import_module\n            add_move\n            remove_move\n            iterkeys\n            itervalues\n            iteritems\n            iterlists\n            with_metaclass\n            add_metaclass\n            get_unbound_function\n            get_unbound_function\n            create_bound_method\n            b\n            u\n            b\n            u\n            byte2int\n            indexbytes\n            iterbytes\n            reraise\n            exec_\n            print_\n            wrapper\n            advance_iterator\n            callable\n            int2byte\n            write\n        funcsigs.py\n          Classes:\n            _void\n            _empty\n            _ParameterKind\n            Parameter\n            BoundArguments\n            Signature\n          Functions:\n            formatannotation\n            _get_user_defined_method\n            signature\n        __init__.py\n        setup.py\n          Functions:\n            configuration\n        conftest.py\n          Functions:\n            pytest_ignore_collect\n        _pilutil.py\n          Functions:\n            bytescale\n            imread\n            imsave\n            fromimage\n            toimage\n            imresize\n        joblib/\n            my_exceptions.py\n              Classes:\n                JoblibException\n                TransportableException\n                WorkerInterrupt\n              Functions:\n                _mk_exception\n                _mk_common_exceptions\n            hashing.py\n              Classes:\n                _ConsistentSet\n                _MyHash\n                Hasher\n                NumpyHasher\n            _multiprocessing_helpers.py\n            _memory_helpers.py\n              Functions:\n                _get_normal_name\n                _detect_encoding\n                open_py_source\n                read_or_stop\n                find_cookie\n            _parallel_backends.py\n              Classes:\n                ParallelBackendBase\n                SequentialBackend\n                PoolManagerMixin\n                AutoBatchingMixin\n                ThreadingBackend\n                MultiprocessingBackend\n                ImmediateResult\n                SafeFunction\n                FallbackToBackend\n            numpy_pickle.py\n              Classes:\n                NumpyArrayWrapper\n                NumpyPickler\n                NumpyUnpickler\n              Functions:\n                dump\n                _unpickle\n                load\n            numpy_pickle_compat.py\n              Classes:\n                NDArrayWrapper\n                ZNDArrayWrapper\n                ZipNumpyUnpickler\n              Functions:\n                hex_str\n                read_zfile\n                write_zfile\n                load_compatibility\n                asbytes\n            __init__.py\n            disk.py\n              Functions:\n                disk_used\n                memstr_to_bytes\n                mkdirp\n                rm_subdirs\n            logger.py\n              Classes:\n                Logger\n                PrintTime\n              Functions:\n                _squeeze_time\n                format_time\n                short_format_time\n                pformat\n            _compat.py\n              Functions:\n                with_metaclass\n            func_inspect.py\n              Functions:\n                get_func_code\n                _clean_win_chars\n                get_func_name\n                getfullargspec\n                _signature_str\n                _function_called_str\n                filter_args\n                _format_arg\n                format_signature\n                format_call\n            memory.py\n              Classes:\n                JobLibCollisionWarning\n                MemorizedResult\n                NotMemorizedResult\n                NotMemorizedFunc\n                MemorizedFunc\n                Memory\n              Functions:\n                extract_first_line\n                _get_func_fullname\n                _cache_key_to_dir\n                _load_output\n                _get_cache_items\n                _get_cache_items_to_delete\n                concurrency_safe_write\n                write_func\n            numpy_pickle_utils.py\n              Classes:\n                BinaryZlibFile\n                BinaryGzipFile\n              Functions:\n                _is_raw_file\n                _detect_compressor\n                _buffered_read_file\n                _buffered_write_file\n                _read_fileobject\n                _write_fileobject\n                _read_bytes\n            backports.py\n              Functions:\n                make_memmap\n                concurrency_safe_rename\n                make_memmap\n                replace\n            parallel.py\n              Classes:\n                BatchedCalls\n                BatchCompletionCallBack\n                Parallel\n              Functions:\n                get_active_backend\n                parallel_backend\n                cpu_count\n                _verbosity_filter\n                delayed\n                register_parallel_backend\n                effective_n_jobs\n                delayed_function\n            format_stack.py\n              Functions:\n                safe_repr\n                eq_repr\n                uniq_stable\n                fix_frame_records_filenames\n                _fixed_getframes\n                _format_traceback_lines\n                format_records\n                format_exc\n                format_outer_frames\n                tokeneater\n                linereader\n            pool.py\n              Classes:\n                ArrayMemmapReducer\n                CustomizablePickler\n                CustomizablePicklingQueue\n                PicklingPool\n                MemmapingPool\n              Functions:\n                _get_backing_memmap\n                has_shareable_memory\n                _strided_from_memmap\n                _reduce_memmap_backed\n                reduce_memmap\n                delete_folder\n                get\n                _cleanup\n                dispatcher\n                send\n                put\n    feature_extraction/\n        hashing.py\n          Classes:\n            FeatureHasher\n          Functions:\n            _iteritems\n        stop_words.py\n        __init__.py\n        text.py\n          Classes:\n            VectorizerMixin\n            HashingVectorizer\n            CountVectorizer\n            TfidfTransformer\n            TfidfVectorizer\n          Functions:\n            strip_accents_unicode\n            strip_accents_ascii\n            strip_tags\n            _check_stop_list\n            _document_frequency\n            _make_int_array\n        image.py\n          Classes:\n            PatchExtractor\n          Functions:\n            _make_edges_3d\n            _compute_gradient_3d\n            _mask_edges_weights\n            _to_graph\n            img_to_graph\n            grid_to_graph\n            _compute_n_patches\n            extract_patches\n            extract_patches_2d\n            reconstruct_from_patches_2d\n        dict_vectorizer.py\n          Classes:\n            DictVectorizer\n          Functions:\n            _tosequence\n        setup.py\n          Functions:\n            configuration\n    mixture/\n        base.py\n          Classes:\n            BaseMixture\n          Functions:\n            _check_shape\n            _check_X\n        gaussian_mixture.py\n          Classes:\n            GaussianMixture\n          Functions:\n            _check_weights\n            _check_means\n            _check_precision_positivity\n            _check_precision_matrix\n            _check_precisions_full\n            _check_precisions\n            _estimate_gaussian_covariances_full\n            _estimate_gaussian_covariances_tied\n            _estimate_gaussian_covariances_diag\n            _estimate_gaussian_covariances_spherical\n            _estimate_gaussian_parameters\n            _compute_precision_cholesky\n            _compute_log_det_cholesky\n            _estimate_log_gaussian_prob\n        bayesian_mixture.py\n          Classes:\n            BayesianGaussianMixture\n          Functions:\n            _log_dirichlet_norm\n            _log_wishart_norm\n        __init__.py\n        dpgmm.py\n          Classes:\n            _DPGMMBase\n            DPGMM\n            VBGMM\n          Functions:\n            digamma\n            gammaln\n            log_normalize\n            wishart_log_det\n            wishart_logz\n            _bound_wishart\n            _sym_quad_form\n            _bound_state_log_lik\n        gmm.py\n          Classes:\n            _GMMBase\n            GMM\n          Functions:\n            log_multivariate_normal_density\n            sample_gaussian\n            _sample_gaussian\n            _log_multivariate_normal_density_diag\n            _log_multivariate_normal_density_spherical\n            _log_multivariate_normal_density_tied\n            _log_multivariate_normal_density_full\n            _validate_covars\n            distribute_covar_matrix_to_match_covariance_type\n            _covar_mstep_diag\n            _covar_mstep_spherical\n            _covar_mstep_full\n            _covar_mstep_tied\n    gaussian_process/\n        gpc.py\n          Classes:\n            _BinaryGaussianProcessClassifierLaplace\n            GaussianProcessClassifier\n          Functions:\n            obj_func\n        regression_models.py\n          Functions:\n            constant\n            linear\n            quadratic\n        correlation_models.py\n          Functions:\n            absolute_exponential\n            squared_exponential\n            generalized_exponential\n            pure_nugget\n            cubic\n            linear\n        gaussian_process.py\n          Classes:\n            GaussianProcess\n          Functions:\n            l1_cross_distances\n            minus_reduced_likelihood_function\n            corr_cut\n        __init__.py\n        kernels.py\n          Classes:\n            Hyperparameter\n            Kernel\n            NormalizedKernelMixin\n            StationaryKernelMixin\n            CompoundKernel\n            KernelOperator\n            Sum\n            Product\n            Exponentiation\n            ConstantKernel\n            WhiteKernel\n            RBF\n            Matern\n            RationalQuadratic\n            ExpSineSquared\n            DotProduct\n            PairwiseKernel\n          Functions:\n            _check_length_scale\n            _approx_fprime\n            f\n            f\n        gpr.py\n          Classes:\n            GaussianProcessRegressor\n          Functions:\n            obj_func\n    model_selection/\n        _validation.py\n          Functions:\n            cross_validate\n            cross_val_score\n            _fit_and_score\n            _score\n            _multimetric_score\n            cross_val_predict\n            _fit_and_predict\n            _check_is_permutation\n            _index_param_value\n            permutation_test_score\n            _permutation_test_score\n            _shuffle\n            learning_curve\n            _translate_train_sizes\n            _incremental_fit_estimator\n            validation_curve\n            _aggregate_score_dicts\n        _split.py\n          Classes:\n            BaseCrossValidator\n            LeaveOneOut\n            LeavePOut\n            _BaseKFold\n            KFold\n            GroupKFold\n            StratifiedKFold\n            TimeSeriesSplit\n            LeaveOneGroupOut\n            LeavePGroupsOut\n            _RepeatedSplits\n            RepeatedKFold\n            RepeatedStratifiedKFold\n            BaseShuffleSplit\n            ShuffleSplit\n            GroupShuffleSplit\n            StratifiedShuffleSplit\n            PredefinedSplit\n            _CVIterableWrapper\n          Functions:\n            _approximate_mode\n            _validate_shuffle_split_init\n            _validate_shuffle_split\n            check_cv\n            train_test_split\n            _build_repr\n        __init__.py\n        _search.py\n          Classes:\n            ParameterGrid\n            ParameterSampler\n            _CVScoreTuple\n            BaseSearchCV\n            GridSearchCV\n            RandomizedSearchCV\n          Functions:\n            fit_grid_point\n            _check_param_grid\n            _store\n    preprocessing/\n        data.py\n          Classes:\n            MinMaxScaler\n            StandardScaler\n            MaxAbsScaler\n            RobustScaler\n            PolynomialFeatures\n            Normalizer\n            Binarizer\n            KernelCenterer\n            OneHotEncoder\n            QuantileTransformer\n            PowerTransformer\n            CategoricalEncoder\n          Functions:\n            _handle_zeros_in_scale\n            scale\n            minmax_scale\n            maxabs_scale\n            robust_scale\n            normalize\n            binarize\n            add_dummy_feature\n            _transform_selected\n            quantile_transform\n            power_transform\n        label.py\n          Classes:\n            LabelEncoder\n            LabelBinarizer\n            MultiLabelBinarizer\n          Functions:\n            label_binarize\n            _inverse_binarize_multiclass\n            _inverse_binarize_thresholding\n        _function_transformer.py\n          Classes:\n            FunctionTransformer\n          Functions:\n            _identity\n        __init__.py\n        _target.py\n          Classes:\n            TransformedTargetRegressor\n        imputation.py\n          Classes:\n            Imputer\n          Functions:\n            _get_mask\n            _most_frequent\n    utils/\n        linear_assignment_.py\n          Classes:\n            _HungarianState\n          Functions:\n            linear_assignment\n            _hungarian\n            _step1\n            _step3\n            _step4\n            _step5\n            _step6\n        stats.py\n          Functions:\n            rankdata\n            _weighted_percentile\n        multiclass.py\n          Functions:\n            _unique_multiclass\n            _unique_indicator\n            unique_labels\n            _is_integral_float\n            is_multilabel\n            check_classification_targets\n            type_of_target\n            _check_partial_fit_first_call\n            class_distribution\n            _ovr_decision_function\n        bench.py\n          Functions:\n            total_seconds\n        estimator_checks.py\n          Classes:\n            NotAnArray\n            T\n          Functions:\n            _yield_non_meta_checks\n            _yield_classifier_checks\n            check_supervised_y_no_nan\n            _yield_regressor_checks\n            _yield_transformer_checks\n            _yield_clustering_checks\n            _yield_all_checks\n            check_estimator\n            _boston_subset\n            set_checking_parameters\n            _is_32bit\n            _is_pairwise\n            _is_pairwise_metric\n            pairwise_estimator_convert_X\n            check_estimator_sparse_data\n            check_sample_weights_pandas_series\n            check_sample_weights_list\n            check_dtype_object\n            check_complex_data\n            check_dict_unchanged\n            is_public_parameter\n            check_dont_overwrite_parameters\n            check_fit2d_predict1d\n            _apply_func\n            check_methods_subset_invariance\n            check_fit2d_1sample\n            check_fit2d_1feature\n            check_fit1d\n            check_transformer_general\n            check_transformer_data_not_an_array\n            check_transformers_unfitted\n            _check_transformer\n            check_pipeline_consistency\n            check_fit_score_takes_y\n            check_estimators_dtypes\n            check_estimators_empty_data_messages\n            check_estimators_nan_inf\n            check_estimators_pickle\n            check_estimators_partial_fit_n_features\n            check_clustering\n            check_clusterer_compute_labels_predict\n            check_classifiers_one_label\n            check_classifiers_train\n            check_estimators_fit_returns_self\n            check_estimators_unfitted\n            check_supervised_y_2d\n            check_classifiers_classes\n            check_regressors_int\n            check_regressors_train\n            check_regressors_no_decision_function\n            check_class_weight_classifiers\n            check_class_weight_balanced_classifiers\n            check_class_weight_balanced_linear_classifier\n            check_estimators_overwrite_params\n            check_no_attributes_set_in_init\n            check_sparsify_coefficients\n            check_classifier_data_not_an_array\n            check_regressor_data_not_an_array\n            check_estimators_data_not_an_array\n            check_parameters_default_constructible\n            multioutput_estimator_convert_y_2d\n            check_non_transformer_estimators_n_iter\n            check_transformer_n_iter\n            check_get_params_invariance\n            check_classifiers_regression_target\n            check_decision_proba_consistency\n            param_filter\n        _scipy_sparse_lsqr_backport.py\n          Functions:\n            _sym_ortho\n            lsqr\n        arpack.py\n          Functions:\n            eigs\n            eigsh\n            svds\n        random.py\n          Functions:\n            choice\n            random_choice_csc\n        __init__.py\n          Classes:\n            Bunch\n          Functions:\n            safe_mask\n            axis0_safe_slice\n            safe_indexing\n            resample\n            shuffle\n            safe_sqr\n            gen_batches\n            gen_even_slices\n            _get_n_jobs\n            tosequence\n            indices_to_mask\n        _unittest_backport.py\n          Classes:\n            _BaseTestCaseContext\n            _AssertRaisesBaseContext\n            _AssertRaisesContext\n            TestCase\n          Functions:\n            _is_subtype\n        deprecation.py\n          Classes:\n            deprecated\n            DeprecationDict\n          Functions:\n            _is_deprecated\n            wrapped\n            wrapped\n        mocking.py\n          Classes:\n            ArraySlicingWrapper\n            MockDataFrame\n            CheckingClassifier\n        fixes.py\n          Classes:\n            MaskedArray\n          Functions:\n            _parse_version\n            parallel_helper\n            sparse_min_max\n            _argmax\n            _find_missing_index\n            _arg_min_or_max_axis\n            _arg_min_or_max\n            _sparse_argmax\n            _argmax\n            makedirs\n            divide\n            _minor_reduce\n            _min_or_max_axis\n            _sparse_min_or_max\n            sparse_min_max\n        class_weight.py\n          Functions:\n            compute_class_weight\n            compute_sample_weight\n        optimize.py\n          Classes:\n            _LineSearchError\n          Functions:\n            _line_search_wolfe12\n            _cg\n            newton_cg\n        setup.py\n          Functions:\n            configuration\n        metaestimators.py\n          Classes:\n            _BaseComposition\n            _IffHasAttrDescriptor\n          Functions:\n            if_delegate_has_method\n            _safe_split\n        validation.py\n          Functions:\n            _assert_all_finite\n            assert_all_finite\n            as_float_array\n            _is_arraylike\n            _num_samples\n            _shape_repr\n            check_memory\n            check_consistent_length\n            indexable\n            _ensure_sparse_format\n            _ensure_no_complex_data\n            check_array\n            check_X_y\n            column_or_1d\n            check_random_state\n            has_fit_parameter\n            check_symmetric\n            check_is_fitted\n            check_non_negative\n        graph.py\n          Functions:\n            single_source_shortest_path_length\n            connected_components\n            graph_laplacian\n        extmath.py\n          Functions:\n            norm\n            squared_norm\n            row_norms\n            fast_logdet\n            _impose_f_order\n            fast_dot\n            density\n            safe_sparse_dot\n            randomized_range_finder\n            randomized_svd\n            logsumexp\n            weighted_mode\n            pinvh\n            cartesian\n            svd_flip\n            log_logistic\n            softmax\n            safe_min\n            make_nonnegative\n            _incremental_mean_and_var\n            _deterministic_vector_sign_flip\n            stable_cumsum\n        sparsefuncs.py\n          Functions:\n            _raise_typeerror\n            _raise_error_wrong_axis\n            inplace_csr_column_scale\n            inplace_csr_row_scale\n            mean_variance_axis\n            incr_mean_variance_axis\n            inplace_column_scale\n            inplace_row_scale\n            inplace_swap_row_csc\n            inplace_swap_row_csr\n            inplace_swap_row\n            inplace_swap_column\n            min_max_axis\n            count_nonzero\n            _get_median\n            _get_elem_at_rank\n            csc_median_axis_0\n        sparsetools/\n            __init__.py\n              Functions:\n                connected_components\n            setup.py\n              Functions:\n                configuration\n    covariance/\n        robust_covariance.py\n          Classes:\n            MinCovDet\n          Functions:\n            c_step\n            _c_step\n            select_candidates\n            fast_mcd\n        graph_lasso_.py\n          Classes:\n            GraphLasso\n            GraphLassoCV\n          Functions:\n            _objective\n            _dual_gap\n            alpha_max\n            graph_lasso\n            graph_lasso_path\n        __init__.py\n        empirical_covariance_.py\n          Classes:\n            EmpiricalCovariance\n          Functions:\n            log_likelihood\n            empirical_covariance\n        shrunk_covariance_.py\n          Classes:\n            ShrunkCovariance\n            LedoitWolf\n            OAS\n          Functions:\n            shrunk_covariance\n            ledoit_wolf_shrinkage\n            ledoit_wolf\n            oas\n        elliptic_envelope.py\n          Classes:\n            EllipticEnvelope\n    ensemble/\n        base.py\n          Classes:\n            BaseEnsemble\n          Functions:\n            _set_random_states\n            _partition_estimators\n        partial_dependence.py\n          Functions:\n            _grid_from_X\n            partial_dependence\n            plot_partial_dependence\n            convert_feature\n        voting_classifier.py\n          Classes:\n            VotingClassifier\n          Functions:\n            _parallel_fit_estimator\n        weight_boosting.py\n          Classes:\n            BaseWeightBoosting\n            AdaBoostClassifier\n            AdaBoostRegressor\n          Functions:\n            _samme_proba\n        iforest.py\n          Classes:\n            IsolationForest\n          Functions:\n            _average_path_length\n        __init__.py\n        setup.py\n          Functions:\n            configuration\n        gradient_boosting.py\n          Classes:\n            QuantileEstimator\n            MeanEstimator\n            LogOddsEstimator\n            ScaledLogOddsEstimator\n            PriorProbabilityEstimator\n            ZeroEstimator\n            LossFunction\n            RegressionLossFunction\n            LeastSquaresError\n            LeastAbsoluteError\n            HuberLossFunction\n            QuantileLossFunction\n            ClassificationLossFunction\n            BinomialDeviance\n            MultinomialDeviance\n            ExponentialLoss\n            VerboseReporter\n            BaseGradientBoosting\n            GradientBoostingClassifier\n            GradientBoostingRegressor\n        forest.py\n          Classes:\n            BaseForest\n            ForestClassifier\n            ForestRegressor\n            RandomForestClassifier\n            RandomForestRegressor\n            ExtraTreesClassifier\n            ExtraTreesRegressor\n            RandomTreesEmbedding\n          Functions:\n            _generate_sample_indices\n            _generate_unsampled_indices\n            _parallel_build_trees\n            accumulate_prediction\n        bagging.py\n          Classes:\n            BaseBagging\n            BaggingClassifier\n            BaggingRegressor\n          Functions:\n            _generate_indices\n            _generate_bagging_indices\n            _parallel_build_estimators\n            _parallel_predict_proba\n            _parallel_predict_log_proba\n            _parallel_decision_function\n            _parallel_predict_regression\n    datasets/\n        svmlight_format.py\n          Functions:\n            load_svmlight_file\n            _gen_open\n            _open_and_load\n            load_svmlight_files\n            _dump_svmlight\n            dump_svmlight_file\n        base.py\n          Functions:\n            get_data_home\n            clear_data_home\n            load_files\n            load_data\n            load_wine\n            load_iris\n            load_breast_cancer\n            load_digits\n            load_diabetes\n            load_linnerud\n            load_boston\n            load_sample_images\n            load_sample_image\n            _pkl_filepath\n            _sha256\n            _fetch_remote\n        olivetti_faces.py\n          Functions:\n            fetch_olivetti_faces\n        lfw.py\n          Functions:\n            scale_face\n            check_fetch_lfw\n            _load_imgs\n            _fetch_lfw_people\n            fetch_lfw_people\n            _fetch_lfw_pairs\n            fetch_lfw_pairs\n        covtype.py\n          Functions:\n            fetch_covtype\n        california_housing.py\n          Functions:\n            fetch_california_housing\n        samples_generator.py\n          Functions:\n            _generate_hypercube\n            make_classification\n            make_multilabel_classification\n            make_hastie_10_2\n            make_regression\n            make_circles\n            make_moons\n            make_blobs\n            make_friedman1\n            make_friedman2\n            make_friedman3\n            make_low_rank_matrix\n            make_sparse_coded_signal\n            make_sparse_uncorrelated\n            make_spd_matrix\n            make_sparse_spd_matrix\n            make_swiss_roll\n            make_s_curve\n            make_gaussian_quantiles\n            _shuffle\n            make_biclusters\n            make_checkerboard\n            sample_example\n        __init__.py\n        mldata.py\n          Functions:\n            mldata_filename\n            fetch_mldata\n            setup_module\n            teardown_module\n        kddcup99.py\n          Functions:\n            fetch_kddcup99\n            _fetch_brute_kddcup99\n            _mkdirp\n        setup.py\n          Functions:\n            configuration\n        rcv1.py\n          Functions:\n            fetch_rcv1\n            _inverse_permutation\n            _find_permutation\n        species_distributions.py\n          Functions:\n            _load_coverage\n            _load_csv\n            construct_grids\n            fetch_species_distributions\n        twenty_newsgroups.py\n          Functions:\n            download_20newsgroups\n            strip_newsgroup_header\n            strip_newsgroup_quoting\n            strip_newsgroup_footer\n            fetch_20newsgroups\n            fetch_20newsgroups_vectorized\n        mlcomp.py\n          Functions:\n            _load_document_classification\n            load_mlcomp\n    feature_selection/\n        base.py\n          Classes:\n            SelectorMixin\n        mutual_info_.py\n          Functions:\n            _compute_mi_cc\n            _compute_mi_cd\n            _compute_mi\n            _iterate_columns\n            _estimate_mi\n            mutual_info_regression\n            mutual_info_classif\n        variance_threshold.py\n          Classes:\n            VarianceThreshold\n        from_model.py\n          Classes:\n            SelectFromModel\n          Functions:\n            _get_feature_importances\n            _calculate_threshold\n        __init__.py\n        univariate_selection.py\n          Classes:\n            _BaseFilter\n            SelectPercentile\n            SelectKBest\n            SelectFpr\n            SelectFdr\n            SelectFwe\n            GenericUnivariateSelect\n          Functions:\n            _clean_nans\n            f_oneway\n            f_classif\n            _chisquare\n            chi2\n            f_regression\n        rfe.py\n          Classes:\n            RFE\n            RFECV\n          Functions:\n            _rfe_single_fit\nbenchmarks/\n    bench_saga.py\n      Functions:\n        fit_single\n        _predict_proba\n        exp\n        plot\n    bench_isolation_forest.py\n      Functions:\n        print_outlier_ratio\n    bench_lof.py\n    bench_plot_randomized_svd.py\n      Functions:\n        unpickle\n        handle_missing_dataset\n        get_data\n        plot_time_vs_s\n        scatter_time_vs_s\n        plot_power_iter_vs_s\n        svd_timing\n        norm_diff\n        scalable_frobenius_norm_discrepancy\n        bench_a\n        bench_b\n        bench_c\n    bench_glmnet.py\n      Functions:\n        rmse\n        bench\n    bench_isotonic.py\n      Functions:\n        generate_perturbed_logarithm_dataset\n        generate_logistic_dataset\n        generate_pathological_dataset\n        bench_isotonic_regression\n    bench_tree.py\n      Functions:\n        bench_scikit_tree_classifier\n        bench_scikit_tree_regressor\n    bench_plot_fastkmeans.py\n      Functions:\n        compute_bench\n        compute_bench_2\n    bench_lasso.py\n      Functions:\n        compute_bench\n    bench_random_projections.py\n      Functions:\n        type_auto_or_float\n        type_auto_or_int\n        compute_time\n        bench_scikit_transformer\n        make_sparse_random_data\n        print_row\n    bench_plot_neighbors.py\n      Functions:\n        get_data\n        barplot_neighbors\n    bench_multilabel_metrics.py\n      Functions:\n        benchmark\n        _tabulate\n        _plot\n    bench_plot_nmf.py\n      Classes:\n        _PGNMF\n      Functions:\n        _norm\n        _nls_subproblem\n        _fit_projected_gradient\n        plot_results\n        bench_one\n        run_bench\n        load_20news\n        load_faces\n        build_clfs\n    bench_text_vectorizers.py\n      Functions:\n        run_vectorizer\n        f\n    bench_plot_lasso_path.py\n      Functions:\n        compute_bench\n    plot_tsne_mnist.py\n    bench_mnist.py\n      Functions:\n        load_data\n    bench_sgd_regression.py\n    bench_plot_incremental_pca.py\n      Functions:\n        plot_results\n        benchmark\n        plot_feature_times\n        plot_feature_errors\n        plot_batch_times\n        plot_batch_errors\n        fixed_batch_size_comparison\n        variable_batch_size_comparison\n    bench_sparsify.py\n      Functions:\n        sparsity_ratio\n        benchmark_dense_predict\n        benchmark_sparse_predict\n        score\n    bench_covertype.py\n      Functions:\n        load_data\n    bench_20newsgroups.py\n    bench_plot_ward.py\n    bench_plot_svd.py\n      Functions:\n        compute_bench\n    bench_glm.py\n    bench_rcv1_logreg_convergence.py\n      Functions:\n        get_loss\n        bench_one\n        bench\n        plot_train_losses\n        plot_train_scores\n        plot_test_scores\n        plot_dloss\n        get_max_squared_sum\n    bench_plot_omp_lars.py\n      Functions:\n        compute_bench\n    bench_plot_parallel_pairwise.py\n      Functions:\n        plot\n        euclidean_distances\n        rbf_kernels\n    bench_tsne_mnist.py\n      Functions:\n        load_data\n        nn_accuracy\n        tsne_fit_transform\n        sanitize\n        bhtsne\n    bench_sample_without_replacement.py\n      Functions:\n        compute_time\n        bench_sample\n\n###\n\nPlease provide the complete set of locations as either a class name, a function name, or a variable name.\nNote that if you include a class, you do not need to list its specific methods.\nYou can include either the entire class or don't include the class name and instead include specific methods in the class.\n### Examples:\n```\nfull_path1/file1.py\nfunction: my_function_1\nclass: MyClass1\nfunction: MyClass2.my_method\n\nfull_path2/file2.py\nvariable: my_var\nfunction: MyClass3.my_method\n\nfull_path3/file3.py\nfunction: my_function_2\nfunction: my_function_3\nfunction: MyClass4.my_method_1\nclass: MyClass5\n```\n\nReturn just the locations."}
