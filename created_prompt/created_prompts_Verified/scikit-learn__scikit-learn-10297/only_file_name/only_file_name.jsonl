{"instance_id": "scikit-learn__scikit-learn-10297", "num_tokens of the message": 4097, "message": "Please look through the following GitHub problem description and Repository structure and provide a list of files that one would need to edit to fix the problem.\n\n### GitHub Problem Description ###\nlinear_model.RidgeClassifierCV's Parameter store_cv_values issue\n#### Description\r\nParameter store_cv_values error on sklearn.linear_model.RidgeClassifierCV\r\n\r\n#### Steps/Code to Reproduce\r\nimport numpy as np\r\nfrom sklearn import linear_model as lm\r\n\r\n#test database\r\nn = 100\r\nx = np.random.randn(n, 30)\r\ny = np.random.normal(size = n)\r\n\r\nrr = lm.RidgeClassifierCV(alphas = np.arange(0.1, 1000, 0.1), normalize = True, \r\n                                         store_cv_values = True).fit(x, y)\r\n\r\n#### Expected Results\r\nExpected to get the usual ridge regression model output, keeping the cross validation predictions as attribute.\r\n\r\n#### Actual Results\r\nTypeError: __init__() got an unexpected keyword argument 'store_cv_values'\r\n\r\nlm.RidgeClassifierCV actually has no parameter store_cv_values, even though some attributes depends on it.\r\n\r\n#### Versions\r\nWindows-10-10.0.14393-SP0\r\nPython 3.6.3 |Anaconda, Inc.| (default, Oct 15 2017, 03:27:45) [MSC v.1900 64 bit (AMD64)]\r\nNumPy 1.13.3\r\nSciPy 0.19.1\r\nScikit-Learn 0.19.1\r\n\r\n\nAdd store_cv_values boolean flag support to RidgeClassifierCV\nAdd store_cv_values support to RidgeClassifierCV - documentation claims that usage of this flag is possible:\n\n> cv_values_ : array, shape = [n_samples, n_alphas] or shape = [n_samples, n_responses, n_alphas], optional\n> Cross-validation values for each alpha (if **store_cv_values**=True and `cv=None`).\n\nWhile actually usage of this flag gives \n\n> TypeError: **init**() got an unexpected keyword argument 'store_cv_values'\n\n\n\n###\n\n### Repository Structure ###\nscikit-learn/\n    setup.py\n    conftest.py\nbuild_tools/\n    circle/\n        list_versions.py\ndoc/\n    conf.py\n    conftest.py\n    sphinxext/\n        sphinx_issues.py\n        github_link.py\n    tutorial/\n        machine_learning_map/\n            svg2imagemap.py\n            pyparsing.py\n            parse_path.py\n        text_analytics/\n            solutions/\n                exercise_01_language_train_model.py\n                generate_skeletons.py\n                exercise_02_sentiment.py\n            skeletons/\n                exercise_01_language_train_model.py\n                exercise_02_sentiment.py\n            data/\n                languages/\n                    fetch_data.py\n                twenty_newsgroups/\n                    fetch_data.py\n                movie_reviews/\n                    fetch_data.py\nexamples/\n    plot_feature_stacker.py\n    plot_multilabel.py\n    plot_kernel_ridge_regression.py\n    plot_isotonic_regression.py\n    plot_multioutput_face_completion.py\n    plot_missing_values.py\n    plot_kernel_approximation.py\n    hetero_feature_union.py\n    plot_digits_pipe.py\n    plot_anomaly_comparison.py\n    plot_compare_reduction.py\n    plot_johnson_lindenstrauss_bound.py\n    plot_cv_predict.py\n    neighbors/\n        plot_lof.py\n        plot_classification.py\n        plot_kde_1d.py\n        plot_nearest_centroid.py\n        plot_species_kde.py\n        plot_digits_kde_sampling.py\n        plot_regression.py\n    neural_networks/\n        plot_mlp_training_curves.py\n        plot_mnist_filters.py\n        plot_mlp_alpha.py\n        plot_rbm_logistic_classification.py\n    cross_decomposition/\n        plot_compare_cross_decomposition.py\n    semi_supervised/\n        plot_label_propagation_digits_active_learning.py\n        plot_label_propagation_structure.py\n        plot_label_propagation_digits.py\n        plot_label_propagation_versus_svm_iris.py\n    tree/\n        plot_tree_regression.py\n        plot_iris.py\n        plot_unveil_tree_structure.py\n        plot_tree_regression_multioutput.py\n    exercises/\n        plot_iris_exercise.py\n        plot_cv_diabetes.py\n        plot_digits_classification_exercise.py\n        plot_cv_digits.py\n    decomposition/\n        plot_pca_vs_lda.py\n        plot_pca_vs_fa_model_selection.py\n        plot_sparse_coding.py\n        plot_faces_decomposition.py\n        plot_beta_divergence.py\n        plot_ica_vs_pca.py\n        plot_kernel_pca.py\n        plot_image_denoising.py\n        plot_incremental_pca.py\n        plot_ica_blind_source_separation.py\n        plot_pca_3d.py\n        plot_pca_iris.py\n    cluster/\n        plot_feature_agglomeration_vs_univariate_selection.py\n        plot_adjusted_for_chance_measures.py\n        plot_cluster_comparison.py\n        plot_face_segmentation.py\n        plot_ward_structured_vs_unstructured.py\n        plot_digits_linkage.py\n        plot_face_ward_segmentation.py\n        plot_kmeans_silhouette_analysis.py\n        plot_mini_batch_kmeans.py\n        plot_linkage_comparison.py\n        plot_kmeans_assumptions.py\n        plot_affinity_propagation.py\n        plot_dict_face_patches.py\n        plot_digits_agglomeration.py\n        plot_dbscan.py\n        plot_mean_shift.py\n        plot_face_compress.py\n        plot_segmentation_toy.py\n        plot_kmeans_digits.py\n        plot_color_quantization.py\n        plot_cluster_iris.py\n        plot_agglomerative_clustering_metrics.py\n        plot_kmeans_stability_low_dim_dense.py\n        plot_birch_vs_minibatchkmeans.py\n        plot_agglomerative_clustering.py\n    bicluster/\n        plot_bicluster_newsgroups.py\n        plot_spectral_biclustering.py\n        plot_spectral_coclustering.py\n    svm/\n        plot_svm_nonlinear.py\n        plot_custom_kernel.py\n        plot_separating_hyperplane_unbalanced.py\n        plot_svm_margin.py\n        plot_iris.py\n        plot_svm_scale_c.py\n        plot_separating_hyperplane.py\n        plot_svm_kernels.py\n        plot_oneclass.py\n        plot_weighted_samples.py\n        plot_rbf_parameters.py\n        plot_svm_anova.py\n        plot_svm_regression.py\n    calibration/\n        plot_compare_calibration.py\n        plot_calibration_curve.py\n        plot_calibration_multiclass.py\n        plot_calibration.py\n    linear_model/\n        plot_sgd_iris.py\n        plot_lasso_coordinate_descent_path.py\n        plot_sparse_logistic_regression_20newsgroups.py\n        plot_sgd_separating_hyperplane.py\n        plot_ransac.py\n        plot_omp.py\n        plot_lasso_dense_vs_sparse_data.py\n        plot_lasso_and_elasticnet.py\n        plot_lasso_model_selection.py\n        plot_ridge_coeffs.py\n        plot_bayesian_ridge.py\n        plot_ols_3d.py\n        plot_huber_vs_ridge.py\n        plot_sgd_loss_functions.py\n        plot_ridge_path.py\n        plot_theilsen.py\n        plot_lasso_lars.py\n        plot_ols_ridge_variance.py\n        plot_logistic_multinomial.py\n        plot_sgd_weighted_samples.py\n        plot_sparse_logistic_regression_mnist.py\n        plot_logistic_l1_l2_sparsity.py\n        plot_iris_logistic.py\n        plot_robust_fit.py\n        plot_sgd_comparison.py\n        plot_polynomial_interpolation.py\n        plot_multi_task_lasso_support.py\n        plot_logistic.py\n        plot_ols.py\n        plot_ard.py\n        plot_logistic_path.py\n        plot_sgd_penalties.py\n    classification/\n        plot_digits_classification.py\n        plot_classification_probability.py\n        plot_classifier_comparison.py\n        plot_lda.py\n        plot_lda_qda.py\n    manifold/\n        plot_mds.py\n        plot_t_sne_perplexity.py\n        plot_swissroll.py\n        plot_manifold_sphere.py\n        plot_compare_methods.py\n        plot_lle_digits.py\n    mixture/\n        plot_gmm.py\n        plot_gmm_pdf.py\n        plot_concentration_prior.py\n        plot_gmm_selection.py\n        plot_gmm_sin.py\n        plot_gmm_covariances.py\n    gaussian_process/\n        plot_gpc.py\n        plot_gpc_iris.py\n        plot_gpr_co2.py\n        plot_gpr_noisy.py\n        plot_compare_gpr_krr.py\n        plot_gpc_xor.py\n        plot_gpr_noisy_targets.py\n        plot_gpr_prior_posterior.py\n        plot_gpc_isoprobability.py\n    model_selection/\n        plot_underfitting_overfitting.py\n        plot_roc_crossval.py\n        plot_precision_recall.py\n        grid_search_text_feature_extraction.py\n        plot_confusion_matrix.py\n        plot_nested_cross_validation_iris.py\n        plot_learning_curve.py\n        plot_randomized_search.py\n        plot_validation_curve.py\n        plot_grid_search_digits.py\n        plot_train_error_vs_test_error.py\n        plot_multi_metric_evaluation.py\n        plot_roc.py\n    preprocessing/\n        plot_scaling_importance.py\n        plot_power_transformer.py\n        plot_transformed_target.py\n        plot_function_transformer.py\n        plot_all_scaling.py\n    covariance/\n        plot_robust_vs_empirical_covariance.py\n        plot_covariance_estimation.py\n        plot_sparse_cov.py\n        plot_outlier_detection.py\n        plot_lw_vs_oas.py\n        plot_mahalanobis_distances.py\n    ensemble/\n        plot_adaboost_hastie_10_2.py\n        plot_gradient_boosting_quantile.py\n        plot_adaboost_multiclass.py\n        plot_forest_importances_faces.py\n        plot_gradient_boosting_regularization.py\n        plot_forest_importances.py\n        plot_partial_dependence.py\n        plot_gradient_boosting_regression.py\n        plot_ensemble_oob.py\n        plot_random_forest_regression_multioutput.py\n        plot_forest_iris.py\n        plot_gradient_boosting_oob.py\n        plot_adaboost_twoclass.py\n        plot_voting_probas.py\n        plot_gradient_boosting_early_stopping.py\n        plot_adaboost_regression.py\n        plot_voting_decision_regions.py\n        plot_isolation_forest.py\n        plot_feature_transformation.py\n        plot_bias_variance.py\n        plot_random_forest_embedding.py\n    datasets/\n        plot_random_multilabel_dataset.py\n        plot_digits_last_image.py\n        plot_random_dataset.py\n        plot_iris_dataset.py\n    feature_selection/\n        plot_select_from_model_boston.py\n        plot_feature_selection.py\n        plot_rfe_digits.py\n        plot_feature_selection_pipeline.py\n        plot_permutation_test_for_classification.py\n        plot_f_test_vs_mi.py\n        plot_rfe_with_cross_validation.py\n    applications/\n        plot_out_of_core_classification.py\n        plot_face_recognition.py\n        plot_tomography_l1_reconstruction.py\n        plot_model_complexity_influence.py\n        plot_outlier_detection_housing.py\n        plot_prediction_latency.py\n        plot_stock_market.py\n        svm_gui.py\n        plot_topics_extraction_with_nmf_lda.py\n        wikipedia_principal_eigenvector.py\n        plot_species_distribution_modeling.py\n    text/\n        plot_document_classification_20newsgroups.py\n        plot_document_clustering.py\n        plot_hashing_vs_dict_vectorizer.py\n    multioutput/\n        plot_classifier_chain_yeast.py\nsklearn/\n    base.py\n    kernel_ridge.py\n    discriminant_analysis.py\n    naive_bayes.py\n    multiclass.py\n    kernel_approximation.py\n    multioutput.py\n    __init__.py\n    random_projection.py\n    dummy.py\n    isotonic.py\n    exceptions.py\n    learning_curve.py\n    setup.py\n    calibration.py\n    grid_search.py\n    cross_validation.py\n    pipeline.py\n    metrics/\n        base.py\n        __init__.py\n        scorer.py\n        classification.py\n        regression.py\n        setup.py\n        ranking.py\n        pairwise.py\n        cluster/\n            supervised.py\n            bicluster.py\n            unsupervised.py\n            __init__.py\n            setup.py\n    _build_utils/\n        __init__.py\n    neighbors/\n        base.py\n        unsupervised.py\n        lof.py\n        approximate.py\n        __init__.py\n        classification.py\n        kde.py\n        regression.py\n        setup.py\n        nearest_centroid.py\n        graph.py\n    cross_decomposition/\n        pls_.py\n        __init__.py\n        cca_.py\n    semi_supervised/\n        label_propagation.py\n        __init__.py\n    tree/\n        tree.py\n        __init__.py\n        export.py\n        setup.py\n    decomposition/\n        kernel_pca.py\n        base.py\n        nmf.py\n        pca.py\n        factor_analysis.py\n        __init__.py\n        fastica_.py\n        setup.py\n        incremental_pca.py\n        sparse_pca.py\n        truncated_svd.py\n        dict_learning.py\n        online_lda.py\n    cluster/\n        mean_shift_.py\n        hierarchical.py\n        affinity_propagation_.py\n        bicluster.py\n        k_means_.py\n        __init__.py\n        birch.py\n        _feature_agglomeration.py\n        spectral.py\n        setup.py\n        dbscan_.py\n    svm/\n        base.py\n        classes.py\n        bounds.py\n        __init__.py\n        setup.py\n    neural_network/\n        _stochastic_optimizers.py\n        __init__.py\n        _base.py\n        multilayer_perceptron.py\n        rbm.py\n    __check_build/\n        __init__.py\n        setup.py\n    linear_model/\n        base.py\n        logistic.py\n        stochastic_gradient.py\n        theil_sen.py\n        __init__.py\n        omp.py\n        coordinate_descent.py\n        setup.py\n        bayes.py\n        randomized_l1.py\n        sag.py\n        huber.py\n        passive_aggressive.py\n        perceptron.py\n        least_angle.py\n        ransac.py\n        ridge.py\n    manifold/\n        spectral_embedding_.py\n        __init__.py\n        mds.py\n        setup.py\n        isomap.py\n        t_sne.py\n        locally_linear.py\n    externals/\n        six.py\n        funcsigs.py\n        __init__.py\n        setup.py\n        conftest.py\n        _pilutil.py\n        joblib/\n            my_exceptions.py\n            hashing.py\n            _multiprocessing_helpers.py\n            _memory_helpers.py\n            _parallel_backends.py\n            numpy_pickle.py\n            numpy_pickle_compat.py\n            __init__.py\n            disk.py\n            logger.py\n            _compat.py\n            func_inspect.py\n            memory.py\n            numpy_pickle_utils.py\n            backports.py\n            parallel.py\n            format_stack.py\n            pool.py\n    feature_extraction/\n        hashing.py\n        stop_words.py\n        __init__.py\n        text.py\n        image.py\n        dict_vectorizer.py\n        setup.py\n    mixture/\n        base.py\n        gaussian_mixture.py\n        bayesian_mixture.py\n        __init__.py\n        dpgmm.py\n        gmm.py\n    gaussian_process/\n        gpc.py\n        regression_models.py\n        correlation_models.py\n        gaussian_process.py\n        __init__.py\n        kernels.py\n        gpr.py\n    model_selection/\n        _validation.py\n        _split.py\n        __init__.py\n        _search.py\n    preprocessing/\n        data.py\n        label.py\n        _function_transformer.py\n        __init__.py\n        _target.py\n        imputation.py\n    utils/\n        linear_assignment_.py\n        stats.py\n        multiclass.py\n        bench.py\n        estimator_checks.py\n        _scipy_sparse_lsqr_backport.py\n        arpack.py\n        random.py\n        __init__.py\n        _unittest_backport.py\n        deprecation.py\n        mocking.py\n        fixes.py\n        class_weight.py\n        optimize.py\n        setup.py\n        metaestimators.py\n        validation.py\n        graph.py\n        extmath.py\n        sparsefuncs.py\n        sparsetools/\n            __init__.py\n            setup.py\n    covariance/\n        robust_covariance.py\n        graph_lasso_.py\n        __init__.py\n        empirical_covariance_.py\n        shrunk_covariance_.py\n        elliptic_envelope.py\n    ensemble/\n        base.py\n        partial_dependence.py\n        voting_classifier.py\n        weight_boosting.py\n        iforest.py\n        __init__.py\n        setup.py\n        gradient_boosting.py\n        forest.py\n        bagging.py\n    datasets/\n        svmlight_format.py\n        base.py\n        olivetti_faces.py\n        lfw.py\n        covtype.py\n        california_housing.py\n        samples_generator.py\n        __init__.py\n        mldata.py\n        kddcup99.py\n        setup.py\n        rcv1.py\n        species_distributions.py\n        twenty_newsgroups.py\n        mlcomp.py\n    feature_selection/\n        base.py\n        mutual_info_.py\n        variance_threshold.py\n        from_model.py\n        __init__.py\n        univariate_selection.py\n        rfe.py\nbenchmarks/\n    bench_saga.py\n    bench_isolation_forest.py\n    bench_lof.py\n    bench_plot_randomized_svd.py\n    bench_glmnet.py\n    bench_isotonic.py\n    bench_tree.py\n    bench_plot_fastkmeans.py\n    bench_lasso.py\n    bench_random_projections.py\n    bench_plot_neighbors.py\n    bench_multilabel_metrics.py\n    bench_plot_nmf.py\n    bench_text_vectorizers.py\n    bench_plot_lasso_path.py\n    plot_tsne_mnist.py\n    bench_mnist.py\n    bench_sgd_regression.py\n    bench_plot_incremental_pca.py\n    bench_sparsify.py\n    bench_covertype.py\n    bench_20newsgroups.py\n    bench_plot_ward.py\n    bench_plot_svd.py\n    bench_glm.py\n    bench_rcv1_logreg_convergence.py\n    bench_plot_omp_lars.py\n    bench_plot_parallel_pairwise.py\n    bench_tsne_mnist.py\n    bench_sample_without_replacement.py\n\n###\n\nPlease only provide the full path and return at most 5 files.\nThe returned files should be separated by new lines ordered by most to least important and wrapped with ```\nFor example:\n```\nfile1.py\nfile2.py\n```"}
